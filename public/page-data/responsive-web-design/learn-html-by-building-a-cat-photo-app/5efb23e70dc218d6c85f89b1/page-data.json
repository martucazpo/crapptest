{"componentChunkName":"component---src-templates-lesson-jsx","path":"/responsive-web-design/learn-html-by-building-a-cat-photo-app/5efb23e70dc218d6c85f89b1/","result":{"data":{"markdownRemark":{"id":"63aadaa5-ad45-5138-a382-443fe38127e8","frontmatter":{"challengeType":0,"dashedName":"step-38","title":"Step 38","id":"5efb23e70dc218d6c85f89b1"},"rawMarkdownBody":"\n# --description--\n\nThere are many kinds of inputs you can create using the `type` attribute. You can easily create a password field, reset button, or a control to let users select a file from their computer.\n\nCreate a text field to get text input from a user by adding the `type` attribute with the value `text` to the `input` element.\n\n# --hints--\n\nYou have either deleted your `input` element or it has invalid syntax. If you have added attributes, make sure their values are surrounded by quotation marks.\n\n```js\nassert($('input').length);\n```\n\nYour `form` element should only contain the `input` element. Remove any extra HTML elements or text between the `form` element's tags.\n\n```js\nassert(\n  $('form')[0].children.length === 1 &&\n    $('form')[0].innerText.trim().length === 0\n);\n```\n\nYour `input` element does not have a `type` attribute with the value `text`. Check that there is a space after the opening tag's name and/or there are spaces before all attribute names.\n\n```js\nassert($('input')[0].hasAttribute('type'));\n```\n\nYour `input` element should have a `type` attribute with the value `text`. You have either omitted the value or have a typo. Remember that attribute values should be surrounded with quotation marks.\n\n```js\nassert(\n  $('input')[0]\n    .getAttribute('type')\n    .replace(/\\s+/g, ' ')\n    .match(/^text$/i)\n);\n```\n\nAlthough you have set the `input` element's `type` attribute to the `text`, it is recommended to always surround the value of an attribute with quotation marks.\n\n```js\nassert(!/\\<input\\s+type\\s*=\\s*text/.test(code));\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<html>\n  <body>\n    <main>\n      <h1>CatPhotoApp</h1>\n      <section>\n        <h2>Cat Photos</h2>\n        <!-- TODO: Add link to cat photos -->\n        <p>See more <a target=\"_blank\" href=\"#\">cat photos</a> in our gallery.</p>\n        <a href=\"#\"><img src=\"/images/relaxing-cat.jpg\" alt=\"A cute orange cat lying on its back.\"></a>\n      </section>\n      <section>\n        <h2>Cat Lists</h2>\n        <h3>Things cats love:</h3>\n        <ul>\n          <li>cat nip</li>\n          <li>laser pointers</li>\n          <li>lasagna</li>\n        </ul>\n        <figure>\n          <img src=\"/images/lasagna.jpg\" alt=\"A slice of lasagna on a plate.\">\n          <figcaption>Cats <em>love</em> lasagna.</figcaption>  \n        </figure>\n        <h3>Top 3 things cats hate:</h3>\n        <ol>\n          <li>flea treatment</li>\n          <li>thunder</li>\n          <li>other cats</li>\n        </ol>\n        <figure>\n          <img src=\"/images/cats.jpg\" alt=\"Five cats looking around a field.\">\n          <figcaption>Cats <strong>hate</strong> other cats.</figcaption>  \n        </figure>\n      </section>\n      <section>\n        <h2>Cat Form</h2>\n        <form action=\"\">\n--fcc-editable-region--\n          <input>\n--fcc-editable-region--\n        </form>\n      </section>\n    </main>\n  </body>\n</html>\n```\n\n"}},"pageContext":{"relativeDirectory":"responsive-web-design/learn-html-by-building-a-cat-photo-app","id":"5efb23e70dc218d6c85f89b1","dashedName":"step-38"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}