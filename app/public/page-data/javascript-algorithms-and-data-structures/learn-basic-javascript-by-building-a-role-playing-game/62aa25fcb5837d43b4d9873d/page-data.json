{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-basic-javascript-by-building-a-role-playing-game/62aa25fcb5837d43b4d9873d/","result":{"data":{"markdownRemark":{"id":"82baabf2-0b92-5363-90f7-c85b6b3326c5","frontmatter":{"challengeType":0,"dashedName":"step-160","title":"Step 160","id":"62aa25fcb5837d43b4d9873d"},"rawMarkdownBody":"\n# --description--\n\nAdd another object to your `locations` array. Set `name` to `easter egg`, set `button text` to an array with the strings `2`, `8`, and `Go to town square?`, set `button functions` to an array with the variables `pickTwo`, `pickEight`, and `goTown`, and `text` to `You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!`.\n\n# --hints--\n\nYour `locations` array should have 8 values.\n\n```js\nassert.lengthOf(locations, 8);\n```\n\nYour eighth `locations` value should be an object.\n\n```js\nassert.isObject(locations[7]);\n```\n\nYour eighth `locations` value should have a `name` property with the value `easter egg`.\n\n```js\nassert.equal(locations[7].name, \"easter egg\");\n```\n\nYour eighth `locations` value should have a `button text` array with the strings `2`, `8`, and `Go to town square?`.\n\n```js\nassert.deepEqual(locations[7][\"button text\"], [\"2\", \"8\", \"Go to town square?\"]);\n```\n\nYour eighth `locations` value should have a `button functions` an array with the variables `pickTwo`, `pickEight`, and `goTown`.\n\n```js\nassert.deepEqual(locations[7][\"button functions\"], [pickTwo, pickEight, goTown]);\n```\n\nYour eighth `locations` value should have a `text` property with the value `You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!`.\n\n```js\nassert.equal(locations[7].text, \"You find a secret game. Pick a number above. Ten numbers will be randomly chosen between 0 and 10. If the number you choose matches one of the random numbers, you win!\");\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n</head>\n<body>\n    <div id=\"game\">\n        <div id=\"stats\">\n            <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n            <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n            <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n        </div>\n        <div id=\"controls\">\n            <button id=\"button1\">Go to store</button>\n            <button id=\"button2\">Go to cave</button>\n            <button id=\"button3\">Fight dragon</button>\n        </div>\n        <div id=\"monsterStats\">\n            <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n            <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n        </div>\n        <div id=\"text\">\n            Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n        </div>\n    </div>\n    <script src=\"./script.js\"></script>\n</body>\n</html>\n```\n\n```css\nbody {\n    background-color: darkblue;\n}\n\n#text {\n    background-color: black;\n    color: white;\n    padding: 10px;\n}\n\n#game {\n    max-width: 500px;\n    max-height: 400px;\n    background-color: lightgray;\n    color: white;\n    margin: 0 auto;\n    padding: 10px;\n}\n\n#controls, #stats {\n    border: 1px solid black;\n    padding: 5px;\n    color: black;\n}\n\n#monsterStats {\n    display: none;\n    border: 1px solid black;\n    padding: 5px;\n    color: white;\n    background-color: red;\n}\n\n.stat {\n    padding-right: 10px;\n}\n```\n\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeapon = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText =document.querySelector(\"#monsterHealth\");\nconst weapons = [\n  { name: 'stick', power: 5 },\n  { name: 'dagger', power: 30 },\n  { name: 'claw hammer', power: 50 },\n  { name: 'sword', power: 100 }\n];\nconst monsters = [\n  {\n    name: \"slime\",\n    level: 2,\n    health: 15\n  },\n  {\n    name: \"fanged beast\",\n    level: 8,\n    health: 60\n  },\n  {\n    name: \"dragon\",\n    level: 20,\n    health: 300\n  }\n]\nconst locations = [\n    {\n        name: \"town square\",\n        \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n        \"button functions\": [goStore, goCave, fightDragon],\n        text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n    },\n    {\n        name: \"store\",\n        \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n        \"button functions\": [buyHealth, buyWeapon, goTown],\n        text: \"You enter the store.\"\n    },\n    {\n        name: \"cave\",\n        \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n        \"button functions\": [fightSlime, fightBeast, goTown],\n        text: \"You enter the cave. You see some monsters.\"\n    },\n    {\n        name: \"fight\",\n        \"button text\": [\"Attack\", \"Dodge\", \"Run\"],\n        \"button functions\": [attack, dodge, goTown],\n        text: \"You are fighting a monster.\"\n    },\n    {\n        name: \"kill monster\",\n        \"button text\": [\"Go to town square\", \"Go to town square\", \"Go to town square\"],\n        \"button functions\": [goTown, goTown, goTown],\n        text: 'The monster screams \"Arg!\" as it dies. You gain experience points and find gold.'\n    },\n    {\n        name: \"lose\",\n        \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"],\n        \"button functions\": [restart, restart, restart],\n        text: \"You die. ☠️\"\n    },\n    { \n        name: \"win\", \n        \"button text\": [\"REPLAY?\", \"REPLAY?\", \"REPLAY?\"], \n        \"button functions\": [restart, restart, restart], \n        text: \"You defeat the dragon! YOU WIN THE GAME! 🎉\" \n--fcc-editable-region--\n    }\n\n--fcc-editable-region--\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  monsterStats.style.display = \"none\";\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction buyHealth() {\n  if (gold >= 10) {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  } else {\n    text.innerText = \"You do not have enough gold to buy health.\";\n  }\n}\n\nfunction buyWeapon() {\n  if (currentWeapon < weapons.length - 1) {\n    if (gold >= 30) {\n      gold -= 30;\n      currentWeapon++;\n      goldText.innerText = gold;\n      let newWeapon = weapons[currentWeapon].name;\n      text.innerText = \"You now have a \" + newWeapon + \".\";\n      inventory.push(newWeapon);\n      text.innerText += \" In your inventory you have: \" + inventory;\n    } else {\n      text.innerText = \"You do not have enough gold to buy a weapon.\";\n    }\n  } else {\n    text.innerText = \"You already have the most powerful weapon!\";\n    button2.innerText = \"Sell weapon for 15 gold\";\n    button2.onclick = sellWeapon;\n  }\n}\n\nfunction sellWeapon() {\n  if (inventory.length > 1) {\n    gold += 15;\n    goldText.innerText = gold;\n    let currentWeapon = inventory.shift();\n    text.innerText = \"You sold a \" + currentWeapon + \".\";\n    text.innerText += \" In your inventory you have: \" + inventory;\n  } else {\n    text.innerText = \"Don't sell your only weapon!\";\n  }\n}\n\nfunction fightSlime() {\n  fighting = 0;\n  goFight();\n}\n\nfunction fightBeast() {\n  fighting = 1;\n  goFight();\n}\n\nfunction fightDragon() {\n  fighting = 2;\n  goFight();\n}\n\nfunction goFight() {\n  update(locations[3]);\n  monsterHealth = monsters[fighting].health;\n  monsterStats.style.display = \"block\";\n  monsterName.innerText = monsters[fighting].name;\n  monsterHealthText.innerText = monsterHealth;\n}\n\nfunction attack() {\n  text.innerText = \"The \" + monsters[fighting].name + \" attacks.\";\n  text.innerText += \" You attack it with your \" + weapons[currentWeapon].name + \".\";\n  health -= getMonsterAttackValue(monsters[fighting].level);\n  if (isMonsterHit()) {\n    monsterHealth -= weapons[currentWeapon].power + Math.floor(Math.random() * xp) + 1;    \n  } else {\n    text.innerText += \" You miss.\";\n  }\n  healthText.innerText = health;\n  monsterHealthText.innerText = monsterHealth;\n  if (health <= 0) {\n    lose();\n  } else if (monsterHealth <= 0) {\n    fighting === 2 ? winGame() : defeatMonster();\n  }\n  if (Math.random() <= .1 && inventory.length !== 1) {\n    text.innerText += \" Your \" + inventory.pop() + \" breaks.\";\n    currentWeapon--;\n  }\n}\n\nfunction getMonsterAttackValue(level) {\n  const hit = (level * 5) - (Math.floor(Math.random() * xp));\n  console.log(hit);\n  return hit > 0 ? hit : 0;\n}\n\nfunction isMonsterHit() {\n  return Math.random() > .2 || health < 20;\n}\n\nfunction dodge() {\n  text.innerText = \"You dodge the attack from the \" + monsters[fighting].name;\n}\n\nfunction defeatMonster() {\n  gold += Math.floor(monsters[fighting].level * 6.7);\n  xp += monsters[fighting].level;\n  goldText.innerText = gold;\n  xpText.innerText = xp;\n  update(locations[4]);\n}\n\nfunction lose() {\n  update(locations[5]);\n}\n\nfunction winGame() {\n  update(locations[6]);\n}\n\nfunction restart() {\n  xp = 0;\n  health = 100;\n  gold = 50;\n  currentWeapon = 0;\n  inventory = [\"stick\"];\n  goldText.innerText = gold;\n  healthText.innerText = health;\n  xpText.innerText = xp;\n  goTown();\n}\n\nfunction easterEgg() {\n  update(locations[7]);\n}\n\nfunction pickTwo() {\n  pick(2);\n}\n\nfunction pickEight() {\n  pick(8);\n}\n\nfunction pick(guess) {\n\n}\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-basic-javascript-by-building-a-role-playing-game","id":"62aa25fcb5837d43b4d9873d","dashedName":"step-160"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}