{"version":3,"file":"component---src-pages-directory-relative-directory-directory-name-jsx-abd582f22374c34a9a47.js","mappings":"+KAKe,SAASA,EAAI,GAAW,IAAX,KAAEC,GAAM,EAClC,OACE,uBAAKC,UAAU,UACb,gBAAC,KAAI,CAACC,GAAG,KAAI,QAEXF,EAAKG,aAAaC,MAAMC,KAAIC,IAC1B,MAAMC,GAAOC,EAAAA,EAAAA,GAAWF,EAAKG,KAAKF,MAC5BG,EAAKJ,EAAKG,KAAKC,GACfC,EAAI,eAAkBL,EAAKG,KAAKG,aACtC,OAAO,gBAAC,KAAI,CAACV,GAAIS,EAAME,IAAKH,GAAKH,EAAY,IAKvD,CCYA,MA3Be,KACX,MAAMP,GAAOc,EAAAA,EAAAA,IAAe,cAmB5B,OACI,8BACI,gBAACf,EAAG,CAACC,KAAMA,IACN,ECTjB,MAdgBe,GAER,2BACA,gBAAC,EAAM,MACP,uBAAKd,UAAU,WACVc,EAAMC,UAEX,0BAAQf,UAAU,UACd,yBAAG,S,uDCZR,MAAMO,EAAcD,GAChBA,EAAKU,MAAM,KAAKZ,KAAIa,GACVA,EAAK,GAAGC,cACVD,EAAKE,MAAM,KAEvBC,KAAK,I,gHC0DZ,MAzDgB,IAAe,IACzBC,GADW,KAAEtB,GAAM,EAEvB,GAAsB,oBAAXuB,OAAwB,CACjCD,EAAWC,OAAOD,SAASE,KAC3B,MAAMC,EAAYzB,EAAK0B,QAAQtB,MAAMuB,QAAOrB,GAAQ,GAAGA,EAAKG,KAAKmB,mBAA2BN,EAASL,MAAM,MAAM,GAAE,IAAIK,EAASL,MAAM,MAAM,KAAMY,MAAK,CAACC,EAAGC,IAClJC,SAASF,EAAErB,KAAKwB,oBAAoBC,YAAYC,MAAMlB,MAAM,KAAK,IAAMe,SAASD,EAAEtB,KAAKwB,oBAAoBC,YAAYC,MAAMlB,MAAM,KAAK,MAEjJ,OACE,gBAACmB,EAAA,EAAM,KACL,uBAAKnC,UCbU,oCDcb,2BAAKO,EAAAA,EAAAA,GAAWc,EAASL,MAAM,MAAM,MAEvC,uBAAKhB,UCfS,mCDiBVwB,EAAUpB,KAAIC,GAAQ,wBAAMO,IAAKP,EAAKG,KAAKC,GAAIT,UCnBtC,kCDmBwE,gBAAC,KAAI,CAACC,GAAE,IAAMI,EAAKG,KAAKmB,kBAAiB,IAAItB,EAAKG,KAAKwB,oBAAoBC,YAAYxB,IAAOJ,EAAKG,KAAKwB,oBAAoBC,YAAYG,gBAKnO,CACE,OAAO,IACT,C","sources":["webpack://curriculum/./src/components/Nav.jsx","webpack://curriculum/./src/components/Header.jsx","webpack://curriculum/./src/components/Layout.jsx","webpack://curriculum/./src/js/scripts.js","webpack://curriculum/./src/pages/{Directory.relativeDirectory}/{Directory.name}.jsx","webpack://curriculum/./src/styles/project.module.css"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { formatName } from \"../js/scripts\"\n\n\nexport default function Nav({ data }) {\n  return (\n    <nav className=\"navbar\">\n      <Link to=\"/\">Home</Link>\n      {\n        data.allDirectory.edges.map(edge => {\n          const name = formatName(edge.node.name)\n          const id = edge.node.id\n          const path = `/curriculum/${edge.node.relativePath}`\n          return <Link to={path} key={id}>{name}</Link>\n        })\n      }\n    </nav>\n  )\n}\n\n\n","import React from \"react\"\nimport Nav from \"./Nav\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst Header = () => {\n    const data = useStaticQuery(\n        graphql`\n        query navQuery {\n            allDirectory(\n              filter: {sourceInstanceName: {eq: \"curriculum\"}, relativeDirectory: {eq: \"\"}}\n            ) {\n              edges {\n                node {\n                  id\n                  name\n                  relativePath\n                  relativeDirectory\n                  sourceInstanceName\n                }\n              }\n            }\n          }\n        `\n    )\n    return (\n        <header>\n            <Nav data={data}/>\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\"\nimport Header from \"./Header\"\nimport \"../styles/index.css\"\n\nconst Layout = (props) =>{\n      return (\n        <div>\n        <Header/>\n        <div className=\"content\">\n            {props.children}\n        </div>\n        <footer className=\"footer\">\n            <p>2023</p>\n        </footer>\n    </div>\n      )\n}\n\nexport default Layout","export const formatName = (name) => {\n    return name.split(\"-\").map(word => {\n        let newCap = word[0].toUpperCase()\n        let tail = word.slice(1)\n        return newCap += tail\n    }).join(\" \")\n}","import React from \"react\"\nimport Layout from \"../../components/Layout\"\nimport { graphql, Link } from \"gatsby\"\nimport { formatName } from \"../../js/scripts\"\nimport * as projectStyles from \"../../styles/project.module.css\"\n\nconst Project = ({ data }) => {\n  let location\n  if (typeof window !== \"undefined\") {\n    location = window.location.href\n    const dataBlock = data.allFile.edges.filter(edge => `${edge.node.relativeDirectory}` === `${location.split(/\\//)[3]}/${location.split(/\\//)[4]}`).sort((a, b) => {\n      return parseInt(a.node.childMarkdownRemark.frontmatter.title.split(\" \")[1]) - parseInt(b.node.childMarkdownRemark.frontmatter.title.split(\" \")[1])\n    })\n    return (\n      <Layout>\n        <div className={projectStyles.headerDiv}>\n          <h3>{formatName(location.split(/\\//)[4])}</h3>\n        </div>\n        <div className={projectStyles.linkGrid}>\n          {\n            dataBlock.map(edge => <span key={edge.node.id} className={projectStyles.btnSpan}><Link to={`/${edge.node.relativeDirectory}/${edge.node.childMarkdownRemark.frontmatter.id}`}>{edge.node.childMarkdownRemark.frontmatter.dashedName}</Link></span>)\n          }\n        </div>\n      </Layout>\n    )\n  } else {\n    return null\n  }\n}\n\nexport const projectsData = graphql`\nquery projects{\n    allFile(\n      sort: {relativeDirectory: ASC}\n    ) {\n      edges {\n        node {\n          name\n          relativeDirectory\n          childMarkdownRemark {\n            frontmatter {\n              challengeType\n              title\n              dashedName\n              id\n            }\n          }\n          id\n          sourceInstanceName\n        }\n      }\n      group(field: {relativeDirectory: SELECT}) {\n        edges {\n          node {\n            id\n          }\n        }\n      }\n    }\n  }\n`\n\n\nexport default Project","// extracted by mini-css-extract-plugin\nexport var btnSpan = \"project-module--btnSpan--bd2ba\";\nexport var headerDiv = \"project-module--headerDiv--5aba5\";\nexport var linkGrid = \"project-module--linkGrid--393ef\";"],"names":["Nav","data","className","to","allDirectory","edges","map","edge","name","formatName","node","id","path","relativePath","key","useStaticQuery","props","children","split","word","toUpperCase","slice","join","location","window","href","dataBlock","allFile","filter","relativeDirectory","sort","a","b","parseInt","childMarkdownRemark","frontmatter","title","Layout","dashedName"],"sourceRoot":""}