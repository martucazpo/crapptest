{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-basic-javascript-by-building-a-role-playing-game/62a3b41c9494f937560640ab/","result":{"data":{"markdownRemark":{"id":"14c73268-4706-51d1-afb4-bc81e73ee7e7","frontmatter":{"challengeType":0,"dashedName":"step-25","title":"Step 25","id":"62a3b41c9494f937560640ab"},"rawMarkdownBody":"\n# --description--\n\nDeclare two more variables named `monsterHealth` and `inventory`, but do not initialize them.\n\n# --hints--\n\nYou should use `let` to declare your `monsterHealth` variable.\n\n```js\nassert.match(code, /let monsterHealth/i);\n```\n\nYou should use camelCase to name your `monsterHealth` variable.\n\n```js\nassert.match(code, /monsterHealth/);\n```\n\n`monsterHealth` should not have a value.\n\n```js\nassert.isUndefined(monsterHealth);\n```\n\nYou should not assign a value to your `monsterHealth` variable. Remember your semi-colon.\n\n```js\nassert.match(code, /let monsterHealth;/);\n```\n\nYou should use `let` to declare your `inventory` variable.\n\n```js\nassert.match(code, /let inventory/i);\n```\n\n`inventory` should not have a value.\n\n```js\nassert.isUndefined(inventory);\n```\n\nYou should not assign a value to your `inventory` variable. Remember your semi-colon.\n\n```js\nassert.match(code, /let inventory;/);\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n</head>\n<body>\n    <div id=\"game\">\n        <div id=\"stats\">\n            <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n            <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n            <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n        </div>\n        <div id=\"controls\">\n            <button id=\"button1\">Go to store</button>\n            <button id=\"button2\">Go to cave</button>\n            <button id=\"button3\">Fight dragon</button>\n        </div>\n        <div id=\"monsterStats\">\n            <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n            <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n        </div>\n        <div id=\"text\">\n            Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n        </div>\n    </div>\n</body>\n</html>\n```\n\n```css\nbody {\n    background-color: darkblue;\n}\n\n#text {\n    background-color: black;\n    color: white;\n    padding: 10px;\n}\n\n#game {\n    max-width: 500px;\n    max-height: 400px;\n    background-color: lightgray;\n    color: white;\n    margin: 0 auto;\n    padding: 10px;\n}\n\n#controls, #stats {\n    border: 1px solid black;\n    padding: 5px;\n    color: black;\n}\n\n#monsterStats {\n    display: none;\n    border: 1px solid black;\n    padding: 5px;\n    color: white;\n    background-color: red;\n}\n\n.stat {\n    padding-right: 10px;\n}\n```\n\n```js\n--fcc-editable-region--\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeapon = 0;\nlet fighting;\n--fcc-editable-region--\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-basic-javascript-by-building-a-role-playing-game","id":"62a3b41c9494f937560640ab","dashedName":"step-25"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}