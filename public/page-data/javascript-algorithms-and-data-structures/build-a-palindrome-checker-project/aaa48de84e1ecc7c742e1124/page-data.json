{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/build-a-palindrome-checker-project/aaa48de84e1ecc7c742e1124/","result":{"data":{"markdownRemark":{"id":"6b869554-29fa-5e85-963b-799c4db2a91f","frontmatter":{"challengeType":5,"dashedName":"build-a-palindrome-checker","title":"Build A Palindrome Checker","id":"aaa48de84e1ecc7c742e1124"},"rawMarkdownBody":"\n# --description--\n\nReturn `true` if the given string is a palindrome. Otherwise, return `false`.\n\nA <dfn>palindrome</dfn> is a word or sentence that's spelled the same way both forward and backward, ignoring punctuation, case, and spacing.\n\n**Note:** You'll need to remove **all non-alphanumeric characters** (punctuation, spaces and symbols) and turn everything into the same case (lower or upper case) in order to check for palindromes.\n\nWe'll pass strings with varying formats, such as `racecar`, `RaceCar`, and `race CAR` among others.\n\nWe'll also pass strings with special symbols, such as `2A3*3a2`, `2A3 3a2`, and `2_A3*3#A2`.\n\n# --hints--\n\n`palindrome(\"eye\")` should return a boolean.\n\n```js\nassert(typeof palindrome('eye') === 'boolean');\n```\n\n`palindrome(\"eye\")` should return `true`.\n\n```js\nassert(palindrome('eye') === true);\n```\n\n`palindrome(\"_eye\")` should return `true`.\n\n```js\nassert(palindrome('_eye') === true);\n```\n\n`palindrome(\"race car\")` should return `true`.\n\n```js\nassert(palindrome('race car') === true);\n```\n\n`palindrome(\"not a palindrome\")` should return `false`.\n\n```js\nassert(palindrome('not a palindrome') === false);\n```\n\n`palindrome(\"A man, a plan, a canal. Panama\")` should return `true`.\n\n```js\nassert(palindrome('A man, a plan, a canal. Panama') === true);\n```\n\n`palindrome(\"never odd or even\")` should return `true`.\n\n```js\nassert(palindrome('never odd or even') === true);\n```\n\n`palindrome(\"nope\")` should return `false`.\n\n```js\nassert(palindrome('nope') === false);\n```\n\n`palindrome(\"almostomla\")` should return `false`.\n\n```js\nassert(palindrome('almostomla') === false);\n```\n\n`palindrome(\"My age is 0, 0 si ega ym.\")` should return `true`.\n\n```js\nassert(palindrome('My age is 0, 0 si ega ym.') === true);\n```\n\n`palindrome(\"1 eye for of 1 eye.\")` should return `false`.\n\n```js\nassert(palindrome('1 eye for of 1 eye.') === false);\n```\n\n`palindrome(\"0_0 (: /-\\ :) 0-0\")` should return `true`.\n\n```js\nassert(palindrome('0_0 (: /- :) 0-0') === true);\n```\n\n`palindrome(\"five|\\_/|four\")` should return `false`.\n\n```js\nassert(palindrome('five|_/|four') === false);\n```\n\n# --seed--\n\n## --seed-contents--\n\n```js\nfunction palindrome(str) {\n  return true;\n}\n\npalindrome(\"eye\");\n```\n\n# --solutions--\n\n```js\nfunction palindrome(str) {\n  var string = str.toLowerCase().split(/[^A-Za-z0-9]/gi).join('');\n  var aux = string.split('');\n  if (aux.join('') === aux.reverse().join('')){\n    return true;\n  }\n\n  return false;\n}\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/build-a-palindrome-checker-project","id":"aaa48de84e1ecc7c742e1124","dashedName":"build-a-palindrome-checker"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}