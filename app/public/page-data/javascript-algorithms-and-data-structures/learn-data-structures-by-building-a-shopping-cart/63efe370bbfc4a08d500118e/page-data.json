{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-data-structures-by-building-a-shopping-cart/63efe370bbfc4a08d500118e/","result":{"data":{"markdownRemark":{"id":"3b19c460-eecd-5ff7-8d2d-41b6d5e9dece","frontmatter":{"challengeType":0,"dashedName":"step-24","title":"Step 24","id":"63efe370bbfc4a08d500118e"},"rawMarkdownBody":"\n# --description--\n\nYou now have a small bug. When you try to access a property of an object and the property doesn't exist, you get `undefined`. This means if the dessert isn't already present in the `totalCountPerProduct` object, you end up trying to add `1` to `undefined`, which results in `NaN`.\n\nTo fix this, you can use the `||` operator to set the value to `0` if it doesn't exist. Wrap your right-hand `totalCountPerProduct[data.id]` in parentheses, and add `|| 0` to the end of the expression.\n\n# --hints--\n\nYou should wrap your right-hand `totalCountPerProduct[data.id]` in parentheses.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\[\\s*dessert\\.id\\s*\\]\\s*=\\s*\\(\\s*totalCountPerProduct\\[\\s*dessert\\.id\\s*\\]/);\n```\n\nYou should use the `||` operator.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\[\\s*dessert\\.id\\s*\\]\\s*=\\s*\\(\\s*totalCountPerProduct\\[\\s*dessert\\.id\\s*\\]\\s*\\|\\|\\s*/);\n```\n\nYou should use `0` as your fallback value.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\[\\s*dessert\\.id\\s*\\]\\s*=\\s*\\(\\s*totalCountPerProduct\\[\\s*dessert\\.id\\s*\\]\\s*\\|\\|\\s*0\\s*\\)/);\n```\n\nYou should still add `1` to the value.\n\n```js\nconst cart = new ShoppingCart();\nassert.match(cart.addItem.toString(), /totalCountPerProduct\\[\\s*dessert\\.id\\s*\\]\\s*=\\s*\\(\\s*totalCountPerProduct\\[\\s*dessert\\.id\\s*\\]\\s*\\|\\|\\s*0\\s*\\)\\s*\\+\\s*1/);\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <title>freeCodeCamp Shopping Cart</title>\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n  </head>\n  <body>\n    <header>\n      <h1 class=\"title\">Desserts Page</h1>\n    </header>\n    <main>\n      <button id=\"cart-btn\" type=\"button\" class=\"btn\">\n        <span id=\"show-hide-cart\">Show</span> Cart\n      </button>\n      <div id=\"cart-container\">\n        <button class=\"btn\" id=\"clear-cart-btn\">Clear Cart</button>\n        <div id=\"products-container\"></div>\n        <p>Total number of items: <span id=\"total-items\">0</span></p>\n        <p>Subtotal: <span id=\"subtotal\">$0</span></p>\n        <p>Taxes: <span id=\"taxes\">$0</span></p>\n        <p>Total: <span id=\"total\">$0</span></p>\n      </div>\n      <div id=\"dessert-card-container\"></div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n```\n\n```css\n*,\n*::before,\n*::after {\n  margin: 0;\n  padding: 0;\n  box-sizing: border-box;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --black: #000;\n  --white: #fff;\n  --grey: #3b3b4f;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n}\n\n.title {\n  color: var(--light-grey);\n  text-align: center;\n  margin: 25px 0;\n}\n\n#dessert-card-container {\n  display: flex;\n  flex-direction: column;\n  flex-wrap: wrap;\n  align-items: center;\n}\n\n.dessert-card {\n  background-color: var(--light-grey);\n  padding: 15px;\n  text-align: center;\n  border-radius: 15px;\n  margin: 20px 10px;\n}\n\n.dessert-price {\n  font-size: 1.2rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 100px;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#cart-btn {\n  position: absolute;\n  top: 0;\n  right: 0;\n}\n\n.add-to-cart-btn {\n  margin: 30px auto 10px;\n}\n\n#cart-container {\n  display: none;\n  position: absolute;\n  top: 60px;\n  right: 0;\n  background-color: var(--light-grey);\n  width: 200px;\n  height: 400px;\n  border: 8px double var(--black);\n  border-radius: 15px;\n  text-align: center;\n  font-size: 1.2rem;\n  overflow-y: scroll;\n}\n\n.product {\n  margin: 25px 0;\n}\n\n.product-count {\n  display: inline-block;\n  margin-right: 10px;\n}\n\n.product-category {\n  margin: 10px 0;\n}\n\n@media (min-width: 768px) {\n  #dessert-card-container {\n    flex-direction: row;\n  }\n\n  .dessert-card {\n    flex: 1 0 21%;\n  }\n\n  #cart-container {\n    width: 300px;\n  }\n}\n```\n\n```js\nconst cartContainer = document.getElementById(\"cart-container\");\nconst productsContainer = document.getElementById(\"products-container\");\nconst dessertCards = document.getElementById(\"dessert-card-container\");\nconst cartBtn = document.getElementById(\"cart-btn\");\nconst clearCartBtn = document.getElementById(\"clear-cart-btn\");\nconst totalNumberOfItems = document.getElementById(\"total-items\");\nconst cartSubTotal = document.getElementById(\"subtotal\");\nconst cartTaxes = document.getElementById(\"taxes\");\nconst cartTotal = document.getElementById(\"total\");\nconst showHideCartSpan = document.getElementById(\"show-hide-cart\");\nlet isCartShowing = false;\n\nconst products = [\n  {\n    id: 1,\n    name: \"Vanilla Cupcakes (6 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 2,\n    name: \"French Macaroon\",\n    price: 3.99,\n    category: \"Macaroon\",\n  },\n  {\n    id: 3,\n    name: \"Pumpkin Cupcake\",\n    price: 3.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 4,\n    name: \"Chocolate Cupcake\",\n    price: 5.99,\n    category: \"Cupcake\",\n  },\n  {\n    id: 5,\n    name: \"Chocolate Pretzels (4 Pack)\",\n    price: 10.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 6,\n    name: \"Strawberry Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 7,\n    name: \"Chocolate Macaroons (4 Pack)\",\n    price: 9.99,\n    category: \"Macaroon\",\n  },\n  {\n    id: 8,\n    name: \"Strawberry Pretzel\",\n    price: 4.99,\n    category: \"Pretzel\",\n  },\n  {\n    id: 9,\n    name: \"Butter Pecan Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 10,\n    name: \"Rocky Road Ice Cream\",\n    price: 2.99,\n    category: \"Ice Cream\",\n  },\n  {\n    id: 11,\n    name: \"Vanilla Macaroons (5 Pack)\",\n    price: 11.99,\n    category: \"Macaroon\",\n  },\n  {\n    id: 12,\n    name: \"Lemon Cupcakes (4 Pack)\",\n    price: 12.99,\n    category: \"Cupcake\",\n  },\n];\n\nproducts.forEach(\n  ({ name, id, price, category }) => {\n    dessertCards.innerHTML += `\n      <div class=\"dessert-card\">\n        <h2>${name}</h2>\n        <p class=\"dessert-price\">$${price}</p>\n        <p class=\"product-category\">Category: ${category}</p>\n        <button \n          id=\"${id}\" \n          class=\"btn add-to-cart-btn\">Add to cart\n        </button>\n      </div>\n    `;\n  }\n);\n\nclass ShoppingCart {\n  constructor() {\n    this.items = [];\n    this.total = 0;\n    this.taxRate = 8.25;\n  }\n\n--fcc-editable-region--\n  addItem(id, products) {\n    const product = products.find((item) => item.id === id);\n    const { name, price } = product;\n    this.items.push(product);\n\n    const totalCountPerProduct = {};\n    this.items.forEach((dessert) => {\n      totalCountPerProduct[dessert.id] = totalCountPerProduct[dessert.id] + 1;\n    })\n  }\n--fcc-editable-region--\n};\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-data-structures-by-building-a-shopping-cart","id":"63efe370bbfc4a08d500118e","dashedName":"step-24"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}