{"componentChunkName":"component---src-templates-lesson-jsx","path":"/responsive-web-design/build-a-technical-documentation-page-project/587d78b0367417b2b2512b05/","result":{"data":{"markdownRemark":{"id":"f683abe2-58c6-5517-abf6-db2d13cfa3e1","frontmatter":{"challengeType":14,"dashedName":"build-a-technical-documentation-page","title":"Build a Technical Documentation Page","id":"587d78b0367417b2b2512b05"},"rawMarkdownBody":"\n# --description--\n\n**Objective:** Build an app that is functionally similar to <a href=\"#\" target=\"_blank\" rel=\"noopener noreferrer nofollow\">#</a>\n\n**User Stories:**\n\n1. You can see a `main` element with a corresponding `id=\"main-doc\"`, which contains the page's main content (technical documentation)\n1. Within the `#main-doc` element, you can see several `section` elements, each with a class of `main-section`. There should be a minimum of five\n1. The first element within each `.main-section` should be a `header` element, which contains text that describes the topic of that section.\n1. Each `section` element with the class of `main-section` should also have an `id` that corresponds with the text of each `header` contained within it. Any spaces should be replaced with underscores (e.g. The section that contains the header \"JavaScript and Java\" should have a corresponding `id=\"JavaScript_and_Java\"`)\n1. The `.main-section` elements should contain at least ten `p` elements total (not each)\n1. The `.main-section` elements should contain at least five `code` elements total (not each)\n1. The `.main-section` elements should contain at least five `li` items total (not each)\n1. You can see a `nav` element with a corresponding `id=\"navbar\"`\n1. The navbar element should contain one `header` element which contains text that describes the topic of the technical documentation\n1. Additionally, the navbar should contain link (`a`) elements with the class of `nav-link`. There should be one for every element with the class `main-section`\n1. The `header` element in the `#navbar` must come before any link (`a`) elements in the navbar\n1. Each element with the class of `nav-link` should contain text that corresponds to the `header` text within each `section` (e.g. if you have a \"Hello world\" section/header, your navbar should have an element which contains the text \"Hello world\")\n1. When you click on a navbar element, the page should navigate to the corresponding section of the `#main-doc` element (e.g. If you click on a `.nav-link` element that contains the text \"Hello world\", the page navigates to a `section` element with that id, and contains the corresponding header)\n1. On regular sized devices (laptops, desktops), the element with `id=\"navbar\"` should be shown on the left side of the screen and should always be visible to the user\n1. Your technical documentation should use at least one media query\n\nFulfill the user stories and pass all the tests below to complete this project. Give it your own personal style. Happy Coding!\n\n**Note:** Be sure to add `<link rel=\"stylesheet\" href=\"styles.css\">` in your HTML to link your stylesheet and apply your CSS\n\n# --hints--\n\nYou should have a `main` element with an `id` of `main-doc`.\n\n```js\nconst el = document.getElementById('main-doc')\nassert(!!el)\n```\n\nYou should have at least five `section` elements with a class of `main-section`.\n\n```js\nconst els = document.querySelectorAll('#main-doc section')\nassert(els.length >= 5)\n```\n\nAll of your `.main-section` elements should be `section` elements.\n\n```js\nconst els = document.querySelectorAll('.main-section')\nels.forEach(el => {\n  if (el.tagName !== 'SECTION') assert(false)\n})\nassert(els.length > 0)\n```\n\nYou should have at least five `.main-section` elements that are descendants of `#main-doc`.\n\n```js\nconst els = document.querySelectorAll('#main-doc .main-section')\nassert(els.length >= 5)\n```\n\nThe first child of each `.main-section` should be a `header` element.\n\n```js\nconst els = document.querySelectorAll('.main-section')\nels.forEach(el => {\n  if(el.firstElementChild?.tagName !== 'HEADER') assert(false)\n})\nassert(els.length > 0)\n```\n\nNone of your `header` elements should be empty.\n\n```js\nconst els = document.querySelectorAll('header')\nels.forEach(el => {\n  if (el.innerText?.length <= 0) assert(false)\n})\nassert(els.length > 0)\n```\n\nAll of your `.main-section` elements should have an `id`.\n\n```js\nconst els = document.querySelectorAll('.main-section')\nels.forEach(el => {\n  if (!el.id || el.id === '') assert(false)\n})\nassert(els.length > 0)\n```\n\nEach `.main-section` should have an `id` that matches the text of its first child, having any spaces in the child's text replaced with underscores (`_`) for the id's.\n\n```js\nconst els = document.querySelectorAll('.main-section')\nels.forEach(el => {\n  const text = el.firstElementChild?.innerText?.replaceAll(' ', '_')\n  if (el.id?.toUpperCase() !== text?.toUpperCase()) assert(false)\n})\nassert(els.length > 0)\n```\n\nYou should have at least 10 `p` elements (total) within your `.main-section` elements.\n\n```js\nconst els = document.querySelectorAll('.main-section p')\nassert(els.length >= 10)\n```\n\nYou should have at least five `code` elements that are descendants of `.main-section` elements.\n\n```js\nconst els = document.querySelectorAll('.main-section code')\nassert(els.length >= 5)\n```\n\nYou should have at least five `li` elements that are descendants of `.main-section` elements.\n\n```js\nconst els = document.querySelectorAll('.main-section li')\nassert(els.length >= 5)\n```\n\nYou should have a `nav` element with an `id` of `navbar`.\n\n```js\nconst el = document.getElementById('navbar')\nassert(!!el && el.tagName === 'NAV')\n```\n\nYour `#navbar` should have exactly one `header` element within it.\n\n```js\nconst els = document.querySelectorAll('#navbar header')\nassert(els.length === 1)\n```\n\nYou should have at least one `a` element with a class of `nav-link`.\n\n```js\nconst els = document.querySelectorAll('a.nav-link')\nassert(els.length >= 1)\n```\n\nAll of your `.nav-link` elements should be anchor (`a`) elements.\n\n```js\nconst els = document.querySelectorAll('.nav-link')\nels.forEach(el => {\n  if (el.tagName !== 'A') assert(false)\n})\nassert(els.length > 0)\n```\n\nAll of your `.nav-link` elements should be in the `#navbar`.\n\n```js\nconst els1 = document.querySelectorAll('.nav-link')\nconst els2 = document.querySelectorAll('#navbar .nav-link')\nassert(els2.length > 0 && els1.length === els2.length)\n```\n\nYou should have the same number of `.nav-link` and `.main-section` elements.\n\n```js\nconst els1 = document.querySelectorAll('.main-section')\nconst els2 = document.querySelectorAll('.nav-link')\nassert(els1.length > 0 && els2.length > 0 && els1.length === els2.length)\n```\n\nThe `header` element in the `#navbar` should come before any link (`a`) elements also in the `#navbar`.\n\n```js\nconst navLinks = document.querySelectorAll('#navbar a.nav-link');\nconst header = document.querySelector('#navbar header');\nnavLinks.forEach((navLink) => {\n  if (\n    (\n      header.compareDocumentPosition(navLink) &\n      Node.DOCUMENT_POSITION_PRECEDING\n    ) \n  ) assert(false)\n});\nassert(!!header)\n```\n\nEach `.nav-link` should have text that corresponds to the `header` text of its related `section` (e.g. if you have a \"Hello world\" section/header, your `#navbar` should have a `.nav-link` which has the text \"Hello world\").\n\n```js\nconst headerText = Array.from(document.querySelectorAll('.main-section')).map(el =>\n  el.firstElementChild?.innerText?.trim().toUpperCase()\n)\nconst linkText = Array.from(document.querySelectorAll('.nav-link')).map(el =>\n  el.innerText?.trim().toUpperCase()\n)\nconst remainder = headerText.filter(str => linkText.indexOf(str) === -1)\nassert(headerText.length > 0 && headerText.length > 0 && remainder.length === 0)\n```\n\nEach `.nav-link` should have an `href` attribute that links to its corresponding `.main-section` (e.g. If you click on a `.nav-link` element that contains the text \"Hello world\", the page navigates to a `section` element with that id).\n\n```js\nconst hrefValues = Array.from(document.querySelectorAll('.nav-link')).map(el => el.getAttribute('href'))\nconst mainSectionIDs = Array.from(document.querySelectorAll('.main-section')).map(el => el.id)\nconst missingHrefValues = mainSectionIDs.filter(str => hrefValues.indexOf('#' + str) === -1)\nassert(hrefValues.length > 0 && mainSectionIDs.length > 0 && missingHrefValues.length === 0)\n```\n\nYour `#navbar` should always be on the left edge of the window.\n\n```js\nconst el = document.getElementById('navbar')\nconst left1 = el?.offsetLeft\nconst left2 = el?.offsetLeft\nassert(!!el && left1 >= -15 && left1 <= 15 && left2 >= -15 && left2 <= 15)\n```\n\nYour Technical Documentation project should use at least one media query.\n\n```js\nconst htmlSourceAttr = Array.from(document.querySelectorAll('source')).map(el => el.getAttribute('media'))\nconst cssCheck = new __helpers.CSSHelp(document).getCSSRules('media')\nassert(cssCheck.length > 0 || htmlSourceAttr.length > 0);\n```\n\n# --seed--\n\n## --seed-contents--\n\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n    <title>Technical Documentation Page</title>\n  </head>\n  <body>\n    <nav id=\"navbar\">\n      <header><br />Algebraic Concepts</header>\n      <hr />\n      <a href=\"#introduction\" class=\"nav-link\">Introduction</a><br />\n      <hr />\n      <a href=\"#definitions\" class=\"nav-link\">Definitions</a><br />\n      <hr />\n      <a href=\"#examples\" class=\"nav-link\">Examples</a><br />\n      <hr />\n      <a href=\"#solving_equations\" class=\"nav-link\">Solving Equations</a><br />\n      <hr />\n      <a href=\"#solving_equations_ii\" class=\"nav-link\">Solving Equations II</a\n      ><br />\n      <hr />\n      <a href=\"#solving_equations_iii\" class=\"nav-link\">Solving Equations III</a\n      ><br />\n      <hr />\n      <a href=\"#system_of_equations\" class=\"nav-link\">System of Equations</a\n      ><br />\n      <hr />\n      <a href=\"#try_it_yourself!\" class=\"nav-link\">Try it Yourself!</a><br />\n      <hr />\n      <a href=\"#more_information\" class=\"nav-link\">More Information</a><br />\n    </nav>\n    <main id=\"main-doc\">\n      <section class=\"main-section\" id=\"introduction\">\n        <header>Introduction</header>\n        <p>\n          Welcome to a basic introduction of algebra. In this tutorial, we will\n          review some of the more common algebraic concepts.\n        </p>\n      </section>\n      <section class=\"main-section\" id=\"definitions\">\n        <header>Definitions</header>\n        <p>\n          To start with, let's define some of the more common terms used in\n          algebra:\n        </p>\n        <ul>\n          <li>\n            <b>Variable:</b> A variable is an unknown value, usually represented\n            by a letter.\n          </li>\n          <li>\n            <b>Expression:</b> Essentially a mathematical object. For the\n            purpose of this tutorial, an expression is one part of an equation.\n          </li>\n          <li>\n            <b>Equation:</b> An equation is a mathematical argument in which two\n            expressions result in the same value.\n          </li>\n        </ul>\n      </section>\n      <section class=\"main-section\" id=\"examples\">\n        <header>Examples</header>\n        <p>\n          Sometimes it is easier to understand the definitions when you have a\n          physical example to look at. Here is an example of the above terms.<br /><br />\n          <code>x + 5 = 12 </code><br /><br />\n          In this above example, we have:\n        </p>\n        <ul>\n          <li><b>Variable:</b> The variable in the example is \"x\".</li>\n          <li>\n            <b>Expression:</b> There are two expressions in this example. They\n            are \"x+5\" and \"12\".\n          </li>\n          <li>\n            <b>Equation:</b> The entire example, \"x+5=12\", is an equation.\n          </li>\n        </ul>\n      </section>\n      <section class=\"main-section\" id=\"solving_equations\">\n        <header>Solving Equations</header>\n        <p>\n          The primary use for algebra is to determine an unknown value, the\n          \"variable\", with the information provided. Continuing to use our\n          example from above, we can find the value of the variable \"x\".<br /><br />\n          <code>x + 5 = 12 </code><br /><br />\n          In an equation, both sides result in the same value. So you can\n          manipulate the two expressions however you need, as long as you\n          perform the same operation (or change) to each side. You do this\n          because the goal when solving an equation is to\n          <b>get the variable into its own expression, or by itself on one side\n          of the = sign.</b><br />For this example, we want to remove the \"+5\" so the \"x\" is\n          alone. To do this, we can <em>subtract 5</em>, because subtraction is\n          the opposite operation to addition. But remember, we have to perform\n          the same operation to both sides of the equation. Now our equation\n          looks like this.<br /><br />\n          <code>x + 5 - 5 = 12 - 5</code><br /><br />\n          The equation looks like a mess right now, because we haven't completed\n          the operations. We can <b>simplify</b> this equation to make it easier\n          to read by performing the operations \"5-5\" and \"12-5\". The result\n          is:<br /><br />\n          <code>x = 7</code><br /><br />\n          We now have our solution to this equation!\n        </p>\n      </section>\n      <section class=\"main-section\" id=\"solving_equations_ii\">\n        <header>Solving Equations II</header>\n        <p>\n          Let us look at a slightly more challenging equation.<br /><br />\n          <code>3x + 4 = 13</code><br /><br />\n          Again we can start with subtraction. In this case, we want to subtract\n          4 from each side of the equation. We will also go ahead and simplify\n          with each step. So now we have:<br /><br />\n          <code>3x = 9</code><br /><br />\n          \"3x\" translates to \"3*x\", where the \"*\" symbol indicates\n          multiplication. We use the \"*\" to avoid confusion, as the \"x\" is now a\n          variable instead of a multiplication symbol. The opposite operation\n          for multiplication is division, so we need to\n          <b>divide each expression by 3</b>.<br /><br />\n          <code>x = 3</code><br /><br />\n          And now we have our solution!\n        </p>\n      </section>\n      <section class=\"main-section\" id=\"solving_equations_iii\">\n        <header>Solving Equations III</header>\n        <p>\n          Now we are getting in to more complex operations. Here is another\n          equation for us to look at:<br /><br />\n          <code>x^2 - 8 = 8</code><br /><br />\n          Our very first step will be to <b>add</b> 8 to each side. This is\n          different from our previous examples, where we had to subtract. But\n          remember, our goal is to get the variable alone by performing opposite\n          operations.<br /><br />\n          <code>x^2 = 16</code><br /><br />\n          But what does the \"^2\" mean? The \"^\" symbol is used to denote\n          exponents in situations where superscript is not available. When\n          superscript <b>is</b> available, you would see it as x<sup>2</sup>.\n          For the sake of this project, however, we will use the \"^\" symbol.<br />\n          An exponent tells you how many times the base (in our case, \"x\") is\n          multiplied by itself. So, \"x^2\" would be the same as \"x*x\". Now the\n          opposite function of multiplication is division, but we would have to\n          <b>divide both sides by \"x\"</b>. We do not want to do this, as that\n          would put an \"x\" on the other side of the equation. So instead, we\n          need to use the root operation! For an exponent of \"2\", we call this\n          the \"square root\" and denote it with \"√\". Our equation is now:\n          <br /><br />\n          <code>x = √9</code><br /><br />\n          Performing a root operation by hand can be a tedious process, so we\n          recommend using a calculator when necessary. However, we are lucky in\n          that \"9\" is a\n          <a href=\"#\">perfect square</a>, so we do not need to calculate anything. Instead, we find our\n          answer to be:<br /><br />\n          <code>x = 3</code>\n        </p>\n      </section>\n      <section class=\"main-section\" id=\"system_of_equations\">\n        <header>System of Equations</header>\n        <p>\n          As you explore your algebra studies further, you may start to run\n          across equations with more than one variable. The first such equations\n          will likely look like:<br /><br />\n          <code>y = 3x</code><br /><br />\n          An equation like this does <b>not have one single solution</b>.\n          Rather, there are a series of values for which the equation is true.\n          For example, if \"x=3\" and \"y=9\", the equation is true. These equations\n          are usually used to plot a graph. <br />\n          Getting more complicated, though, you may be given a <b>pair</b> of\n          equations. This is called a \"system of equations\", and CAN be solved.\n          Let's look at how we do this! Consider the following system of\n          equations:<br /><br />\n          <code>y = 3x | y - 6 = x</code>\n          A system of equations IS solvable, but it is a multi-step process. To\n          get started, we need to choose a variable we are solving for. Let's\n          solve for \"x\" first. From the second equation, we know that \"x\" equals\n          \"y - 6\", but we cannot simplify that further because we do not have a\n          value for \"y\". Except, thanks to the system of equations, we DO have a\n          value for \"y\". We know that \"y\" equals \"3x\". So, looking at our second\n          equation, we can replace \"y\" with \"3x\" because they have the same\n          value. We then get:<br /><br />\n          <code>3x - 6 = x</code><br /><br />\n          Now we can solve for \"x\"! We start by adding 6 to each side.<br /><br />\n          <code>3x = x + 6</code><br /><br />\n          We still need to get \"x\" by itself, so we subtract \"x\" from both sides\n          and get:<br /><br />\n          <code>2x = 6</code><br /><br />\n          If this confuses you, remember that \"3x\" is the same as \"x+x+x\".\n          Subtract an \"x\" from that and you get \"x+x\", or \"2x\". Now we divide\n          both sides by 2 and have our value for x!<br /><br />\n          <code>x = 3</code><br /><br />\n          However, our work is not done yet. We still need to find the value for\n          \"y\". Let's go back to our first equation:<br /><br />\n          <code>y = 3x</code><br /><br />\n          We have a value for \"x\" now, so let's see what happens if we put that\n          value in.<br /><br />\n          <code>y = 3*3</code><br /><br />\n          We perform the multiplication and discover that \"y=9\"! Our solution to\n          this system of equations then is:<br /><br />\n          <code>x = 3 and y = 9</code><br /><br />\n        </p>\n      </section>\n      <section class=\"main-section\" id=\"try_it_yourself!\">\n        <header>Try it Yourself!</header>\n        <p>Coming Soon!</p>\n        <p>Keep an eye out for new additions!</p>\n      </section>\n      <section class=\"main-section\" id=\"more_information\">\n        <header>More Information</header>\n        <p>Check out the following links for more information!</p>\n        <ul>\n          <li>\n            <a href=\"#\">Wolfram Alpha</a>\n            is a great source for multiple mathematic fields.\n          </li>\n          <li>\n            <a href=\"#\">Wikipedia's Algebra page</a>\n            for more general information.\n          </li>\n        </ul>\n      </section>\n    </main>\n  </body>\n  <footer>\n    <a href=\"../\">Return to Project List</a> |\n    <a href=\"#\">Return to HomePage</a>\n  </footer>\n</html>\n```\n\n```css\n* {\n  background-color: #3a3240;\n}\na {\n  color: #92869c;\n}\na:hover {\n  background-color: #92869c;\n  color: #3a3240;\n}\n#navbar {\n  border-style: solid;\n  border-width: 5px;\n  border-color: #92869c;\n  height: 100%;\n  top: -5px;\n  left: -5px;\n  padding: 5px;\n  text-align: center;\n  color: #92869c\n}\n@media (min-width: 480px) {\n  #navbar {\n    position: fixed;\n  }\n}\nmain {\n  margin-left: 220px;\n  color: #92869c\n}\nheader {\n  font-size: 20pt;\n}\ncode {\n  background-color: #92869c;\n  border-style: dashed;\n  border-width: 2px;\n  border-color: #92869c;\n  padding: 5px;\n  color: black;\n}\nfooter {\n  text-align: center;\n}\n```\n"}},"pageContext":{"relativeDirectory":"responsive-web-design/build-a-technical-documentation-page-project","id":"587d78b0367417b2b2512b05","dashedName":"build-a-technical-documentation-page"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}