{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-basic-javascript-by-building-a-role-playing-game/62a8c56247609626fa4a8d6e/","result":{"data":{"markdownRemark":{"id":"1bf39930-def3-5e8c-b479-5b48a86571d8","frontmatter":{"challengeType":0,"dashedName":"step-77","title":"Step 77","id":"62a8c56247609626fa4a8d6e"},"rawMarkdownBody":"\n# --description--\n\nThe `condition` string is just a placeholder. Change the `if` statement condition to check if `gold` is greater than or equal to `10`.\n\nHere is an `if` statement that checks if `num` is greater than or equal to `5`:\n\n```js\nif (num >= 5) {\n\n}\n```\n\n# --hints--\n\nYour `if` statement should check if `gold` is greater than or equal to `10`.\n\n```js\nassert.match(buyHealth.toString(), /if\\s*\\(gold\\s*>=\\s*10\\)/);\n```\n\nYour `buyHealth` function should update `health` and `gold` if `gold` is greater than or equal to `10`.\n\n```js\ngold = 10;\nhealth = 10;\nbuyHealth();\nassert.equal(health, 20);\nassert.equal(gold, 0);\nconst healthElement = document.getElementById('healthText');\nassert.equal(healthElement.innerText, '20');\nconst goldElement = document.getElementById('goldText');\nassert.equal(goldElement.innerText, '0');\n```\n\nYour `buyHealth` function should not update `health` and `gold` if `gold` is less than `10`.\n\n```js\ngold = 5;\nhealth = 10;\nbuyHealth();\nassert.equal(health, 10);\nassert.equal(gold, 5);\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n</head>\n<body>\n    <div id=\"game\">\n        <div id=\"stats\">\n            <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n            <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n            <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n        </div>\n        <div id=\"controls\">\n            <button id=\"button1\">Go to store</button>\n            <button id=\"button2\">Go to cave</button>\n            <button id=\"button3\">Fight dragon</button>\n        </div>\n        <div id=\"monsterStats\">\n            <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n            <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n        </div>\n        <div id=\"text\">\n            Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n        </div>\n    </div>\n    <script src=\"./script.js\"></script>\n</body>\n</html>\n```\n\n```css\nbody {\n    background-color: darkblue;\n}\n\n#text {\n    background-color: black;\n    color: white;\n    padding: 10px;\n}\n\n#game {\n    max-width: 500px;\n    max-height: 400px;\n    background-color: lightgray;\n    color: white;\n    margin: 0 auto;\n    padding: 10px;\n}\n\n#controls, #stats {\n    border: 1px solid black;\n    padding: 5px;\n    color: black;\n}\n\n#monsterStats {\n    display: none;\n    border: 1px solid black;\n    padding: 5px;\n    color: white;\n    background-color: red;\n}\n\n.stat {\n    padding-right: 10px;\n}\n```\n\n```js\nlet xp = 0;\nlet health = 100;\nlet gold = 50;\nlet currentWeapon = 0;\nlet fighting;\nlet monsterHealth;\nlet inventory = [\"stick\"];\n\nconst button1 = document.querySelector('#button1');\nconst button2 = document.querySelector(\"#button2\");\nconst button3 = document.querySelector(\"#button3\");\nconst text = document.querySelector(\"#text\");\nconst xpText = document.querySelector(\"#xpText\");\nconst healthText = document.querySelector(\"#healthText\");\nconst goldText = document.querySelector(\"#goldText\");\nconst monsterStats = document.querySelector(\"#monsterStats\");\nconst monsterName = document.querySelector(\"#monsterName\");\nconst monsterHealthText =document.querySelector(\"#monsterHealth\");\nconst locations = [\n    {\n        name: \"town square\",\n        \"button text\": [\"Go to store\", \"Go to cave\", \"Fight dragon\"],\n        \"button functions\": [goStore, goCave, fightDragon],\n        text: \"You are in the town square. You see a sign that says \\\"Store\\\".\"\n    },\n    {\n        name: \"store\",\n        \"button text\": [\"Buy 10 health (10 gold)\", \"Buy weapon (30 gold)\", \"Go to town square\"],\n        \"button functions\": [buyHealth, buyWeapon, goTown],\n        text: \"You enter the store.\"\n    },\n    {\n        name: \"cave\",\n        \"button text\": [\"Fight slime\", \"Fight fanged beast\", \"Go to town square\"],\n        \"button functions\": [fightSlime, fightBeast, goTown],\n        text: \"You enter the cave. You see some monsters.\"\n    }\n];\n\n// initialize buttons\nbutton1.onclick = goStore;\nbutton2.onclick = goCave;\nbutton3.onclick = fightDragon;\n\nfunction update(location) {\n  button1.innerText = location[\"button text\"][0];\n  button2.innerText = location[\"button text\"][1];\n  button3.innerText = location[\"button text\"][2];\n  button1.onclick = location[\"button functions\"][0];\n  button2.onclick = location[\"button functions\"][1];\n  button3.onclick = location[\"button functions\"][2];\n  text.innerText = location.text;\n}\n\nfunction goTown() {\n  update(locations[0]);\n}\n\nfunction goStore() {\n  update(locations[1]);\n}\n\nfunction goCave() {\n  update(locations[2]);\n}\n\nfunction fightDragon() {\n  console.log(\"Fighting dragon.\");\n}\n\n--fcc-editable-region--\nfunction buyHealth() {\n  if (\"condition\") {\n    gold -= 10;\n    health += 10;\n    goldText.innerText = gold;\n    healthText.innerText = health;\n  }\n}\n--fcc-editable-region--\n\nfunction buyWeapon() {\n\n}\n\nfunction fightSlime() {\n\n}\n\nfunction fightBeast() {\n\n}\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-basic-javascript-by-building-a-role-playing-game","id":"62a8c56247609626fa4a8d6e","dashedName":"step-77"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}