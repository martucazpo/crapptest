{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-functional-programming-by-building-a-spreadsheet/5d79253358e8f646cbeb2bb0/","result":{"data":{"markdownRemark":{"id":"d2cdf011-55c3-5875-9aa8-fbb5a4d902f8","frontmatter":{"challengeType":0,"dashedName":"step-15","title":"Step 15","id":"5d79253358e8f646cbeb2bb0"},"rawMarkdownBody":"\n# --description--\n\nChange the `\"+\"` in the call to `infixToFunction` to `fn`.\n\n`fn` is the operator that the user inputs (`+`, `-`, `*` or `/`) - we use `infixToFunction` to get the function that corresponds to it.\n\n# --hints--\n\nSee description above for instructions.\n\n```js\nassert(\n  code\n    .replace(/\\s/g, '')\n    .includes('str.replace(regex,(match,arg1,fn,arg2)=>infixToFunction[fn])')\n);\n```\n\n# --seed--\n\n## --before-user-code--\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"UTF-8\">\n  <title>Spreadsheet</title>\n  <style>\n    #container {\n      display: grid;\n      grid-template-columns: 50px repeat(10, 200px);\n      grid-template-rows: repeat(11, 30px);\n    }\n    .label {\n      background-color: lightgray;\n      text-align: center;\n      vertical-align: middle;\n      line-height: 30px;\n    }\n  </style>\n</head>\n<body>\n<div id=\"container\">\n  <div></div>\n</div>\n```\n\n## --after-user-code--\n\n```html\n</body>\n</html>\n```\n\n## --seed-contents--\n\n```html\n<script>\n\nconst infixToFunction = {\n  \"+\": (x, y) => x + y,\n  \"-\": (x, y) => x - y,\n  \"*\": (x, y) => x * y,\n  \"/\": (x, y) => x / y\n};\n\n--fcc-editable-region--\nconst infixEval = (str, regex) =>\n  str.replace(regex, (match, arg1, fn, arg2) =>\n    infixToFunction[\"+\"]\n  );\n--fcc-editable-region--\n\n\n</script>\n```\n\n# --solutions--\n\n```html\n<script>\nconst infixToFunction = {\n  \"+\": (x, y) => x + y,\n  \"-\": (x, y) => x - y,\n  \"*\": (x, y) => x * y,\n  \"/\": (x, y) => x / y\n};\n\nconst infixEval = (str, regex) =>\n  str.replace(regex, (match, arg1, fn, arg2) =>\n    infixToFunction[fn]\n  );\n</script>\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-functional-programming-by-building-a-spreadsheet","id":"5d79253358e8f646cbeb2bb0","dashedName":"step-15"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}