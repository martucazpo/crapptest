{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-advanced-array-methods-by-building-a-statistics-calculator/635060a5c03c950f46174cb5/","result":{"data":{"markdownRemark":{"id":"a7cdca16-b50d-56b0-8425-00e2487bb33f","frontmatter":{"challengeType":0,"dashedName":"step-1","title":"Step 1","id":"635060a5c03c950f46174cb5"},"rawMarkdownBody":"\n# --description--\n\nStatistics is a way of using math to make sense of data. It helps us understand patterns and trends in information, so we can make predictions and decisions based on that information.\n\nIn this challenge, you will build a statistics calculator that takes a set of numbers and returns the mean, median, mode, standard deviation, and variance.\n\nThe HTML and CSS have been provided for you. Feel free to explore the code â€“ you may notice that the `calculate` function is called when the form is submitted. When you are ready, declare a `calculate` variable and assign it an empty function in the `script.js` file.\n\n# --hints--\n\nYou should use the `const` keyword to declare a variable `calculate`.\n\n```js\nassert.match(code, /const\\s*calculate/);\n```\n\nYour `calculate` variable should be a function.\n\n```js\nassert.isFunction(calculate);\n```\n\nYour `calculate` function should be empty.\n\n```js\nassert.match(calculate.toString(), /\\{\\s*\\}/);\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <link rel=\"stylesheet\" href=\"./styles.css\" />\n    <script src=\"./script.js\"></script>\n    <title>Statistics Calculator</title>\n  </head>\n  <body>\n    <h1>Statistics Calculator</h1>\n    <p>Enter a list of comma-separated numbers.</p>\n\n    <form onsubmit=\"calculate();\">\n      <label for=\"numbers\">Numbers:</label>\n      <input type=\"text\" name=\"numbers\" id=\"numbers\" />\n      <button type=\"submit\">Calculate</button>\n    </form>\n    <div class=\"results\">\n      <p>\n        The <dfn>mean</dfn> of a list of numbers is the average, calculated by\n        taking the sum of all numbers and dividing that by the count of numbers.\n      </p>\n      <p class=\"bold\">Mean: <span id=\"mean\"></span></p>\n      <p>\n        The <dfn>median</dfn> of a list of numbers is the number that appears in\n        the middle of the list, when sorted from least to greatest.\n      </p>\n      <p class=\"bold\">Median: <span id=\"median\"></span></p>\n      <p>\n        The <dfn>mode</dfn> of a list of numbers is the number that appears most\n        often in the list.\n      </p>\n      <p class=\"bold\">Mode: <span id=\"mode\"></span></p>\n      <p>\n        The <dfn>range</dfn> of a list of numbers is the difference between the\n        largest and smallest numbers in the list.\n      </p>\n      <p class=\"bold\">Range: <span id=\"range\"></span></p>\n      <p>\n        The <dfn>variance</dfn> of a list of numbers measures how far the values\n        are from the mean, on average.\n      </p>\n      <p class=\"bold\">Variance: <span id=\"variance\"></span></p>\n      <p>\n        The <dfn>standard deviation</dfn> of a list of numbers is the square\n        root of the variance.\n      </p>\n      <p class=\"bold\">\n        Standard Deviation: <span id=\"standardDeviation\"></span>\n      </p>\n    </div>\n  </body>\n</html>\n```\n\n```css\nbody {\n  margin: 0;\n  background-color: rgb(27, 27, 50);\n  text-align: center;\n  color: #fff;\n}\n\nbutton {\n  cursor: pointer;\n  background-color: rgb(59, 59, 79);\n  border: 3px solid white;\n  color: white;\n}\n\ninput {\n  background-color: rgb(10, 10, 35);\n  color: white;\n  border: 1px solid rgb(59, 59, 79);\n}\n\n.bold {\n  font-weight: bold;\n}\n```\n\n```js\n--fcc-editable-region--\n\n--fcc-editable-region--\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-advanced-array-methods-by-building-a-statistics-calculator","id":"635060a5c03c950f46174cb5","dashedName":"step-1"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}