{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-regular-expressions-by-building-a-spam-filter/641cdf57c3f7ee276e1d9b32/","result":{"data":{"markdownRemark":{"id":"990f21b8-c5cd-5136-bd0d-0b0bb5a79a19","frontmatter":{"challengeType":0,"dashedName":"step-5","title":"Step 5","id":"641cdf57c3f7ee276e1d9b32"},"rawMarkdownBody":"\n# --description--\n\nBack in your event listener, you need to update the text of the `result` element. \n\nUse a ternary operator to update the text of the `result` element after the `if` statement. Check the truthiness of calling `isSpam()` on the value of the `messageInput` element. If true, set the text to `Oh no! This looks like a spam message.`. Otherwise, set the text to `This message does not seem to contain any spam.`\n\nThen set the `messageInput` element's value to an empty string.\n\n# --hints--\n\nYou should use the assignment operator to set the `textContent` property of the `result` element.\n\n```js\nassert.match(code, /checkMessageButton\\.addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*if\\s*\\(\\s*messageInput\\.value\\s*===\\s*('|\"|`)\\2\\s*\\)\\s*\\{\\s*alert\\(\\s*('|\"|`)Please enter a message\\.\\3\\s*\\);?\\s*return\\s*;?\\s*\\}\\s*result\\.textContent\\s*\\=\\s*/)\n```\n\nYou should assign the `isSpam()` function call to `result.textContent`.\n\n```js\nassert.match(code, /checkMessageButton\\.addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*if\\s*\\(\\s*messageInput\\.value\\s*===\\s*('|\"|`)\\2\\s*\\)\\s*\\{\\s*alert\\(\\s*('|\"|`)Please enter a message\\.\\3\\s*\\);?\\s*return\\s*;?\\s*\\}\\s*result\\.textContent\\s*\\=\\s*isSpam\\(\\s*messageInput\\.value\\s*\\)/)\n```\n\nYou should use ternary syntax to check the truthiness of `isSpam(messageInput.value)`.\n\n```js\nassert.match(code, /checkMessageButton\\.addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*if\\s*\\(\\s*messageInput\\.value\\s*===\\s*('|\"|`)\\2\\s*\\)\\s*\\{\\s*alert\\(\\s*('|\"|`)Please enter a message\\.\\3\\s*\\);?\\s*return\\s*;?\\s*\\}\\s*result\\.textContent\\s*\\=\\s*isSpam\\(\\s*messageInput\\.value\\s*\\)\\s*\\?/)\n```\n\nThe truthy expression of your ternary should set the `textContent` property of the `result` element to `Oh no! This looks like a spam message.`.\n\n```js\nassert.match(code, /checkMessageButton\\.addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*if\\s*\\(\\s*messageInput\\.value\\s*===\\s*('|\"|`)\\2\\s*\\)\\s*\\{\\s*alert\\(\\s*('|\"|`)Please enter a message\\.\\3\\s*\\);?\\s*return\\s*;?\\s*\\}\\s*result\\.textContent\\s*\\=\\s*isSpam\\(\\s*messageInput\\.value\\s*\\)\\s*\\?\\s*('|\"|`)Oh no! This looks like a spam message.\\4\\s*:/);\n```\n\nThe falsy expression of your ternary should set the `textContent` property of the `result` element to `This message does not seem to contain any spam.`.\n\n```js\nassert.match(code, /checkMessageButton\\.addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*if\\s*\\(\\s*messageInput\\.value\\s*===\\s*('|\"|`)\\2\\s*\\)\\s*\\{\\s*alert\\(\\s*('|\"|`)Please enter a message\\.\\3\\s*\\);?\\s*return\\s*;?\\s*\\}\\s*result\\.textContent\\s*\\=\\s*isSpam\\(\\s*messageInput\\.value\\s*\\)\\s*\\?\\s*('|\"|`)Oh no! This looks like a spam message.\\4\\s*:\\s*('|\"|`)This message does not seem to contain any spam.\\5;?\\s*/);\n```\n\nAfter your ternary, set the `value` of `messageInput` to an empty string.\n\n```js\nassert.match(code, /checkMessageButton\\.addEventListener\\(\\s*('|\"|`)click\\1\\s*,\\s*\\(\\s*\\)\\s*=>\\s*\\{\\s*if\\s*\\(\\s*messageInput\\.value\\s*===\\s*('|\"|`)\\2\\s*\\)\\s*\\{\\s*alert\\(\\s*('|\"|`)Please enter a message\\.\\3\\s*\\);?\\s*return\\s*;?\\s*\\}\\s*result\\.textContent\\s*\\=\\s*isSpam\\(\\s*messageInput\\.value\\s*\\)\\s*\\?\\s*('|\"|`)Oh no! This looks like a spam message.\\4\\s*:\\s*('|\"|`)This message does not seem to contain any spam.\\5;?\\s*messageInput\\.value\\s*=\\s*('|\"|`)\\6;?\\s*\\}/)\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width\" />\n    <title>Learn Regular Expressions by Building a Spam Filter</title>\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n  </head>\n\n  <body>\n    <header class=\"main-text\">\n      <h1 class=\"title\">Is this Spam?</h1>\n      <p class=\"description\">\n        Enter a phrase to check if it would be marked as spam or not.\n      </p>\n    </header>\n\n    <main>\n      <label class=\"message-label\" for=\"message-input\">Message: </label>\n      <textarea\n        placeholder=\"Enter message here\"\n        value=\"\"\n        type=\"text\"\n        name=\"message\"\n        id=\"message-input\"\n        rows=\"10\"\n        cols=\"40\"\n      ></textarea>\n      <button class=\"btn\" id=\"check-message-btn\" type=\"button\">\n        Check message\n      </button>\n      <p id=\"result\"></p>\n    </main>\n\n    <footer class=\"footer\">&copy; freeCodeCamp</footer>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n```\n\n```css\n*,\n*::before,\n*::after {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n:root {\n  --dark-grey: #1b1b32;\n  --light-grey: #f5f6f7;\n  --golden-yellow: #fecc4c;\n  --yellow: #ffcc4c;\n  --gold: #feac32;\n  --orange: #ffac33;\n  --dark-orange: #f89808;\n}\n\nbody {\n  background-color: var(--dark-grey);\n  color: var(--light-grey);\n}\n\nbody,\n#message-input:placeholder-shown {\n  text-align: center;\n}\n\ntextarea {\n  max-width: 90%;\n}\n\n.main-text {\n  margin: 25px 0;\n}\n\n.title {\n  font-size: 2.5rem;\n}\n\n.description {\n  margin-top: 15px;\n  font-size: 1.4rem;\n}\n\n.message-label {\n  display: block;\n  margin-bottom: 20px;\n  font-size: 1.5rem;\n}\n\n#message-input:placeholder-shown,\ntextarea {\n  font-size: 1.1rem;\n}\n\n.btn {\n  display: block;\n  cursor: pointer;\n  width: 200px;\n  margin: 10px auto;\n  color: var(--dark-grey);\n  background-color: var(--gold);\n  background-image: linear-gradient(var(--golden-yellow), var(--orange));\n  border-color: var(--gold);\n  border-width: 3px;\n}\n\n.btn:hover {\n  background-image: linear-gradient(var(--yellow), var(--dark-orange));\n}\n\n#result {\n  font-size: 2rem;\n  margin: 20px 0;\n}\n\n.footer {\n  margin-top: 10px;\n}\n```\n\n```js\nconst messageInput = document.getElementById(\"message-input\");\nconst result = document.getElementById(\"result\");\nconst checkMessageButton = document.getElementById(\"check-message-btn\");\n\nconst isSpam = (msg) => false;\n\n--fcc-editable-region--\ncheckMessageButton.addEventListener(\"click\", () => {\n  if (messageInput.value === \"\") {\n    alert(\"Please enter a message.\");\n    return;\n  }\n\n\n});\n--fcc-editable-region--\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-regular-expressions-by-building-a-spam-filter","id":"641cdf57c3f7ee276e1d9b32","dashedName":"step-5"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}