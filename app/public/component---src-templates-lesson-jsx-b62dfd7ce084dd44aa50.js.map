{"version":3,"file":"component---src-templates-lesson-jsx-b62dfd7ce084dd44aa50.js","mappings":"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","sources":["webpack://curriculum/./node_modules/core-js/internals/a-callable.js","webpack://curriculum/./node_modules/core-js/internals/an-object.js","webpack://curriculum/./node_modules/core-js/internals/array-includes.js","webpack://curriculum/./node_modules/core-js/internals/classof-raw.js","webpack://curriculum/./node_modules/core-js/internals/classof.js","webpack://curriculum/./node_modules/core-js/internals/copy-constructor-properties.js","webpack://curriculum/./node_modules/core-js/internals/create-non-enumerable-property.js","webpack://curriculum/./node_modules/core-js/internals/create-property-descriptor.js","webpack://curriculum/./node_modules/core-js/internals/define-built-in.js","webpack://curriculum/./node_modules/core-js/internals/define-global-property.js","webpack://curriculum/./node_modules/core-js/internals/descriptors.js","webpack://curriculum/./node_modules/core-js/internals/document-create-element.js","webpack://curriculum/./node_modules/core-js/internals/engine-user-agent.js","webpack://curriculum/./node_modules/core-js/internals/engine-v8-version.js","webpack://curriculum/./node_modules/core-js/internals/enum-bug-keys.js","webpack://curriculum/./node_modules/core-js/internals/export.js","webpack://curriculum/./node_modules/core-js/internals/fails.js","webpack://curriculum/./node_modules/core-js/internals/function-bind-native.js","webpack://curriculum/./node_modules/core-js/internals/function-call.js","webpack://curriculum/./node_modules/core-js/internals/function-name.js","webpack://curriculum/./node_modules/core-js/internals/function-uncurry-this.js","webpack://curriculum/./node_modules/core-js/internals/get-built-in.js","webpack://curriculum/./node_modules/core-js/internals/get-method.js","webpack://curriculum/./node_modules/core-js/internals/get-substitution.js","webpack://curriculum/./node_modules/core-js/internals/global.js","webpack://curriculum/./node_modules/core-js/internals/has-own-property.js","webpack://curriculum/./node_modules/core-js/internals/hidden-keys.js","webpack://curriculum/./node_modules/core-js/internals/ie8-dom-define.js","webpack://curriculum/./node_modules/core-js/internals/indexed-object.js","webpack://curriculum/./node_modules/core-js/internals/inspect-source.js","webpack://curriculum/./node_modules/core-js/internals/internal-state.js","webpack://curriculum/./node_modules/core-js/internals/is-callable.js","webpack://curriculum/./node_modules/core-js/internals/is-forced.js","webpack://curriculum/./node_modules/core-js/internals/is-object.js","webpack://curriculum/./node_modules/core-js/internals/is-pure.js","webpack://curriculum/./node_modules/core-js/internals/is-regexp.js","webpack://curriculum/./node_modules/core-js/internals/is-symbol.js","webpack://curriculum/./node_modules/core-js/internals/length-of-array-like.js","webpack://curriculum/./node_modules/core-js/internals/make-built-in.js","webpack://curriculum/./node_modules/core-js/internals/math-trunc.js","webpack://curriculum/./node_modules/core-js/internals/native-symbol.js","webpack://curriculum/./node_modules/core-js/internals/native-weak-map.js","webpack://curriculum/./node_modules/core-js/internals/object-define-property.js","webpack://curriculum/./node_modules/core-js/internals/object-get-own-property-descriptor.js","webpack://curriculum/./node_modules/core-js/internals/object-get-own-property-names.js","webpack://curriculum/./node_modules/core-js/internals/object-get-own-property-symbols.js","webpack://curriculum/./node_modules/core-js/internals/object-is-prototype-of.js","webpack://curriculum/./node_modules/core-js/internals/object-keys-internal.js","webpack://curriculum/./node_modules/core-js/internals/object-property-is-enumerable.js","webpack://curriculum/./node_modules/core-js/internals/ordinary-to-primitive.js","webpack://curriculum/./node_modules/core-js/internals/own-keys.js","webpack://curriculum/./node_modules/core-js/internals/regexp-flags.js","webpack://curriculum/./node_modules/core-js/internals/regexp-get-flags.js","webpack://curriculum/./node_modules/core-js/internals/require-object-coercible.js","webpack://curriculum/./node_modules/core-js/internals/shared-key.js","webpack://curriculum/./node_modules/core-js/internals/shared-store.js","webpack://curriculum/./node_modules/core-js/internals/shared.js","webpack://curriculum/./node_modules/core-js/internals/to-absolute-index.js","webpack://curriculum/./node_modules/core-js/internals/to-indexed-object.js","webpack://curriculum/./node_modules/core-js/internals/to-integer-or-infinity.js","webpack://curriculum/./node_modules/core-js/internals/to-length.js","webpack://curriculum/./node_modules/core-js/internals/to-object.js","webpack://curriculum/./node_modules/core-js/internals/to-primitive.js","webpack://curriculum/./node_modules/core-js/internals/to-property-key.js","webpack://curriculum/./node_modules/core-js/internals/to-string-tag-support.js","webpack://curriculum/./node_modules/core-js/internals/to-string.js","webpack://curriculum/./node_modules/core-js/internals/try-to-string.js","webpack://curriculum/./node_modules/core-js/internals/uid.js","webpack://curriculum/./node_modules/core-js/internals/use-symbol-as-uid.js","webpack://curriculum/./node_modules/core-js/internals/v8-prototype-define-bug.js","webpack://curriculum/./node_modules/core-js/internals/well-known-symbol.js","webpack://curriculum/./node_modules/core-js/modules/es.string.replace-all.js","webpack://curriculum/./node_modules/core-js/modules/esnext.string.replace-all.js","webpack://curriculum/./node_modules/extend/index.js","webpack://curriculum/./src/components/Nav.jsx","webpack://curriculum/./src/components/Header.jsx","webpack://curriculum/./src/components/Layout.jsx","webpack://curriculum/./src/js/scripts.js","webpack://curriculum/./node_modules/bail/index.js","webpack://curriculum/./node_modules/is-plain-obj/index.js","webpack://curriculum/./node_modules/trough/index.js","webpack://curriculum/./node_modules/unified/node_modules/unist-util-stringify-position/lib/index.js","webpack://curriculum/./node_modules/unified/node_modules/vfile-message/lib/index.js","webpack://curriculum/./node_modules/unified/node_modules/vfile/lib/minpath.browser.js","webpack://curriculum/./node_modules/unified/node_modules/vfile/lib/minproc.browser.js","webpack://curriculum/./node_modules/unified/node_modules/vfile/lib/minurl.shared.js","webpack://curriculum/./node_modules/unified/node_modules/vfile/lib/minurl.browser.js","webpack://curriculum/./node_modules/unified/node_modules/vfile/lib/index.js","webpack://curriculum/./node_modules/unified/lib/index.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/mdast-util-to-string/lib/index.js","webpack://curriculum/./node_modules/micromark-util-chunked/index.js","webpack://curriculum/./node_modules/micromark-util-combine-extensions/index.js","webpack://curriculum/./node_modules/micromark-util-character/lib/unicode-punctuation-regex.js","webpack://curriculum/./node_modules/micromark-util-character/index.js","webpack://curriculum/./node_modules/micromark-factory-space/index.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/content.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/document.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/blank-line.js","webpack://curriculum/./node_modules/micromark-util-subtokenize/index.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/content.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/flow.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/initialize/text.js","webpack://curriculum/./node_modules/micromark-util-resolve-all/index.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/create-tokenizer.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/thematic-break.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/list.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/block-quote.js","webpack://curriculum/./node_modules/micromark-factory-destination/index.js","webpack://curriculum/./node_modules/micromark-factory-label/index.js","webpack://curriculum/./node_modules/micromark-factory-title/index.js","webpack://curriculum/./node_modules/micromark-factory-whitespace/index.js","webpack://curriculum/./node_modules/micromark-util-normalize-identifier/index.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/definition.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/code-indented.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/heading-atx.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/setext-underline.js","webpack://curriculum/./node_modules/micromark-util-html-tag-name/index.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/html-flow.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/code-fenced.js","webpack://curriculum/./node_modules/decode-named-character-reference/index.dom.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/character-reference.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/character-escape.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/line-ending.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/label-end.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/label-start-image.js","webpack://curriculum/./node_modules/micromark-util-classify-character/index.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/attention.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/autolink.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/html-text.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/label-start-link.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/hard-break-escape.js","webpack://curriculum/./node_modules/micromark-core-commonmark/lib/code-text.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/constructs.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/parse.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/preprocess.js","webpack://curriculum/./node_modules/micromark-util-decode-numeric-character-reference/index.js","webpack://curriculum/./node_modules/micromark-util-decode-string/index.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/unist-util-stringify-position/lib/index.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/lib/index.js","webpack://curriculum/./node_modules/mdast-util-from-markdown/node_modules/micromark/lib/postprocess.js","webpack://curriculum/./node_modules/remark-parse/index.js","webpack://curriculum/./node_modules/remark-parse/lib/index.js","webpack://curriculum/./node_modules/remark/node_modules/zwitch/index.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/configure.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/blockquote.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/pattern-in-scope.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/break.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/format-code-as-indented.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/code.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-quote.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/emphasis.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-emphasis.js","webpack://curriculum/./node_modules/remark/node_modules/unist-util-is/lib/index.js","webpack://curriculum/./node_modules/remark/node_modules/unist-util-visit-parents/lib/index.js","webpack://curriculum/./node_modules/remark/node_modules/unist-util-visit/lib/index.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-string/lib/index.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/format-heading-as-setext.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/html.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/image.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/image-reference.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/pattern-compile.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/inline-code.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/format-link-as-autolink.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/link.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/link-reference.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-bullet.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-rule.js","webpack://curriculum/./node_modules/mdast-util-phrasing/node_modules/unist-util-is/lib/index.js","webpack://curriculum/./node_modules/mdast-util-phrasing/lib/index.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/strong.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-strong.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/index.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-fence.js","webpack://curriculum/./node_modules/remark/node_modules/longest-streak/index.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/definition.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/heading.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/list.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-bullet-ordered-other.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-bullet-other.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/list-item.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-list-item-indent.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/paragraph.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/root.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/text.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/handle/thematic-break.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/check-rule-repetition.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/join.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/unsafe.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/association.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/container-flow.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/indent-lines.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/safe.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/track.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/index.js","webpack://curriculum/./node_modules/remark/node_modules/mdast-util-to-markdown/lib/util/container-phrasing.js","webpack://curriculum/./node_modules/remark/node_modules/remark-stringify/index.js","webpack://curriculum/./node_modules/remark/node_modules/remark-stringify/lib/index.js","webpack://curriculum/./node_modules/remark/index.js","webpack://curriculum/./src/js/normalizeObj.js","webpack://curriculum/./src/js/parseCodeStr.js","webpack://curriculum/./src/js/germinateSeeds.js","webpack://curriculum/./src/js/parseMd.js","webpack://curriculum/./src/js/setElementType.js","webpack://curriculum/./src/components/ElementTree.jsx","webpack://curriculum/./src/styles/description.module.css","webpack://curriculum/./src/components/Description.jsx","webpack://curriculum/./src/styles/modal.module.css","webpack://curriculum/./src/components/Modal.jsx","webpack://curriculum/./src/styles/hint.module.css","webpack://curriculum/./src/components/Hint.jsx","webpack://curriculum/./node_modules/markdown-to-jsx/dist/index.modern.js","webpack://curriculum/./src/styles/seed.module.css","webpack://curriculum/./src/components/Seed.jsx","webpack://curriculum/./src/styles/buttonbar.module.css","webpack://curriculum/./src/components/ButtonBar.jsx","webpack://curriculum/./src/styles/code.module.css","webpack://curriculum/./src/components/EditReg.jsx","webpack://curriculum/./src/styles/lesson.module.css","webpack://curriculum/./src/templates/Lesson.jsx","webpack://curriculum/./node_modules/is-buffer/index.js","webpack://curriculum/./node_modules/react-shadow-root/lib/ReactShadowRoot.js","webpack://curriculum/./node_modules/react-shadow-root/lib/index.js"],"sourcesContent":["var isCallable = require('../internals/is-callable');\nvar tryToString = require('../internals/try-to-string');\n\nvar $TypeError = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nmodule.exports = function (argument) {\n  if (isCallable(argument)) return argument;\n  throw $TypeError(tryToString(argument) + ' is not a function');\n};\n","var isObject = require('../internals/is-object');\n\nvar $String = String;\nvar $TypeError = TypeError;\n\n// `Assert: Type(argument) is Object`\nmodule.exports = function (argument) {\n  if (isObject(argument)) return argument;\n  throw $TypeError($String(argument) + ' is not an object');\n};\n","var toIndexedObject = require('../internals/to-indexed-object');\nvar toAbsoluteIndex = require('../internals/to-absolute-index');\nvar lengthOfArrayLike = require('../internals/length-of-array-like');\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject($this);\n    var length = lengthOfArrayLike(O);\n    var index = toAbsoluteIndex(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el != el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value != value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nmodule.exports = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod(false)\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar toString = uncurryThis({}.toString);\nvar stringSlice = uncurryThis(''.slice);\n\nmodule.exports = function (it) {\n  return stringSlice(toString(it), 8, -1);\n};\n","var TO_STRING_TAG_SUPPORT = require('../internals/to-string-tag-support');\nvar isCallable = require('../internals/is-callable');\nvar classofRaw = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar $Object = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw(function () { return arguments; }()) == 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nmodule.exports = TO_STRING_TAG_SUPPORT ? classofRaw : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object(it), TO_STRING_TAG)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw(O)\n    // ES3 arguments fallback\n    : (result = classofRaw(O)) == 'Object' && isCallable(O.callee) ? 'Arguments' : result;\n};\n","var hasOwn = require('../internals/has-own-property');\nvar ownKeys = require('../internals/own-keys');\nvar getOwnPropertyDescriptorModule = require('../internals/object-get-own-property-descriptor');\nvar definePropertyModule = require('../internals/object-define-property');\n\nmodule.exports = function (target, source, exceptions) {\n  var keys = ownKeys(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn(target, key) && !(exceptions && hasOwn(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar definePropertyModule = require('../internals/object-define-property');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\n\nmodule.exports = DESCRIPTORS ? function (object, key, value) {\n  return definePropertyModule.f(object, key, createPropertyDescriptor(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n","module.exports = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n","var isCallable = require('../internals/is-callable');\nvar definePropertyModule = require('../internals/object-define-property');\nvar makeBuiltIn = require('../internals/make-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nmodule.exports = function (O, key, value, options) {\n  if (!options) options = {};\n  var simple = options.enumerable;\n  var name = options.name !== undefined ? options.name : key;\n  if (isCallable(value)) makeBuiltIn(value, name, options);\n  if (options.global) {\n    if (simple) O[key] = value;\n    else defineGlobalProperty(key, value);\n  } else {\n    try {\n      if (!options.unsafe) delete O[key];\n      else if (O[key]) simple = true;\n    } catch (error) { /* empty */ }\n    if (simple) O[key] = value;\n    else definePropertyModule.f(O, key, {\n      value: value,\n      enumerable: false,\n      configurable: !options.nonConfigurable,\n      writable: !options.nonWritable\n    });\n  } return O;\n};\n","var global = require('../internals/global');\n\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nmodule.exports = function (key, value) {\n  try {\n    defineProperty(global, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global[key] = value;\n  } return value;\n};\n","var fails = require('../internals/fails');\n\n// Detect IE8's incomplete defineProperty implementation\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] != 7;\n});\n","var global = require('../internals/global');\nvar isObject = require('../internals/is-object');\n\nvar document = global.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS = isObject(document) && isObject(document.createElement);\n\nmodule.exports = function (it) {\n  return EXISTS ? document.createElement(it) : {};\n};\n","var getBuiltIn = require('../internals/get-built-in');\n\nmodule.exports = getBuiltIn('navigator', 'userAgent') || '';\n","var global = require('../internals/global');\nvar userAgent = require('../internals/engine-user-agent');\n\nvar process = global.process;\nvar Deno = global.Deno;\nvar versions = process && process.versions || Deno && Deno.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent) {\n  match = userAgent.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nmodule.exports = version;\n","// IE8- don't enum bug keys\nmodule.exports = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n","var global = require('../internals/global');\nvar getOwnPropertyDescriptor = require('../internals/object-get-own-property-descriptor').f;\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar defineBuiltIn = require('../internals/define-built-in');\nvar defineGlobalProperty = require('../internals/define-global-property');\nvar copyConstructorProperties = require('../internals/copy-constructor-properties');\nvar isForced = require('../internals/is-forced');\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nmodule.exports = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var FORCED, target, key, targetProperty, sourceProperty, descriptor;\n  if (GLOBAL) {\n    target = global;\n  } else if (STATIC) {\n    target = global[TARGET] || defineGlobalProperty(TARGET, {});\n  } else {\n    target = (global[TARGET] || {}).prototype;\n  }\n  if (target) for (key in source) {\n    sourceProperty = source[key];\n    if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor(target, key);\n      targetProperty = descriptor && descriptor.value;\n    } else targetProperty = target[key];\n    FORCED = isForced(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contained in target\n    if (!FORCED && targetProperty !== undefined) {\n      if (typeof sourceProperty == typeof targetProperty) continue;\n      copyConstructorProperties(sourceProperty, targetProperty);\n    }\n    // add a flag to not completely full polyfills\n    if (options.sham || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty(sourceProperty, 'sham', true);\n    }\n    defineBuiltIn(target, key, sourceProperty, options);\n  }\n};\n","module.exports = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n","var fails = require('../internals/fails');\n\nmodule.exports = !fails(function () {\n  // eslint-disable-next-line es-x/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar call = Function.prototype.call;\n\nmodule.exports = NATIVE_BIND ? call.bind(call) : function () {\n  return call.apply(call, arguments);\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar hasOwn = require('../internals/has-own-property');\n\nvar FunctionPrototype = Function.prototype;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn(FunctionPrototype, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS || (DESCRIPTORS && getDescriptor(FunctionPrototype, 'name').configurable));\n\nmodule.exports = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n","var NATIVE_BIND = require('../internals/function-bind-native');\n\nvar FunctionPrototype = Function.prototype;\nvar bind = FunctionPrototype.bind;\nvar call = FunctionPrototype.call;\nvar uncurryThis = NATIVE_BIND && bind.bind(call, call);\n\nmodule.exports = NATIVE_BIND ? function (fn) {\n  return fn && uncurryThis(fn);\n} : function (fn) {\n  return fn && function () {\n    return call.apply(fn, arguments);\n  };\n};\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\n\nvar aFunction = function (argument) {\n  return isCallable(argument) ? argument : undefined;\n};\n\nmodule.exports = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(global[namespace]) : global[namespace] && global[namespace][method];\n};\n","var aCallable = require('../internals/a-callable');\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nmodule.exports = function (V, P) {\n  var func = V[P];\n  return func == null ? undefined : aCallable(func);\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar floor = Math.floor;\nvar charAt = uncurryThis(''.charAt);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar SUBSTITUTION_SYMBOLS = /\\$([$&'`]|\\d{1,2}|<[^>]*>)/g;\nvar SUBSTITUTION_SYMBOLS_NO_NAMED = /\\$([$&'`]|\\d{1,2})/g;\n\n// `GetSubstitution` abstract operation\n// https://tc39.es/ecma262/#sec-getsubstitution\nmodule.exports = function (matched, str, position, captures, namedCaptures, replacement) {\n  var tailPos = position + matched.length;\n  var m = captures.length;\n  var symbols = SUBSTITUTION_SYMBOLS_NO_NAMED;\n  if (namedCaptures !== undefined) {\n    namedCaptures = toObject(namedCaptures);\n    symbols = SUBSTITUTION_SYMBOLS;\n  }\n  return replace(replacement, symbols, function (match, ch) {\n    var capture;\n    switch (charAt(ch, 0)) {\n      case '$': return '$';\n      case '&': return matched;\n      case '`': return stringSlice(str, 0, position);\n      case \"'\": return stringSlice(str, tailPos);\n      case '<':\n        capture = namedCaptures[stringSlice(ch, 1, -1)];\n        break;\n      default: // \\d\\d?\n        var n = +ch;\n        if (n === 0) return match;\n        if (n > m) {\n          var f = floor(n / 10);\n          if (f === 0) return match;\n          if (f <= m) return captures[f - 1] === undefined ? charAt(ch, 1) : captures[f - 1] + charAt(ch, 1);\n          return match;\n        }\n        capture = captures[n - 1];\n    }\n    return capture === undefined ? '' : capture;\n  });\n};\n","var check = function (it) {\n  return it && it.Math == Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nmodule.exports =\n  // eslint-disable-next-line es-x/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof global == 'object' && global) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || Function('return this')();\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar toObject = require('../internals/to-object');\n\nvar hasOwnProperty = uncurryThis({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es-x/no-object-hasown -- safe\nmodule.exports = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject(it), key);\n};\n","module.exports = {};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\nvar createElement = require('../internals/document-create-element');\n\n// Thanks to IE8 for its funny defineProperty\nmodule.exports = !DESCRIPTORS && !fails(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement('div'), 'a', {\n    get: function () { return 7; }\n  }).a != 7;\n});\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar fails = require('../internals/fails');\nvar classof = require('../internals/classof-raw');\n\nvar $Object = Object;\nvar split = uncurryThis(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nmodule.exports = fails(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof(it) == 'String' ? split(it, '') : $Object(it);\n} : $Object;\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar isCallable = require('../internals/is-callable');\nvar store = require('../internals/shared-store');\n\nvar functionToString = uncurryThis(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nmodule.exports = store.inspectSource;\n","var NATIVE_WEAK_MAP = require('../internals/native-weak-map');\nvar global = require('../internals/global');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar isObject = require('../internals/is-object');\nvar createNonEnumerableProperty = require('../internals/create-non-enumerable-property');\nvar hasOwn = require('../internals/has-own-property');\nvar shared = require('../internals/shared-store');\nvar sharedKey = require('../internals/shared-key');\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError = global.TypeError;\nvar WeakMap = global.WeakMap;\nvar set, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject(it) || (state = get(it)).type !== TYPE) {\n      throw TypeError('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared.state) {\n  var store = shared.state || (shared.state = new WeakMap());\n  var wmget = uncurryThis(store.get);\n  var wmhas = uncurryThis(store.has);\n  var wmset = uncurryThis(store.set);\n  set = function (it, metadata) {\n    if (wmhas(store, it)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    wmset(store, it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return wmget(store, it) || {};\n  };\n  has = function (it) {\n    return wmhas(store, it);\n  };\n} else {\n  var STATE = sharedKey('state');\n  hiddenKeys[STATE] = true;\n  set = function (it, metadata) {\n    if (hasOwn(it, STATE)) throw new TypeError(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn(it, STATE);\n  };\n}\n\nmodule.exports = {\n  set: set,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n","// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nmodule.exports = function (argument) {\n  return typeof argument == 'function';\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value == POLYFILL ? true\n    : value == NATIVE ? false\n    : isCallable(detection) ? fails(detection)\n    : !!detection;\n};\n\nvar normalize = isForced.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced.data = {};\nvar NATIVE = isForced.NATIVE = 'N';\nvar POLYFILL = isForced.POLYFILL = 'P';\n\nmodule.exports = isForced;\n","var isCallable = require('../internals/is-callable');\n\nmodule.exports = function (it) {\n  return typeof it == 'object' ? it !== null : isCallable(it);\n};\n","module.exports = false;\n","var isObject = require('../internals/is-object');\nvar classof = require('../internals/classof-raw');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar MATCH = wellKnownSymbol('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nmodule.exports = function (it) {\n  var isRegExp;\n  return isObject(it) && ((isRegExp = it[MATCH]) !== undefined ? !!isRegExp : classof(it) == 'RegExp');\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar isCallable = require('../internals/is-callable');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar $Object = Object;\n\nmodule.exports = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn('Symbol');\n  return isCallable($Symbol) && isPrototypeOf($Symbol.prototype, $Object(it));\n};\n","var toLength = require('../internals/to-length');\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nmodule.exports = function (obj) {\n  return toLength(obj.length);\n};\n","var fails = require('../internals/fails');\nvar isCallable = require('../internals/is-callable');\nvar hasOwn = require('../internals/has-own-property');\nvar DESCRIPTORS = require('../internals/descriptors');\nvar CONFIGURABLE_FUNCTION_NAME = require('../internals/function-name').CONFIGURABLE;\nvar inspectSource = require('../internals/inspect-source');\nvar InternalStateModule = require('../internals/internal-state');\n\nvar enforceInternalState = InternalStateModule.enforce;\nvar getInternalState = InternalStateModule.get;\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar defineProperty = Object.defineProperty;\n\nvar CONFIGURABLE_LENGTH = DESCRIPTORS && !fails(function () {\n  return defineProperty(function () { /* empty */ }, 'length', { value: 8 }).length !== 8;\n});\n\nvar TEMPLATE = String(String).split('String');\n\nvar makeBuiltIn = module.exports = function (value, name, options) {\n  if (String(name).slice(0, 7) === 'Symbol(') {\n    name = '[' + String(name).replace(/^Symbol\\(([^)]*)\\)/, '$1') + ']';\n  }\n  if (options && options.getter) name = 'get ' + name;\n  if (options && options.setter) name = 'set ' + name;\n  if (!hasOwn(value, 'name') || (CONFIGURABLE_FUNCTION_NAME && value.name !== name)) {\n    if (DESCRIPTORS) defineProperty(value, 'name', { value: name, configurable: true });\n    else value.name = name;\n  }\n  if (CONFIGURABLE_LENGTH && options && hasOwn(options, 'arity') && value.length !== options.arity) {\n    defineProperty(value, 'length', { value: options.arity });\n  }\n  try {\n    if (options && hasOwn(options, 'constructor') && options.constructor) {\n      if (DESCRIPTORS) defineProperty(value, 'prototype', { writable: false });\n    // in V8 ~ Chrome 53, prototypes of some methods, like `Array.prototype.values`, are non-writable\n    } else if (value.prototype) value.prototype = undefined;\n  } catch (error) { /* empty */ }\n  var state = enforceInternalState(value);\n  if (!hasOwn(state, 'source')) {\n    state.source = TEMPLATE.join(typeof name == 'string' ? name : '');\n  } return value;\n};\n\n// add fake Function#toString for correct work wrapped methods / constructors with methods like LoDash isNative\n// eslint-disable-next-line no-extend-native -- required\nFunction.prototype.toString = makeBuiltIn(function toString() {\n  return isCallable(this) && getInternalState(this).source || inspectSource(this);\n}, 'toString');\n","var ceil = Math.ceil;\nvar floor = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es-x/no-math-trunc -- safe\nmodule.exports = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor : ceil)(n);\n};\n","/* eslint-disable es-x/no-symbol -- required for testing */\nvar V8_VERSION = require('../internals/engine-v8-version');\nvar fails = require('../internals/fails');\n\n// eslint-disable-next-line es-x/no-object-getownpropertysymbols -- required for testing\nmodule.exports = !!Object.getOwnPropertySymbols && !fails(function () {\n  var symbol = Symbol();\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  return !String(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION && V8_VERSION < 41;\n});\n","var global = require('../internals/global');\nvar isCallable = require('../internals/is-callable');\nvar inspectSource = require('../internals/inspect-source');\n\nvar WeakMap = global.WeakMap;\n\nmodule.exports = isCallable(WeakMap) && /native code/.test(inspectSource(WeakMap));\n","var DESCRIPTORS = require('../internals/descriptors');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\nvar V8_PROTOTYPE_DEFINE_BUG = require('../internals/v8-prototype-define-bug');\nvar anObject = require('../internals/an-object');\nvar toPropertyKey = require('../internals/to-property-key');\n\nvar $TypeError = TypeError;\n// eslint-disable-next-line es-x/no-object-defineproperty -- safe\nvar $defineProperty = Object.defineProperty;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nexports.f = DESCRIPTORS ? V8_PROTOTYPE_DEFINE_BUG ? function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE in Attributes ? Attributes[CONFIGURABLE] : current[CONFIGURABLE],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty(O, P, Attributes);\n} : $defineProperty : function defineProperty(O, P, Attributes) {\n  anObject(O);\n  P = toPropertyKey(P);\n  anObject(Attributes);\n  if (IE8_DOM_DEFINE) try {\n    return $defineProperty(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw $TypeError('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n","var DESCRIPTORS = require('../internals/descriptors');\nvar call = require('../internals/function-call');\nvar propertyIsEnumerableModule = require('../internals/object-property-is-enumerable');\nvar createPropertyDescriptor = require('../internals/create-property-descriptor');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar toPropertyKey = require('../internals/to-property-key');\nvar hasOwn = require('../internals/has-own-property');\nvar IE8_DOM_DEFINE = require('../internals/ie8-dom-define');\n\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nexports.f = DESCRIPTORS ? $getOwnPropertyDescriptor : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject(O);\n  P = toPropertyKey(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn(O, P)) return createPropertyDescriptor(!call(propertyIsEnumerableModule.f, O, P), O[P]);\n};\n","var internalObjectKeys = require('../internals/object-keys-internal');\nvar enumBugKeys = require('../internals/enum-bug-keys');\n\nvar hiddenKeys = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es-x/no-object-getownpropertynames -- safe\nexports.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys);\n};\n","// eslint-disable-next-line es-x/no-object-getownpropertysymbols -- safe\nexports.f = Object.getOwnPropertySymbols;\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nmodule.exports = uncurryThis({}.isPrototypeOf);\n","var uncurryThis = require('../internals/function-uncurry-this');\nvar hasOwn = require('../internals/has-own-property');\nvar toIndexedObject = require('../internals/to-indexed-object');\nvar indexOf = require('../internals/array-includes').indexOf;\nvar hiddenKeys = require('../internals/hidden-keys');\n\nvar push = uncurryThis([].push);\n\nmodule.exports = function (object, names) {\n  var O = toIndexedObject(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn(hiddenKeys, key) && hasOwn(O, key) && push(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn(O, key = names[i++])) {\n    ~indexOf(result, key) || push(result, key);\n  }\n  return result;\n};\n","'use strict';\nvar $propertyIsEnumerable = {}.propertyIsEnumerable;\n// eslint-disable-next-line es-x/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor && !$propertyIsEnumerable.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nexports.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable;\n","var call = require('../internals/function-call');\nvar isCallable = require('../internals/is-callable');\nvar isObject = require('../internals/is-object');\n\nvar $TypeError = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nmodule.exports = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  if (isCallable(fn = input.valueOf) && !isObject(val = call(fn, input))) return val;\n  if (pref !== 'string' && isCallable(fn = input.toString) && !isObject(val = call(fn, input))) return val;\n  throw $TypeError(\"Can't convert object to primitive value\");\n};\n","var getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar getOwnPropertyNamesModule = require('../internals/object-get-own-property-names');\nvar getOwnPropertySymbolsModule = require('../internals/object-get-own-property-symbols');\nvar anObject = require('../internals/an-object');\n\nvar concat = uncurryThis([].concat);\n\n// all object keys, includes non-enumerable and symbols\nmodule.exports = getBuiltIn('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule.f(anObject(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  return getOwnPropertySymbols ? concat(keys, getOwnPropertySymbols(it)) : keys;\n};\n","'use strict';\nvar anObject = require('../internals/an-object');\n\n// `RegExp.prototype.flags` getter implementation\n// https://tc39.es/ecma262/#sec-get-regexp.prototype.flags\nmodule.exports = function () {\n  var that = anObject(this);\n  var result = '';\n  if (that.hasIndices) result += 'd';\n  if (that.global) result += 'g';\n  if (that.ignoreCase) result += 'i';\n  if (that.multiline) result += 'm';\n  if (that.dotAll) result += 's';\n  if (that.unicode) result += 'u';\n  if (that.unicodeSets) result += 'v';\n  if (that.sticky) result += 'y';\n  return result;\n};\n","var call = require('../internals/function-call');\nvar hasOwn = require('../internals/has-own-property');\nvar isPrototypeOf = require('../internals/object-is-prototype-of');\nvar regExpFlags = require('../internals/regexp-flags');\n\nvar RegExpPrototype = RegExp.prototype;\n\nmodule.exports = function (R) {\n  var flags = R.flags;\n  return flags === undefined && !('flags' in RegExpPrototype) && !hasOwn(R, 'flags') && isPrototypeOf(RegExpPrototype, R)\n    ? call(regExpFlags, R) : flags;\n};\n","var $TypeError = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nmodule.exports = function (it) {\n  if (it == undefined) throw $TypeError(\"Can't call method on \" + it);\n  return it;\n};\n","var shared = require('../internals/shared');\nvar uid = require('../internals/uid');\n\nvar keys = shared('keys');\n\nmodule.exports = function (key) {\n  return keys[key] || (keys[key] = uid(key));\n};\n","var global = require('../internals/global');\nvar defineGlobalProperty = require('../internals/define-global-property');\n\nvar SHARED = '__core-js_shared__';\nvar store = global[SHARED] || defineGlobalProperty(SHARED, {});\n\nmodule.exports = store;\n","var IS_PURE = require('../internals/is-pure');\nvar store = require('../internals/shared-store');\n\n(module.exports = function (key, value) {\n  return store[key] || (store[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.24.1',\n  mode: IS_PURE ? 'pure' : 'global',\n  copyright: '© 2014-2022 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.24.1/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nmodule.exports = function (index, length) {\n  var integer = toIntegerOrInfinity(index);\n  return integer < 0 ? max(integer + length, 0) : min(integer, length);\n};\n","// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject = require('../internals/indexed-object');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\n\nmodule.exports = function (it) {\n  return IndexedObject(requireObjectCoercible(it));\n};\n","var trunc = require('../internals/math-trunc');\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nmodule.exports = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n","var toIntegerOrInfinity = require('../internals/to-integer-or-infinity');\n\nvar min = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nmodule.exports = function (argument) {\n  return argument > 0 ? min(toIntegerOrInfinity(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n","var requireObjectCoercible = require('../internals/require-object-coercible');\n\nvar $Object = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nmodule.exports = function (argument) {\n  return $Object(requireObjectCoercible(argument));\n};\n","var call = require('../internals/function-call');\nvar isObject = require('../internals/is-object');\nvar isSymbol = require('../internals/is-symbol');\nvar getMethod = require('../internals/get-method');\nvar ordinaryToPrimitive = require('../internals/ordinary-to-primitive');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar $TypeError = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nmodule.exports = function (input, pref) {\n  if (!isObject(input) || isSymbol(input)) return input;\n  var exoticToPrim = getMethod(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call(exoticToPrim, input, pref);\n    if (!isObject(result) || isSymbol(result)) return result;\n    throw $TypeError(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n","var toPrimitive = require('../internals/to-primitive');\nvar isSymbol = require('../internals/is-symbol');\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nmodule.exports = function (argument) {\n  var key = toPrimitive(argument, 'string');\n  return isSymbol(key) ? key : key + '';\n};\n","var wellKnownSymbol = require('../internals/well-known-symbol');\n\nvar TO_STRING_TAG = wellKnownSymbol('toStringTag');\nvar test = {};\n\ntest[TO_STRING_TAG] = 'z';\n\nmodule.exports = String(test) === '[object z]';\n","var classof = require('../internals/classof');\n\nvar $String = String;\n\nmodule.exports = function (argument) {\n  if (classof(argument) === 'Symbol') throw TypeError('Cannot convert a Symbol value to a string');\n  return $String(argument);\n};\n","var $String = String;\n\nmodule.exports = function (argument) {\n  try {\n    return $String(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n","var uncurryThis = require('../internals/function-uncurry-this');\n\nvar id = 0;\nvar postfix = Math.random();\nvar toString = uncurryThis(1.0.toString);\n\nmodule.exports = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString(++id + postfix, 36);\n};\n","/* eslint-disable es-x/no-symbol -- required for testing */\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\n\nmodule.exports = NATIVE_SYMBOL\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n","var DESCRIPTORS = require('../internals/descriptors');\nvar fails = require('../internals/fails');\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nmodule.exports = DESCRIPTORS && fails(function () {\n  // eslint-disable-next-line es-x/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype != 42;\n});\n","var global = require('../internals/global');\nvar shared = require('../internals/shared');\nvar hasOwn = require('../internals/has-own-property');\nvar uid = require('../internals/uid');\nvar NATIVE_SYMBOL = require('../internals/native-symbol');\nvar USE_SYMBOL_AS_UID = require('../internals/use-symbol-as-uid');\n\nvar WellKnownSymbolsStore = shared('wks');\nvar Symbol = global.Symbol;\nvar symbolFor = Symbol && Symbol['for'];\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID ? Symbol : Symbol && Symbol.withoutSetter || uid;\n\nmodule.exports = function (name) {\n  if (!hasOwn(WellKnownSymbolsStore, name) || !(NATIVE_SYMBOL || typeof WellKnownSymbolsStore[name] == 'string')) {\n    var description = 'Symbol.' + name;\n    if (NATIVE_SYMBOL && hasOwn(Symbol, name)) {\n      WellKnownSymbolsStore[name] = Symbol[name];\n    } else if (USE_SYMBOL_AS_UID && symbolFor) {\n      WellKnownSymbolsStore[name] = symbolFor(description);\n    } else {\n      WellKnownSymbolsStore[name] = createWellKnownSymbol(description);\n    }\n  } return WellKnownSymbolsStore[name];\n};\n","'use strict';\nvar $ = require('../internals/export');\nvar call = require('../internals/function-call');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar isCallable = require('../internals/is-callable');\nvar isRegExp = require('../internals/is-regexp');\nvar toString = require('../internals/to-string');\nvar getMethod = require('../internals/get-method');\nvar getRegExpFlags = require('../internals/regexp-get-flags');\nvar getSubstitution = require('../internals/get-substitution');\nvar wellKnownSymbol = require('../internals/well-known-symbol');\nvar IS_PURE = require('../internals/is-pure');\n\nvar REPLACE = wellKnownSymbol('replace');\nvar $TypeError = TypeError;\nvar indexOf = uncurryThis(''.indexOf);\nvar replace = uncurryThis(''.replace);\nvar stringSlice = uncurryThis(''.slice);\nvar max = Math.max;\n\nvar stringIndexOf = function (string, searchValue, fromIndex) {\n  if (fromIndex > string.length) return -1;\n  if (searchValue === '') return fromIndex;\n  return indexOf(string, searchValue, fromIndex);\n};\n\n// `String.prototype.replaceAll` method\n// https://tc39.es/ecma262/#sec-string.prototype.replaceall\n$({ target: 'String', proto: true }, {\n  replaceAll: function replaceAll(searchValue, replaceValue) {\n    var O = requireObjectCoercible(this);\n    var IS_REG_EXP, flags, replacer, string, searchString, functionalReplace, searchLength, advanceBy, replacement;\n    var position = 0;\n    var endOfLastMatch = 0;\n    var result = '';\n    if (searchValue != null) {\n      IS_REG_EXP = isRegExp(searchValue);\n      if (IS_REG_EXP) {\n        flags = toString(requireObjectCoercible(getRegExpFlags(searchValue)));\n        if (!~indexOf(flags, 'g')) throw $TypeError('`.replaceAll` does not allow non-global regexes');\n      }\n      replacer = getMethod(searchValue, REPLACE);\n      if (replacer) {\n        return call(replacer, searchValue, O, replaceValue);\n      } else if (IS_PURE && IS_REG_EXP) {\n        return replace(toString(O), searchValue, replaceValue);\n      }\n    }\n    string = toString(O);\n    searchString = toString(searchValue);\n    functionalReplace = isCallable(replaceValue);\n    if (!functionalReplace) replaceValue = toString(replaceValue);\n    searchLength = searchString.length;\n    advanceBy = max(1, searchLength);\n    position = stringIndexOf(string, searchString, 0);\n    while (position !== -1) {\n      replacement = functionalReplace\n        ? toString(replaceValue(searchString, position, string))\n        : getSubstitution(searchString, string, position, [], undefined, replaceValue);\n      result += stringSlice(string, endOfLastMatch, position) + replacement;\n      endOfLastMatch = position + searchLength;\n      position = stringIndexOf(string, searchString, position + advanceBy);\n    }\n    if (endOfLastMatch < string.length) {\n      result += stringSlice(string, endOfLastMatch);\n    }\n    return result;\n  }\n});\n","// TODO: Remove from `core-js@4`\nrequire('../modules/es.string.replace-all');\n","'use strict';\n\nvar hasOwn = Object.prototype.hasOwnProperty;\nvar toStr = Object.prototype.toString;\nvar defineProperty = Object.defineProperty;\nvar gOPD = Object.getOwnPropertyDescriptor;\n\nvar isArray = function isArray(arr) {\n\tif (typeof Array.isArray === 'function') {\n\t\treturn Array.isArray(arr);\n\t}\n\n\treturn toStr.call(arr) === '[object Array]';\n};\n\nvar isPlainObject = function isPlainObject(obj) {\n\tif (!obj || toStr.call(obj) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tvar hasOwnConstructor = hasOwn.call(obj, 'constructor');\n\tvar hasIsPrototypeOf = obj.constructor && obj.constructor.prototype && hasOwn.call(obj.constructor.prototype, 'isPrototypeOf');\n\t// Not own constructor property must be Object\n\tif (obj.constructor && !hasOwnConstructor && !hasIsPrototypeOf) {\n\t\treturn false;\n\t}\n\n\t// Own properties are enumerated firstly, so to speed up,\n\t// if last one is own, then all properties are own.\n\tvar key;\n\tfor (key in obj) { /**/ }\n\n\treturn typeof key === 'undefined' || hasOwn.call(obj, key);\n};\n\n// If name is '__proto__', and Object.defineProperty is available, define __proto__ as an own property on target\nvar setProperty = function setProperty(target, options) {\n\tif (defineProperty && options.name === '__proto__') {\n\t\tdefineProperty(target, options.name, {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: true,\n\t\t\tvalue: options.newValue,\n\t\t\twritable: true\n\t\t});\n\t} else {\n\t\ttarget[options.name] = options.newValue;\n\t}\n};\n\n// Return undefined instead of __proto__ if '__proto__' is not an own property\nvar getProperty = function getProperty(obj, name) {\n\tif (name === '__proto__') {\n\t\tif (!hasOwn.call(obj, name)) {\n\t\t\treturn void 0;\n\t\t} else if (gOPD) {\n\t\t\t// In early versions of node, obj['__proto__'] is buggy when obj has\n\t\t\t// __proto__ as an own property. Object.getOwnPropertyDescriptor() works.\n\t\t\treturn gOPD(obj, name).value;\n\t\t}\n\t}\n\n\treturn obj[name];\n};\n\nmodule.exports = function extend() {\n\tvar options, name, src, copy, copyIsArray, clone;\n\tvar target = arguments[0];\n\tvar i = 1;\n\tvar length = arguments.length;\n\tvar deep = false;\n\n\t// Handle a deep copy situation\n\tif (typeof target === 'boolean') {\n\t\tdeep = target;\n\t\ttarget = arguments[1] || {};\n\t\t// skip the boolean and the target\n\t\ti = 2;\n\t}\n\tif (target == null || (typeof target !== 'object' && typeof target !== 'function')) {\n\t\ttarget = {};\n\t}\n\n\tfor (; i < length; ++i) {\n\t\toptions = arguments[i];\n\t\t// Only deal with non-null/undefined values\n\t\tif (options != null) {\n\t\t\t// Extend the base object\n\t\t\tfor (name in options) {\n\t\t\t\tsrc = getProperty(target, name);\n\t\t\t\tcopy = getProperty(options, name);\n\n\t\t\t\t// Prevent never-ending loop\n\t\t\t\tif (target !== copy) {\n\t\t\t\t\t// Recurse if we're merging plain objects or arrays\n\t\t\t\t\tif (deep && copy && (isPlainObject(copy) || (copyIsArray = isArray(copy)))) {\n\t\t\t\t\t\tif (copyIsArray) {\n\t\t\t\t\t\t\tcopyIsArray = false;\n\t\t\t\t\t\t\tclone = src && isArray(src) ? src : [];\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tclone = src && isPlainObject(src) ? src : {};\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// Never move original objects, clone them\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: extend(deep, clone, copy) });\n\n\t\t\t\t\t// Don't bring in undefined values\n\t\t\t\t\t} else if (typeof copy !== 'undefined') {\n\t\t\t\t\t\tsetProperty(target, { name: name, newValue: copy });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\t// Return the modified object\n\treturn target;\n};\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { formatName } from \"../js/scripts\"\n\n\nexport default function Nav({ data }) {\n  return (\n    <nav className=\"navbar\">\n      <Link to=\"/\">Home</Link>\n      {\n        data.allDirectory.edges.map(edge => {\n          const name = formatName(edge.node.name)\n          const id = edge.node.id\n          const path = `/curriculum/${edge.node.relativePath}`\n          return <Link to={path} key={id}>{name}</Link>\n        })\n      }\n    </nav>\n  )\n}\n\n\n","import React from \"react\"\nimport Nav from \"./Nav\"\nimport { graphql, useStaticQuery } from \"gatsby\"\n\nconst Header = () => {\n    const data = useStaticQuery(\n        graphql`\n        query navQuery {\n            allDirectory(\n              filter: {sourceInstanceName: {eq: \"curriculum\"}, relativeDirectory: {eq: \"\"}}\n            ) {\n              edges {\n                node {\n                  id\n                  name\n                  relativePath\n                  relativeDirectory\n                  sourceInstanceName\n                }\n              }\n            }\n          }\n        `\n    )\n    return (\n        <header>\n            <Nav data={data}/>\n        </header>\n    )\n}\n\nexport default Header","import React from \"react\"\nimport Header from \"./Header\"\nimport \"../styles/index.css\"\n\nconst Layout = (props) =>{\n      return (\n        <div>\n        <Header/>\n        <div className=\"content\">\n            {props.children}\n        </div>\n        <footer className=\"footer\">\n            <p>2023</p>\n        </footer>\n    </div>\n      )\n}\n\nexport default Layout","export const formatName = (name) => {\n    return name.split(\"-\").map(word => {\n        let newCap = word[0].toUpperCase()\n        let tail = word.slice(1)\n        return newCap += tail\n    }).join(\" \")\n}","/**\n * Throw a given error.\n *\n * @param {Error|null|undefined} [error]\n *   Maybe error.\n * @returns {asserts error is null|undefined}\n */\nexport function bail(error) {\n  if (error) {\n    throw error\n  }\n}\n","export default function isPlainObject(value) {\n\tif (typeof value !== 'object' || value === null) {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn (prototype === null || prototype === Object.prototype || Object.getPrototypeOf(prototype) === null) && !(Symbol.toStringTag in value) && !(Symbol.iterator in value);\n}\n","/**\n * @typedef {(error?: Error|null|undefined, ...output: Array<any>) => void} Callback\n * @typedef {(...input: Array<any>) => any} Middleware\n *\n * @typedef {(...input: Array<any>) => void} Run\n *   Call all middleware.\n * @typedef {(fn: Middleware) => Pipeline} Use\n *   Add `fn` (middleware) to the list.\n * @typedef {{run: Run, use: Use}} Pipeline\n *   Middleware.\n */\n\n/**\n * Create new middleware.\n *\n * @returns {Pipeline}\n */\nexport function trough() {\n  /** @type {Array<Middleware>} */\n  const fns = []\n  /** @type {Pipeline} */\n  const pipeline = {run, use}\n\n  return pipeline\n\n  /** @type {Run} */\n  function run(...values) {\n    let middlewareIndex = -1\n    /** @type {Callback} */\n    const callback = values.pop()\n\n    if (typeof callback !== 'function') {\n      throw new TypeError('Expected function as last argument, not ' + callback)\n    }\n\n    next(null, ...values)\n\n    /**\n     * Run the next `fn`, or we’re done.\n     *\n     * @param {Error|null|undefined} error\n     * @param {Array<any>} output\n     */\n    function next(error, ...output) {\n      const fn = fns[++middlewareIndex]\n      let index = -1\n\n      if (error) {\n        callback(error)\n        return\n      }\n\n      // Copy non-nullish input into values.\n      while (++index < values.length) {\n        if (output[index] === null || output[index] === undefined) {\n          output[index] = values[index]\n        }\n      }\n\n      // Save the newly created `output` for the next call.\n      values = output\n\n      // Next or done.\n      if (fn) {\n        wrap(fn, next)(...output)\n      } else {\n        callback(null, ...output)\n      }\n    }\n  }\n\n  /** @type {Use} */\n  function use(middelware) {\n    if (typeof middelware !== 'function') {\n      throw new TypeError(\n        'Expected `middelware` to be a function, not ' + middelware\n      )\n    }\n\n    fns.push(middelware)\n    return pipeline\n  }\n}\n\n/**\n * Wrap `middleware`.\n * Can be sync or async; return a promise, receive a callback, or return new\n * values and errors.\n *\n * @param {Middleware} middleware\n * @param {Callback} callback\n */\nexport function wrap(middleware, callback) {\n  /** @type {boolean} */\n  let called\n\n  return wrapped\n\n  /**\n   * Call `middleware`.\n   * @this {any}\n   * @param {Array<any>} parameters\n   * @returns {void}\n   */\n  function wrapped(...parameters) {\n    const fnExpectsCallback = middleware.length > parameters.length\n    /** @type {any} */\n    let result\n\n    if (fnExpectsCallback) {\n      parameters.push(done)\n    }\n\n    try {\n      result = middleware.apply(this, parameters)\n    } catch (error) {\n      const exception = /** @type {Error} */ (error)\n\n      // Well, this is quite the pickle.\n      // `middleware` received a callback and called it synchronously, but that\n      // threw an error.\n      // The only thing left to do is to throw the thing instead.\n      if (fnExpectsCallback && called) {\n        throw exception\n      }\n\n      return done(exception)\n    }\n\n    if (!fnExpectsCallback) {\n      if (result instanceof Promise) {\n        result.then(then, done)\n      } else if (result instanceof Error) {\n        done(result)\n      } else {\n        then(result)\n      }\n    }\n  }\n\n  /**\n   * Call `callback`, only once.\n   * @type {Callback}\n   */\n  function done(error, ...output) {\n    if (!called) {\n      called = true\n      callback(error, ...output)\n    }\n  }\n\n  /**\n   * Call `done` with one value.\n   *\n   * @param {any} [value]\n   */\n  function then(value) {\n    done(null, value)\n  }\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {object & {type: string, position?: Position | undefined}} NodeLike\n */\n\nimport {stringifyPosition} from 'unist-util-stringify-position'\n\n/**\n * Message.\n */\nexport class VFileMessage extends Error {\n  /**\n   * Create a message for `reason` at `place` from `origin`.\n   *\n   * When an error is passed in as `reason`, the `stack` is copied.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   *\n   *   > 👉 **Note**: you should use markdown.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns\n   *   Instance of `VFileMessage`.\n   */\n  // To do: next major: expose `undefined` everywhere instead of `null`.\n  constructor(reason, place, origin) {\n    /** @type {[string | null, string | null]} */\n    const parts = [null, null]\n    /** @type {Position} */\n    let position = {\n      // @ts-expect-error: we always follows the structure of `position`.\n      start: {line: null, column: null},\n      // @ts-expect-error: \"\n      end: {line: null, column: null}\n    }\n\n    super()\n\n    if (typeof place === 'string') {\n      origin = place\n      place = undefined\n    }\n\n    if (typeof origin === 'string') {\n      const index = origin.indexOf(':')\n\n      if (index === -1) {\n        parts[1] = origin\n      } else {\n        parts[0] = origin.slice(0, index)\n        parts[1] = origin.slice(index + 1)\n      }\n    }\n\n    if (place) {\n      // Node.\n      if ('type' in place || 'position' in place) {\n        if (place.position) {\n          // To do: next major: deep clone.\n          // @ts-expect-error: looks like a position.\n          position = place.position\n        }\n      }\n      // Position.\n      else if ('start' in place || 'end' in place) {\n        // @ts-expect-error: looks like a position.\n        // To do: next major: deep clone.\n        position = place\n      }\n      // Point.\n      else if ('line' in place || 'column' in place) {\n        // To do: next major: deep clone.\n        position.start = place\n      }\n    }\n\n    // Fields from `Error`.\n    /**\n     * Serialized positional info of error.\n     *\n     * On normal errors, this would be something like `ParseError`, buit in\n     * `VFile` messages we use this space to show where an error happened.\n     */\n    this.name = stringifyPosition(place) || '1:1'\n\n    /**\n     * Reason for message.\n     *\n     * @type {string}\n     */\n    this.message = typeof reason === 'object' ? reason.message : reason\n\n    /**\n     * Stack of message.\n     *\n     * This is used by normal errors to show where something happened in\n     * programming code, irrelevant for `VFile` messages,\n     *\n     * @type {string}\n     */\n    this.stack = ''\n\n    if (typeof reason === 'object' && reason.stack) {\n      this.stack = reason.stack\n    }\n\n    /**\n     * Reason for message.\n     *\n     * > 👉 **Note**: you should use markdown.\n     *\n     * @type {string}\n     */\n    this.reason = this.message\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * State of problem.\n     *\n     * * `true` — marks associated file as no longer processable (error)\n     * * `false` — necessitates a (potential) change (warning)\n     * * `null | undefined` — for things that might not need changing (info)\n     *\n     * @type {boolean | null | undefined}\n     */\n    this.fatal\n\n    /**\n     * Starting line of error.\n     *\n     * @type {number | null}\n     */\n    this.line = position.start.line\n\n    /**\n     * Starting column of error.\n     *\n     * @type {number | null}\n     */\n    this.column = position.start.column\n\n    /**\n     * Full unist position.\n     *\n     * @type {Position | null}\n     */\n    this.position = position\n\n    /**\n     * Namespace of message (example: `'my-package'`).\n     *\n     * @type {string | null}\n     */\n    this.source = parts[0]\n\n    /**\n     * Category of message (example: `'my-rule'`).\n     *\n     * @type {string | null}\n     */\n    this.ruleId = parts[1]\n\n    /**\n     * Path of a file (used throughout the `VFile` ecosystem).\n     *\n     * @type {string | null}\n     */\n    this.file\n\n    // The following fields are “well known”.\n    // Not standard.\n    // Feel free to add other non-standard fields to your messages.\n\n    /**\n     * Specify the source value that’s being reported, which is deemed\n     * incorrect.\n     *\n     * @type {string | null}\n     */\n    this.actual\n\n    /**\n     * Suggest acceptable values that can be used instead of `actual`.\n     *\n     * @type {Array<string> | null}\n     */\n    this.expected\n\n    /**\n     * Link to docs for the message.\n     *\n     * > 👉 **Note**: this must be an absolute URL that can be passed as `x`\n     * > to `new URL(x)`.\n     *\n     * @type {string | null}\n     */\n    this.url\n\n    /**\n     * Long form description of the message (you should use markdown).\n     *\n     * @type {string | null}\n     */\n    this.note\n    /* eslint-enable no-unused-expressions */\n  }\n}\n\nVFileMessage.prototype.file = ''\nVFileMessage.prototype.name = ''\nVFileMessage.prototype.reason = ''\nVFileMessage.prototype.message = ''\nVFileMessage.prototype.stack = ''\nVFileMessage.prototype.fatal = null\nVFileMessage.prototype.column = null\nVFileMessage.prototype.line = null\nVFileMessage.prototype.source = null\nVFileMessage.prototype.ruleId = null\nVFileMessage.prototype.position = null\n","// A derivative work based on:\n// <https://github.com/browserify/path-browserify>.\n// Which is licensed:\n//\n// MIT License\n//\n// Copyright (c) 2013 James Halliday\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy of\n// this software and associated documentation files (the \"Software\"), to deal in\n// the Software without restriction, including without limitation the rights to\n// use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\n// the Software, and to permit persons to whom the Software is furnished to do so,\n// subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\n// FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\n// COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\n// IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\n// CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n// A derivative work based on:\n//\n// Parts of that are extracted from Node’s internal `path` module:\n// <https://github.com/nodejs/node/blob/master/lib/path.js>.\n// Which is licensed:\n//\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nexport const path = {basename, dirname, extname, join, sep: '/'}\n\n/* eslint-disable max-depth, complexity */\n\n/**\n * Get the basename from a path.\n *\n * @param {string} path\n *   File path.\n * @param {string | undefined} [ext]\n *   Extension to strip.\n * @returns {string}\n *   Stem or basename.\n */\nfunction basename(path, ext) {\n  if (ext !== undefined && typeof ext !== 'string') {\n    throw new TypeError('\"ext\" argument must be a string')\n  }\n\n  assertPath(path)\n  let start = 0\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let seenNonSlash\n\n  if (ext === undefined || ext.length === 0 || ext.length > path.length) {\n    while (index--) {\n      if (path.charCodeAt(index) === 47 /* `/` */) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now.\n        if (seenNonSlash) {\n          start = index + 1\n          break\n        }\n      } else if (end < 0) {\n        // We saw the first non-path separator, mark this as the end of our\n        // path component.\n        seenNonSlash = true\n        end = index + 1\n      }\n    }\n\n    return end < 0 ? '' : path.slice(start, end)\n  }\n\n  if (ext === path) {\n    return ''\n  }\n\n  let firstNonSlashEnd = -1\n  let extIndex = ext.length - 1\n\n  while (index--) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (seenNonSlash) {\n        start = index + 1\n        break\n      }\n    } else {\n      if (firstNonSlashEnd < 0) {\n        // We saw the first non-path separator, remember this index in case\n        // we need it if the extension ends up not matching.\n        seenNonSlash = true\n        firstNonSlashEnd = index + 1\n      }\n\n      if (extIndex > -1) {\n        // Try to match the explicit extension.\n        if (path.charCodeAt(index) === ext.charCodeAt(extIndex--)) {\n          if (extIndex < 0) {\n            // We matched the extension, so mark this as the end of our path\n            // component\n            end = index\n          }\n        } else {\n          // Extension does not match, so our result is the entire path\n          // component\n          extIndex = -1\n          end = firstNonSlashEnd\n        }\n      }\n    }\n  }\n\n  if (start === end) {\n    end = firstNonSlashEnd\n  } else if (end < 0) {\n    end = path.length\n  }\n\n  return path.slice(start, end)\n}\n\n/**\n * Get the dirname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\nfunction dirname(path) {\n  assertPath(path)\n\n  if (path.length === 0) {\n    return '.'\n  }\n\n  let end = -1\n  let index = path.length\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  // Prefix `--` is important to not run on `0`.\n  while (--index) {\n    if (path.charCodeAt(index) === 47 /* `/` */) {\n      if (unmatchedSlash) {\n        end = index\n        break\n      }\n    } else if (!unmatchedSlash) {\n      // We saw the first non-path separator\n      unmatchedSlash = true\n    }\n  }\n\n  return end < 0\n    ? path.charCodeAt(0) === 47 /* `/` */\n      ? '/'\n      : '.'\n    : end === 1 && path.charCodeAt(0) === 47 /* `/` */\n    ? '//'\n    : path.slice(0, end)\n}\n\n/**\n * Get an extname from a path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   Extname.\n */\nfunction extname(path) {\n  assertPath(path)\n\n  let index = path.length\n\n  let end = -1\n  let startPart = 0\n  let startDot = -1\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find.\n  let preDotState = 0\n  /** @type {boolean | undefined} */\n  let unmatchedSlash\n\n  while (index--) {\n    const code = path.charCodeAt(index)\n\n    if (code === 47 /* `/` */) {\n      // If we reached a path separator that was not part of a set of path\n      // separators at the end of the string, stop now.\n      if (unmatchedSlash) {\n        startPart = index + 1\n        break\n      }\n\n      continue\n    }\n\n    if (end < 0) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension.\n      unmatchedSlash = true\n      end = index + 1\n    }\n\n    if (code === 46 /* `.` */) {\n      // If this is our first dot, mark it as the start of our extension.\n      if (startDot < 0) {\n        startDot = index\n      } else if (preDotState !== 1) {\n        preDotState = 1\n      }\n    } else if (startDot > -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension.\n      preDotState = -1\n    }\n  }\n\n  if (\n    startDot < 0 ||\n    end < 0 ||\n    // We saw a non-dot character immediately before the dot.\n    preDotState === 0 ||\n    // The (right-most) trimmed path component is exactly `..`.\n    (preDotState === 1 && startDot === end - 1 && startDot === startPart + 1)\n  ) {\n    return ''\n  }\n\n  return path.slice(startDot, end)\n}\n\n/**\n * Join segments from a path.\n *\n * @param {Array<string>} segments\n *   Path segments.\n * @returns {string}\n *   File path.\n */\nfunction join(...segments) {\n  let index = -1\n  /** @type {string | undefined} */\n  let joined\n\n  while (++index < segments.length) {\n    assertPath(segments[index])\n\n    if (segments[index]) {\n      joined =\n        joined === undefined ? segments[index] : joined + '/' + segments[index]\n    }\n  }\n\n  return joined === undefined ? '.' : normalize(joined)\n}\n\n/**\n * Normalize a basic file path.\n *\n * @param {string} path\n *   File path.\n * @returns {string}\n *   File path.\n */\n// Note: `normalize` is not exposed as `path.normalize`, so some code is\n// manually removed from it.\nfunction normalize(path) {\n  assertPath(path)\n\n  const absolute = path.charCodeAt(0) === 47 /* `/` */\n\n  // Normalize the path according to POSIX rules.\n  let value = normalizeString(path, !absolute)\n\n  if (value.length === 0 && !absolute) {\n    value = '.'\n  }\n\n  if (value.length > 0 && path.charCodeAt(path.length - 1) === 47 /* / */) {\n    value += '/'\n  }\n\n  return absolute ? '/' + value : value\n}\n\n/**\n * Resolve `.` and `..` elements in a path with directory names.\n *\n * @param {string} path\n *   File path.\n * @param {boolean} allowAboveRoot\n *   Whether `..` can move above root.\n * @returns {string}\n *   File path.\n */\nfunction normalizeString(path, allowAboveRoot) {\n  let result = ''\n  let lastSegmentLength = 0\n  let lastSlash = -1\n  let dots = 0\n  let index = -1\n  /** @type {number | undefined} */\n  let code\n  /** @type {number} */\n  let lastSlashIndex\n\n  while (++index <= path.length) {\n    if (index < path.length) {\n      code = path.charCodeAt(index)\n    } else if (code === 47 /* `/` */) {\n      break\n    } else {\n      code = 47 /* `/` */\n    }\n\n    if (code === 47 /* `/` */) {\n      if (lastSlash === index - 1 || dots === 1) {\n        // Empty.\n      } else if (lastSlash !== index - 1 && dots === 2) {\n        if (\n          result.length < 2 ||\n          lastSegmentLength !== 2 ||\n          result.charCodeAt(result.length - 1) !== 46 /* `.` */ ||\n          result.charCodeAt(result.length - 2) !== 46 /* `.` */\n        ) {\n          if (result.length > 2) {\n            lastSlashIndex = result.lastIndexOf('/')\n\n            if (lastSlashIndex !== result.length - 1) {\n              if (lastSlashIndex < 0) {\n                result = ''\n                lastSegmentLength = 0\n              } else {\n                result = result.slice(0, lastSlashIndex)\n                lastSegmentLength = result.length - 1 - result.lastIndexOf('/')\n              }\n\n              lastSlash = index\n              dots = 0\n              continue\n            }\n          } else if (result.length > 0) {\n            result = ''\n            lastSegmentLength = 0\n            lastSlash = index\n            dots = 0\n            continue\n          }\n        }\n\n        if (allowAboveRoot) {\n          result = result.length > 0 ? result + '/..' : '..'\n          lastSegmentLength = 2\n        }\n      } else {\n        if (result.length > 0) {\n          result += '/' + path.slice(lastSlash + 1, index)\n        } else {\n          result = path.slice(lastSlash + 1, index)\n        }\n\n        lastSegmentLength = index - lastSlash - 1\n      }\n\n      lastSlash = index\n      dots = 0\n    } else if (code === 46 /* `.` */ && dots > -1) {\n      dots++\n    } else {\n      dots = -1\n    }\n  }\n\n  return result\n}\n\n/**\n * Make sure `path` is a string.\n *\n * @param {string} path\n *   File path.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError(\n      'Path must be a string. Received ' + JSON.stringify(path)\n    )\n  }\n}\n\n/* eslint-enable max-depth, complexity */\n","// Somewhat based on:\n// <https://github.com/defunctzombie/node-process/blob/master/browser.js>.\n// But I don’t think one tiny line of code can be copyrighted. 😅\nexport const proc = {cwd}\n\nfunction cwd() {\n  return '/'\n}\n","/**\n * @typedef URL\n * @property {string} hash\n * @property {string} host\n * @property {string} hostname\n * @property {string} href\n * @property {string} origin\n * @property {string} password\n * @property {string} pathname\n * @property {string} port\n * @property {string} protocol\n * @property {string} search\n * @property {any} searchParams\n * @property {string} username\n * @property {() => string} toString\n * @property {() => string} toJSON\n */\n\n/**\n * Check if `fileUrlOrPath` looks like a URL.\n *\n * @param {unknown} fileUrlOrPath\n *   File path or URL.\n * @returns {fileUrlOrPath is URL}\n *   Whether it’s a URL.\n */\n// From: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js#L1501>\nexport function isUrl(fileUrlOrPath) {\n  return (\n    fileUrlOrPath !== null &&\n    typeof fileUrlOrPath === 'object' &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.href &&\n    // @ts-expect-error: indexable.\n    fileUrlOrPath.origin\n  )\n}\n","/// <reference lib=\"dom\" />\n\nimport {isUrl} from './minurl.shared.js'\n\n// See: <https://github.com/nodejs/node/blob/fcf8ba4/lib/internal/url.js>\n\n/**\n * @param {string | URL} path\n *   File URL.\n * @returns {string}\n *   File URL.\n */\nexport function urlToPath(path) {\n  if (typeof path === 'string') {\n    path = new URL(path)\n  } else if (!isUrl(path)) {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'The \"path\" argument must be of type string or an instance of URL. Received `' +\n        path +\n        '`'\n    )\n    error.code = 'ERR_INVALID_ARG_TYPE'\n    throw error\n  }\n\n  if (path.protocol !== 'file:') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError('The URL must be of scheme file')\n    error.code = 'ERR_INVALID_URL_SCHEME'\n    throw error\n  }\n\n  return getPathFromURLPosix(path)\n}\n\n/**\n * Get a path from a POSIX URL.\n *\n * @param {URL} url\n *   URL.\n * @returns {string}\n *   File path.\n */\nfunction getPathFromURLPosix(url) {\n  if (url.hostname !== '') {\n    /** @type {NodeJS.ErrnoException} */\n    const error = new TypeError(\n      'File URL host must be \"localhost\" or empty on darwin'\n    )\n    error.code = 'ERR_INVALID_FILE_URL_HOST'\n    throw error\n  }\n\n  const pathname = url.pathname\n  let index = -1\n\n  while (++index < pathname.length) {\n    if (\n      pathname.charCodeAt(index) === 37 /* `%` */ &&\n      pathname.charCodeAt(index + 1) === 50 /* `2` */\n    ) {\n      const third = pathname.charCodeAt(index + 2)\n      if (third === 70 /* `F` */ || third === 102 /* `f` */) {\n        /** @type {NodeJS.ErrnoException} */\n        const error = new TypeError(\n          'File URL path must not include encoded / characters'\n        )\n        error.code = 'ERR_INVALID_FILE_URL_PATH'\n        throw error\n      }\n    }\n  }\n\n  return decodeURIComponent(pathname)\n}\n\nexport {isUrl} from './minurl.shared.js'\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Position} Position\n * @typedef {import('unist').Point} Point\n * @typedef {import('./minurl.shared.js').URL} URL\n * @typedef {import('../index.js').Data} Data\n * @typedef {import('../index.js').Value} Value\n */\n\n/**\n * @typedef {Record<string, unknown> & {type: string, position?: Position | undefined}} NodeLike\n *\n * @typedef {'ascii' | 'utf8' | 'utf-8' | 'utf16le' | 'ucs2' | 'ucs-2' | 'base64' | 'base64url' | 'latin1' | 'binary' | 'hex'} BufferEncoding\n *   Encodings supported by the buffer class.\n *\n *   This is a copy of the types from Node, copied to prevent Node globals from\n *   being needed.\n *   Copied from: <https://github.com/DefinitelyTyped/DefinitelyTyped/blob/90a4ec8/types/node/buffer.d.ts#L170>\n *\n * @typedef {Options | URL | Value | VFile} Compatible\n *   Things that can be passed to the constructor.\n *\n * @typedef VFileCoreOptions\n *   Set multiple values.\n * @property {Value | null | undefined} [value]\n *   Set `value`.\n * @property {string | null | undefined} [cwd]\n *   Set `cwd`.\n * @property {Array<string> | null | undefined} [history]\n *   Set `history`.\n * @property {URL | string | null | undefined} [path]\n *   Set `path`.\n * @property {string | null | undefined} [basename]\n *   Set `basename`.\n * @property {string | null | undefined} [stem]\n *   Set `stem`.\n * @property {string | null | undefined} [extname]\n *   Set `extname`.\n * @property {string | null | undefined} [dirname]\n *   Set `dirname`.\n * @property {Data | null | undefined} [data]\n *   Set `data`.\n *\n * @typedef Map\n *   Raw source map.\n *\n *   See:\n *   <https://github.com/mozilla/source-map/blob/58819f0/source-map.d.ts#L15-L23>.\n * @property {number} version\n *   Which version of the source map spec this map is following.\n * @property {Array<string>} sources\n *   An array of URLs to the original source files.\n * @property {Array<string>} names\n *   An array of identifiers which can be referenced by individual mappings.\n * @property {string | undefined} [sourceRoot]\n *   The URL root from which all sources are relative.\n * @property {Array<string> | undefined} [sourcesContent]\n *   An array of contents of the original source files.\n * @property {string} mappings\n *   A string of base64 VLQs which contain the actual mappings.\n * @property {string} file\n *   The generated file this source map is associated with.\n *\n * @typedef {{[key: string]: unknown} & VFileCoreOptions} Options\n *   Configuration.\n *\n *   A bunch of keys that will be shallow copied over to the new file.\n *\n * @typedef {Record<string, unknown>} ReporterSettings\n *   Configuration for reporters.\n */\n\n/**\n * @template {ReporterSettings} Settings\n *   Options type.\n * @callback Reporter\n *   Type for a reporter.\n * @param {Array<VFile>} files\n *   Files to report.\n * @param {Settings} options\n *   Configuration.\n * @returns {string}\n *   Report.\n */\n\nimport bufferLike from 'is-buffer'\nimport {VFileMessage} from 'vfile-message'\nimport {path} from './minpath.js'\nimport {proc} from './minproc.js'\nimport {urlToPath, isUrl} from './minurl.js'\n\n/**\n * Order of setting (least specific to most), we need this because otherwise\n * `{stem: 'a', path: '~/b.js'}` would throw, as a path is needed before a\n * stem can be set.\n *\n * @type {Array<'basename' | 'dirname' | 'extname' | 'history' | 'path' | 'stem'>}\n */\nconst order = ['history', 'path', 'basename', 'stem', 'extname', 'dirname']\n\nexport class VFile {\n  /**\n   * Create a new virtual file.\n   *\n   * `options` is treated as:\n   *\n   * *   `string` or `Buffer` — `{value: options}`\n   * *   `URL` — `{path: options}`\n   * *   `VFile` — shallow copies its data over to the new file\n   * *   `object` — all fields are shallow copied over to the new file\n   *\n   * Path related fields are set in the following order (least specific to\n   * most specific): `history`, `path`, `basename`, `stem`, `extname`,\n   * `dirname`.\n   *\n   * You cannot set `dirname` or `extname` without setting either `history`,\n   * `path`, `basename`, or `stem` too.\n   *\n   * @param {Compatible | null | undefined} [value]\n   *   File value.\n   * @returns\n   *   New instance.\n   */\n  constructor(value) {\n    /** @type {Options | VFile} */\n    let options\n\n    if (!value) {\n      options = {}\n    } else if (typeof value === 'string' || buffer(value)) {\n      options = {value}\n    } else if (isUrl(value)) {\n      options = {path: value}\n    } else {\n      options = value\n    }\n\n    /**\n     * Place to store custom information (default: `{}`).\n     *\n     * It’s OK to store custom data directly on the file but moving it to\n     * `data` is recommended.\n     *\n     * @type {Data}\n     */\n    this.data = {}\n\n    /**\n     * List of messages associated with the file.\n     *\n     * @type {Array<VFileMessage>}\n     */\n    this.messages = []\n\n    /**\n     * List of filepaths the file moved between.\n     *\n     * The first is the original path and the last is the current path.\n     *\n     * @type {Array<string>}\n     */\n    this.history = []\n\n    /**\n     * Base of `path` (default: `process.cwd()` or `'/'` in browsers).\n     *\n     * @type {string}\n     */\n    this.cwd = proc.cwd()\n\n    /* eslint-disable no-unused-expressions */\n    /**\n     * Raw value.\n     *\n     * @type {Value}\n     */\n    this.value\n\n    // The below are non-standard, they are “well-known”.\n    // As in, used in several tools.\n\n    /**\n     * Whether a file was saved to disk.\n     *\n     * This is used by vfile reporters.\n     *\n     * @type {boolean}\n     */\n    this.stored\n\n    /**\n     * Custom, non-string, compiled, representation.\n     *\n     * This is used by unified to store non-string results.\n     * One example is when turning markdown into React nodes.\n     *\n     * @type {unknown}\n     */\n    this.result\n\n    /**\n     * Source map.\n     *\n     * This type is equivalent to the `RawSourceMap` type from the `source-map`\n     * module.\n     *\n     * @type {Map | null | undefined}\n     */\n    this.map\n    /* eslint-enable no-unused-expressions */\n\n    // Set path related properties in the correct order.\n    let index = -1\n\n    while (++index < order.length) {\n      const prop = order[index]\n\n      // Note: we specifically use `in` instead of `hasOwnProperty` to accept\n      // `vfile`s too.\n      if (\n        prop in options &&\n        options[prop] !== undefined &&\n        options[prop] !== null\n      ) {\n        // @ts-expect-error: TS doesn’t understand basic reality.\n        this[prop] = prop === 'history' ? [...options[prop]] : options[prop]\n      }\n    }\n\n    /** @type {string} */\n    let prop\n\n    // Set non-path related properties.\n    for (prop in options) {\n      // @ts-expect-error: fine to set other things.\n      if (!order.includes(prop)) {\n        // @ts-expect-error: fine to set other things.\n        this[prop] = options[prop]\n      }\n    }\n  }\n\n  /**\n   * Get the full path (example: `'~/index.min.js'`).\n   *\n   * @returns {string}\n   */\n  get path() {\n    return this.history[this.history.length - 1]\n  }\n\n  /**\n   * Set the full path (example: `'~/index.min.js'`).\n   *\n   * Cannot be nullified.\n   * You can set a file URL (a `URL` object with a `file:` protocol) which will\n   * be turned into a path with `url.fileURLToPath`.\n   *\n   * @param {string | URL} path\n   */\n  set path(path) {\n    if (isUrl(path)) {\n      path = urlToPath(path)\n    }\n\n    assertNonEmpty(path, 'path')\n\n    if (this.path !== path) {\n      this.history.push(path)\n    }\n  }\n\n  /**\n   * Get the parent path (example: `'~'`).\n   */\n  get dirname() {\n    return typeof this.path === 'string' ? path.dirname(this.path) : undefined\n  }\n\n  /**\n   * Set the parent path (example: `'~'`).\n   *\n   * Cannot be set if there’s no `path` yet.\n   */\n  set dirname(dirname) {\n    assertPath(this.basename, 'dirname')\n    this.path = path.join(dirname || '', this.basename)\n  }\n\n  /**\n   * Get the basename (including extname) (example: `'index.min.js'`).\n   */\n  get basename() {\n    return typeof this.path === 'string' ? path.basename(this.path) : undefined\n  }\n\n  /**\n   * Set basename (including extname) (`'index.min.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set basename(basename) {\n    assertNonEmpty(basename, 'basename')\n    assertPart(basename, 'basename')\n    this.path = path.join(this.dirname || '', basename)\n  }\n\n  /**\n   * Get the extname (including dot) (example: `'.js'`).\n   */\n  get extname() {\n    return typeof this.path === 'string' ? path.extname(this.path) : undefined\n  }\n\n  /**\n   * Set the extname (including dot) (example: `'.js'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be set if there’s no `path` yet.\n   */\n  set extname(extname) {\n    assertPart(extname, 'extname')\n    assertPath(this.dirname, 'extname')\n\n    if (extname) {\n      if (extname.charCodeAt(0) !== 46 /* `.` */) {\n        throw new Error('`extname` must start with `.`')\n      }\n\n      if (extname.includes('.', 1)) {\n        throw new Error('`extname` cannot contain multiple dots')\n      }\n    }\n\n    this.path = path.join(this.dirname, this.stem + (extname || ''))\n  }\n\n  /**\n   * Get the stem (basename w/o extname) (example: `'index.min'`).\n   */\n  get stem() {\n    return typeof this.path === 'string'\n      ? path.basename(this.path, this.extname)\n      : undefined\n  }\n\n  /**\n   * Set the stem (basename w/o extname) (example: `'index.min'`).\n   *\n   * Cannot contain path separators (`'/'` on unix, macOS, and browsers, `'\\'`\n   * on windows).\n   * Cannot be nullified (use `file.path = file.dirname` instead).\n   */\n  set stem(stem) {\n    assertNonEmpty(stem, 'stem')\n    assertPart(stem, 'stem')\n    this.path = path.join(this.dirname || '', stem + (this.extname || ''))\n  }\n\n  /**\n   * Serialize the file.\n   *\n   * @param {BufferEncoding | null | undefined} [encoding='utf8']\n   *   Character encoding to understand `value` as when it’s a `Buffer`\n   *   (default: `'utf8'`).\n   * @returns {string}\n   *   Serialized file.\n   */\n  toString(encoding) {\n    return (this.value || '').toString(encoding || undefined)\n  }\n\n  /**\n   * Create a warning message associated with the file.\n   *\n   * Its `fatal` is set to `false` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  message(reason, place, origin) {\n    const message = new VFileMessage(reason, place, origin)\n\n    if (this.path) {\n      message.name = this.path + ':' + message.name\n      message.file = this.path\n    }\n\n    message.fatal = false\n\n    this.messages.push(message)\n\n    return message\n  }\n\n  /**\n   * Create an info message associated with the file.\n   *\n   * Its `fatal` is set to `null` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {VFileMessage}\n   *   Message.\n   */\n  info(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = null\n\n    return message\n  }\n\n  /**\n   * Create a fatal error associated with the file.\n   *\n   * Its `fatal` is set to `true` and `file` is set to the current file path.\n   * Its added to `file.messages`.\n   *\n   * > 👉 **Note**: a fatal error means that a file is no longer processable.\n   *\n   * @param {string | Error | VFileMessage} reason\n   *   Reason for message, uses the stack and message of the error if given.\n   * @param {Node | NodeLike | Position | Point | null | undefined} [place]\n   *   Place in file where the message occurred.\n   * @param {string | null | undefined} [origin]\n   *   Place in code where the message originates (example:\n   *   `'my-package:my-rule'` or `'my-rule'`).\n   * @returns {never}\n   *   Message.\n   * @throws {VFileMessage}\n   *   Message.\n   */\n  fail(reason, place, origin) {\n    const message = this.message(reason, place, origin)\n\n    message.fatal = true\n\n    throw message\n  }\n}\n\n/**\n * Assert that `part` is not a path (as in, does not contain `path.sep`).\n *\n * @param {string | null | undefined} part\n *   File path part.\n * @param {string} name\n *   Part name.\n * @returns {void}\n *   Nothing.\n */\nfunction assertPart(part, name) {\n  if (part && part.includes(path.sep)) {\n    throw new Error(\n      '`' + name + '` cannot be a path: did not expect `' + path.sep + '`'\n    )\n  }\n}\n\n/**\n * Assert that `part` is not empty.\n *\n * @param {string | undefined} part\n *   Thing.\n * @param {string} name\n *   Part name.\n * @returns {asserts part is string}\n *   Nothing.\n */\nfunction assertNonEmpty(part, name) {\n  if (!part) {\n    throw new Error('`' + name + '` cannot be empty')\n  }\n}\n\n/**\n * Assert `path` exists.\n *\n * @param {string | undefined} path\n *   Path.\n * @param {string} name\n *   Dependency name.\n * @returns {asserts path is string}\n *   Nothing.\n */\nfunction assertPath(path, name) {\n  if (!path) {\n    throw new Error('Setting `' + name + '` requires `path` to be set too')\n  }\n}\n\n/**\n * Assert `value` is a buffer.\n *\n * @param {unknown} value\n *   thing.\n * @returns {value is Buffer}\n *   Whether `value` is a Node.js buffer.\n */\nfunction buffer(value) {\n  return bufferLike(value)\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('vfile').VFileCompatible} VFileCompatible\n * @typedef {import('vfile').VFileValue} VFileValue\n * @typedef {import('..').Processor} Processor\n * @typedef {import('..').Plugin} Plugin\n * @typedef {import('..').Preset} Preset\n * @typedef {import('..').Pluggable} Pluggable\n * @typedef {import('..').PluggableList} PluggableList\n * @typedef {import('..').Transformer} Transformer\n * @typedef {import('..').Parser} Parser\n * @typedef {import('..').Compiler} Compiler\n * @typedef {import('..').RunCallback} RunCallback\n * @typedef {import('..').ProcessCallback} ProcessCallback\n *\n * @typedef Context\n * @property {Node} tree\n * @property {VFile} file\n */\n\nimport {bail} from 'bail'\nimport isBuffer from 'is-buffer'\nimport extend from 'extend'\nimport isPlainObj from 'is-plain-obj'\nimport {trough} from 'trough'\nimport {VFile} from 'vfile'\n\n// Expose a frozen processor.\nexport const unified = base().freeze()\n\nconst own = {}.hasOwnProperty\n\n// Function to create the first processor.\n/**\n * @returns {Processor}\n */\nfunction base() {\n  const transformers = trough()\n  /** @type {Processor['attachers']} */\n  const attachers = []\n  /** @type {Record<string, unknown>} */\n  let namespace = {}\n  /** @type {boolean|undefined} */\n  let frozen\n  let freezeIndex = -1\n\n  // Data management.\n  // @ts-expect-error: overloads are handled.\n  processor.data = data\n  processor.Parser = undefined\n  processor.Compiler = undefined\n\n  // Lock.\n  processor.freeze = freeze\n\n  // Plugins.\n  processor.attachers = attachers\n  // @ts-expect-error: overloads are handled.\n  processor.use = use\n\n  // API.\n  processor.parse = parse\n  processor.stringify = stringify\n  // @ts-expect-error: overloads are handled.\n  processor.run = run\n  processor.runSync = runSync\n  // @ts-expect-error: overloads are handled.\n  processor.process = process\n  processor.processSync = processSync\n\n  // Expose.\n  return processor\n\n  // Create a new processor based on the processor in the current scope.\n  /** @type {Processor} */\n  function processor() {\n    const destination = base()\n    let index = -1\n\n    while (++index < attachers.length) {\n      destination.use(...attachers[index])\n    }\n\n    destination.data(extend(true, {}, namespace))\n\n    return destination\n  }\n\n  /**\n   * @param {string|Record<string, unknown>} [key]\n   * @param {unknown} [value]\n   * @returns {unknown}\n   */\n  function data(key, value) {\n    if (typeof key === 'string') {\n      // Set `key`.\n      if (arguments.length === 2) {\n        assertUnfrozen('data', frozen)\n        namespace[key] = value\n        return processor\n      }\n\n      // Get `key`.\n      return (own.call(namespace, key) && namespace[key]) || null\n    }\n\n    // Set space.\n    if (key) {\n      assertUnfrozen('data', frozen)\n      namespace = key\n      return processor\n    }\n\n    // Get space.\n    return namespace\n  }\n\n  /** @type {Processor['freeze']} */\n  function freeze() {\n    if (frozen) {\n      return processor\n    }\n\n    while (++freezeIndex < attachers.length) {\n      const [attacher, ...options] = attachers[freezeIndex]\n\n      if (options[0] === false) {\n        continue\n      }\n\n      if (options[0] === true) {\n        options[0] = undefined\n      }\n\n      /** @type {Transformer|void} */\n      const transformer = attacher.call(processor, ...options)\n\n      if (typeof transformer === 'function') {\n        transformers.use(transformer)\n      }\n    }\n\n    frozen = true\n    freezeIndex = Number.POSITIVE_INFINITY\n\n    return processor\n  }\n\n  /**\n   * @param {Pluggable|null|undefined} [value]\n   * @param {...unknown} options\n   * @returns {Processor}\n   */\n  function use(value, ...options) {\n    /** @type {Record<string, unknown>|undefined} */\n    let settings\n\n    assertUnfrozen('use', frozen)\n\n    if (value === null || value === undefined) {\n      // Empty.\n    } else if (typeof value === 'function') {\n      addPlugin(value, ...options)\n    } else if (typeof value === 'object') {\n      if (Array.isArray(value)) {\n        addList(value)\n      } else {\n        addPreset(value)\n      }\n    } else {\n      throw new TypeError('Expected usable value, not `' + value + '`')\n    }\n\n    if (settings) {\n      namespace.settings = Object.assign(namespace.settings || {}, settings)\n    }\n\n    return processor\n\n    /**\n     * @param {import('..').Pluggable<unknown[]>} value\n     * @returns {void}\n     */\n    function add(value) {\n      if (typeof value === 'function') {\n        addPlugin(value)\n      } else if (typeof value === 'object') {\n        if (Array.isArray(value)) {\n          const [plugin, ...options] = value\n          addPlugin(plugin, ...options)\n        } else {\n          addPreset(value)\n        }\n      } else {\n        throw new TypeError('Expected usable value, not `' + value + '`')\n      }\n    }\n\n    /**\n     * @param {Preset} result\n     * @returns {void}\n     */\n    function addPreset(result) {\n      addList(result.plugins)\n\n      if (result.settings) {\n        settings = Object.assign(settings || {}, result.settings)\n      }\n    }\n\n    /**\n     * @param {PluggableList|null|undefined} [plugins]\n     * @returns {void}\n     */\n    function addList(plugins) {\n      let index = -1\n\n      if (plugins === null || plugins === undefined) {\n        // Empty.\n      } else if (Array.isArray(plugins)) {\n        while (++index < plugins.length) {\n          const thing = plugins[index]\n          add(thing)\n        }\n      } else {\n        throw new TypeError('Expected a list of plugins, not `' + plugins + '`')\n      }\n    }\n\n    /**\n     * @param {Plugin} plugin\n     * @param {...unknown} [value]\n     * @returns {void}\n     */\n    function addPlugin(plugin, value) {\n      let index = -1\n      /** @type {Processor['attachers'][number]|undefined} */\n      let entry\n\n      while (++index < attachers.length) {\n        if (attachers[index][0] === plugin) {\n          entry = attachers[index]\n          break\n        }\n      }\n\n      if (entry) {\n        if (isPlainObj(entry[1]) && isPlainObj(value)) {\n          value = extend(true, entry[1], value)\n        }\n\n        entry[1] = value\n      } else {\n        // @ts-expect-error: fine.\n        attachers.push([...arguments])\n      }\n    }\n  }\n\n  /** @type {Processor['parse']} */\n  function parse(doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Parser = processor.Parser\n    assertParser('parse', Parser)\n\n    if (newable(Parser, 'parse')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Parser(String(file), file).parse()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Parser(String(file), file) // eslint-disable-line new-cap\n  }\n\n  /** @type {Processor['stringify']} */\n  function stringify(node, doc) {\n    processor.freeze()\n    const file = vfile(doc)\n    const Compiler = processor.Compiler\n    assertCompiler('stringify', Compiler)\n    assertNode(node)\n\n    if (newable(Compiler, 'compile')) {\n      // @ts-expect-error: `newable` checks this.\n      return new Compiler(node, file).compile()\n    }\n\n    // @ts-expect-error: `newable` checks this.\n    return Compiler(node, file) // eslint-disable-line new-cap\n  }\n\n  /**\n   * @param {Node} node\n   * @param {VFileCompatible|RunCallback} [doc]\n   * @param {RunCallback} [callback]\n   * @returns {Promise<Node>|void}\n   */\n  function run(node, doc, callback) {\n    assertNode(node)\n    processor.freeze()\n\n    if (!callback && typeof doc === 'function') {\n      callback = doc\n      doc = undefined\n    }\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((node: Node) => void)} resolve\n     * @param {(error: Error) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      // @ts-expect-error: `doc` can’t be a callback anymore, we checked.\n      transformers.run(node, vfile(doc), done)\n\n      /**\n       * @param {Error|null} error\n       * @param {Node} tree\n       * @param {VFile} file\n       * @returns {void}\n       */\n      function done(error, tree, file) {\n        tree = tree || node\n        if (error) {\n          reject(error)\n        } else if (resolve) {\n          resolve(tree)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, tree, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['runSync']} */\n  function runSync(node, file) {\n    /** @type {Node|undefined} */\n    let result\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.run(node, file, done)\n\n    assertDone('runSync', 'run', complete)\n\n    // @ts-expect-error: we either bailed on an error or have a tree.\n    return result\n\n    /**\n     * @param {Error|null} [error]\n     * @param {Node} [tree]\n     * @returns {void}\n     */\n    function done(error, tree) {\n      bail(error)\n      result = tree\n      complete = true\n    }\n  }\n\n  /**\n   * @param {VFileCompatible} doc\n   * @param {ProcessCallback} [callback]\n   * @returns {Promise<VFile>|undefined}\n   */\n  function process(doc, callback) {\n    processor.freeze()\n    assertParser('process', processor.Parser)\n    assertCompiler('process', processor.Compiler)\n\n    if (!callback) {\n      return new Promise(executor)\n    }\n\n    executor(null, callback)\n\n    /**\n     * @param {null|((file: VFile) => void)} resolve\n     * @param {(error?: Error|null|undefined) => void} reject\n     * @returns {void}\n     */\n    function executor(resolve, reject) {\n      const file = vfile(doc)\n\n      processor.run(processor.parse(file), file, (error, tree, file) => {\n        if (error || !tree || !file) {\n          done(error)\n        } else {\n          /** @type {unknown} */\n          const result = processor.stringify(tree, file)\n\n          if (result === undefined || result === null) {\n            // Empty.\n          } else if (looksLikeAVFileValue(result)) {\n            file.value = result\n          } else {\n            file.result = result\n          }\n\n          done(error, file)\n        }\n      })\n\n      /**\n       * @param {Error|null|undefined} [error]\n       * @param {VFile|undefined} [file]\n       * @returns {void}\n       */\n      function done(error, file) {\n        if (error || !file) {\n          reject(error)\n        } else if (resolve) {\n          resolve(file)\n        } else {\n          // @ts-expect-error: `callback` is defined if `resolve` is not.\n          callback(null, file)\n        }\n      }\n    }\n  }\n\n  /** @type {Processor['processSync']} */\n  function processSync(doc) {\n    /** @type {boolean|undefined} */\n    let complete\n\n    processor.freeze()\n    assertParser('processSync', processor.Parser)\n    assertCompiler('processSync', processor.Compiler)\n\n    const file = vfile(doc)\n\n    processor.process(file, done)\n\n    assertDone('processSync', 'process', complete)\n\n    return file\n\n    /**\n     * @param {Error|null|undefined} [error]\n     * @returns {void}\n     */\n    function done(error) {\n      complete = true\n      bail(error)\n    }\n  }\n}\n\n/**\n * Check if `value` is a constructor.\n *\n * @param {unknown} value\n * @param {string} name\n * @returns {boolean}\n */\nfunction newable(value, name) {\n  return (\n    typeof value === 'function' &&\n    // Prototypes do exist.\n    // type-coverage:ignore-next-line\n    value.prototype &&\n    // A function with keys in its prototype is probably a constructor.\n    // Classes’ prototype methods are not enumerable, so we check if some value\n    // exists in the prototype.\n    // type-coverage:ignore-next-line\n    (keys(value.prototype) || name in value.prototype)\n  )\n}\n\n/**\n * Check if `value` is an object with keys.\n *\n * @param {Record<string, unknown>} value\n * @returns {boolean}\n */\nfunction keys(value) {\n  /** @type {string} */\n  let key\n\n  for (key in value) {\n    if (own.call(value, key)) {\n      return true\n    }\n  }\n\n  return false\n}\n\n/**\n * Assert a parser is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Parser}\n */\nfunction assertParser(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Parser`')\n  }\n}\n\n/**\n * Assert a compiler is available.\n *\n * @param {string} name\n * @param {unknown} value\n * @returns {asserts value is Compiler}\n */\nfunction assertCompiler(name, value) {\n  if (typeof value !== 'function') {\n    throw new TypeError('Cannot `' + name + '` without `Compiler`')\n  }\n}\n\n/**\n * Assert the processor is not frozen.\n *\n * @param {string} name\n * @param {unknown} frozen\n * @returns {asserts frozen is false}\n */\nfunction assertUnfrozen(name, frozen) {\n  if (frozen) {\n    throw new Error(\n      'Cannot call `' +\n        name +\n        '` on a frozen processor.\\nCreate a new processor first, by calling it: use `processor()` instead of `processor`.'\n    )\n  }\n}\n\n/**\n * Assert `node` is a unist node.\n *\n * @param {unknown} node\n * @returns {asserts node is Node}\n */\nfunction assertNode(node) {\n  // `isPlainObj` unfortunately uses `any` instead of `unknown`.\n  // type-coverage:ignore-next-line\n  if (!isPlainObj(node) || typeof node.type !== 'string') {\n    throw new TypeError('Expected node, got `' + node + '`')\n    // Fine.\n  }\n}\n\n/**\n * Assert that `complete` is `true`.\n *\n * @param {string} name\n * @param {string} asyncName\n * @param {unknown} complete\n * @returns {asserts complete is true}\n */\nfunction assertDone(name, asyncName, complete) {\n  if (!complete) {\n    throw new Error(\n      '`' + name + '` finished async. Use `' + asyncName + '` instead'\n    )\n  }\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {VFile}\n */\nfunction vfile(value) {\n  return looksLikeAVFile(value) ? value : new VFile(value)\n}\n\n/**\n * @param {VFileCompatible} [value]\n * @returns {value is VFile}\n */\nfunction looksLikeAVFile(value) {\n  return Boolean(\n    value &&\n      typeof value === 'object' &&\n      'message' in value &&\n      'messages' in value\n  )\n}\n\n/**\n * @param {unknown} [value]\n * @returns {value is VFileValue}\n */\nfunction looksLikeAVFileValue(value) {\n  return typeof value === 'string' || isBuffer(value)\n}\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * Like `Array#splice`, but smarter for giant arrays.\n *\n * `Array#splice` takes all items to be inserted as individual argument which\n * causes a stack overflow in V8 when trying to insert 100k items for instance.\n *\n * Otherwise, this does not return the removed items, and takes `items` as an\n * array instead of rest parameters.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {number} start\n * @param {number} remove\n * @param {T[]} items\n * @returns {void}\n */\nexport function splice(list, start, remove, items) {\n  const end = list.length\n  let chunkStart = 0\n  /** @type {unknown[]} */\n\n  let parameters // Make start between zero and `end` (included).\n\n  if (start < 0) {\n    start = -start > end ? 0 : end + start\n  } else {\n    start = start > end ? end : start\n  }\n\n  remove = remove > 0 ? remove : 0 // No need to chunk the items if there’s only a couple (10k) items.\n\n  if (items.length < 10000) {\n    parameters = Array.from(items)\n    parameters.unshift(start, remove) // @ts-expect-error Hush, it’s fine.\n    ;[].splice.apply(list, parameters)\n  } else {\n    // Delete `remove` items starting from `start`\n    if (remove) [].splice.apply(list, [start, remove]) // Insert the items in chunks to not cause stack overflows.\n\n    while (chunkStart < items.length) {\n      parameters = items.slice(chunkStart, chunkStart + 10000)\n      parameters.unshift(start, 0) // @ts-expect-error Hush, it’s fine.\n      ;[].splice.apply(list, parameters)\n      chunkStart += 10000\n      start += 10000\n    }\n  }\n}\n/**\n * Append `items` (an array) at the end of `list` (another array).\n * When `list` was empty, returns `items` instead.\n *\n * This prevents a potentially expensive operation when `list` is empty,\n * and adds items in batches to prevent V8 from hanging.\n *\n * @template {unknown} T\n * @param {T[]} list\n * @param {T[]} items\n * @returns {T[]}\n */\n\nexport function push(list, items) {\n  if (list.length > 0) {\n    splice(list, list.length, 0, items)\n    return list\n  }\n\n  return items\n}\n","/**\n * @typedef {import('micromark-util-types').NormalizedExtension} NormalizedExtension\n * @typedef {import('micromark-util-types').Extension} Extension\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').HtmlExtension} HtmlExtension\n */\n\nimport {splice} from 'micromark-util-chunked'\n\nconst hasOwnProperty = {}.hasOwnProperty\n\n/**\n * Combine several syntax extensions into one.\n *\n * @param {Extension[]} extensions List of syntax extensions.\n * @returns {NormalizedExtension} A single combined extension.\n */\nexport function combineExtensions(extensions) {\n  /** @type {NormalizedExtension} */\n  const all = {}\n  let index = -1\n\n  while (++index < extensions.length) {\n    syntaxExtension(all, extensions[index])\n  }\n\n  return all\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {NormalizedExtension} all Extension to merge into.\n * @param {Extension} extension Extension to merge.\n * @returns {void}\n */\nfunction syntaxExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let code\n\n    for (code in right) {\n      if (!hasOwnProperty.call(left, code)) left[code] = []\n      const value = right[code]\n      constructs(\n        // @ts-expect-error Looks like a list.\n        left[code],\n        Array.isArray(value) ? value : value ? [value] : []\n      )\n    }\n  }\n}\n\n/**\n * Merge `list` into `existing` (both lists of constructs).\n * Mutates `existing`.\n *\n * @param {unknown[]} existing\n * @param {unknown[]} list\n * @returns {void}\n */\nfunction constructs(existing, list) {\n  let index = -1\n  /** @type {unknown[]} */\n  const before = []\n\n  while (++index < list.length) {\n    // @ts-expect-error Looks like an object.\n    ;(list[index].add === 'after' ? existing : before).push(list[index])\n  }\n\n  splice(existing, 0, 0, before)\n}\n\n/**\n * Combine several HTML extensions into one.\n *\n * @param {HtmlExtension[]} htmlExtensions List of HTML extensions.\n * @returns {HtmlExtension} A single combined extension.\n */\nexport function combineHtmlExtensions(htmlExtensions) {\n  /** @type {HtmlExtension} */\n  const handlers = {}\n  let index = -1\n\n  while (++index < htmlExtensions.length) {\n    htmlExtension(handlers, htmlExtensions[index])\n  }\n\n  return handlers\n}\n\n/**\n * Merge `extension` into `all`.\n *\n * @param {HtmlExtension} all Extension to merge into.\n * @param {HtmlExtension} extension Extension to merge.\n * @returns {void}\n */\nfunction htmlExtension(all, extension) {\n  /** @type {string} */\n  let hook\n\n  for (hook in extension) {\n    const maybe = hasOwnProperty.call(all, hook) ? all[hook] : undefined\n    const left = maybe || (all[hook] = {})\n    const right = extension[hook]\n    /** @type {string} */\n    let type\n\n    if (right) {\n      for (type in right) {\n        left[type] = right[type]\n      }\n    }\n  }\n}\n","// This module is generated by `script/`.\n//\n// CommonMark handles attention (emphasis, strong) markers based on what comes\n// before or after them.\n// One such difference is if those characters are Unicode punctuation.\n// This script is generated from the Unicode data.\nexport const unicodePunctuationRegex =\n  /[!-/:-@[-`{-~\\u00A1\\u00A7\\u00AB\\u00B6\\u00B7\\u00BB\\u00BF\\u037E\\u0387\\u055A-\\u055F\\u0589\\u058A\\u05BE\\u05C0\\u05C3\\u05C6\\u05F3\\u05F4\\u0609\\u060A\\u060C\\u060D\\u061B\\u061E\\u061F\\u066A-\\u066D\\u06D4\\u0700-\\u070D\\u07F7-\\u07F9\\u0830-\\u083E\\u085E\\u0964\\u0965\\u0970\\u09FD\\u0A76\\u0AF0\\u0C77\\u0C84\\u0DF4\\u0E4F\\u0E5A\\u0E5B\\u0F04-\\u0F12\\u0F14\\u0F3A-\\u0F3D\\u0F85\\u0FD0-\\u0FD4\\u0FD9\\u0FDA\\u104A-\\u104F\\u10FB\\u1360-\\u1368\\u1400\\u166E\\u169B\\u169C\\u16EB-\\u16ED\\u1735\\u1736\\u17D4-\\u17D6\\u17D8-\\u17DA\\u1800-\\u180A\\u1944\\u1945\\u1A1E\\u1A1F\\u1AA0-\\u1AA6\\u1AA8-\\u1AAD\\u1B5A-\\u1B60\\u1BFC-\\u1BFF\\u1C3B-\\u1C3F\\u1C7E\\u1C7F\\u1CC0-\\u1CC7\\u1CD3\\u2010-\\u2027\\u2030-\\u2043\\u2045-\\u2051\\u2053-\\u205E\\u207D\\u207E\\u208D\\u208E\\u2308-\\u230B\\u2329\\u232A\\u2768-\\u2775\\u27C5\\u27C6\\u27E6-\\u27EF\\u2983-\\u2998\\u29D8-\\u29DB\\u29FC\\u29FD\\u2CF9-\\u2CFC\\u2CFE\\u2CFF\\u2D70\\u2E00-\\u2E2E\\u2E30-\\u2E4F\\u2E52\\u3001-\\u3003\\u3008-\\u3011\\u3014-\\u301F\\u3030\\u303D\\u30A0\\u30FB\\uA4FE\\uA4FF\\uA60D-\\uA60F\\uA673\\uA67E\\uA6F2-\\uA6F7\\uA874-\\uA877\\uA8CE\\uA8CF\\uA8F8-\\uA8FA\\uA8FC\\uA92E\\uA92F\\uA95F\\uA9C1-\\uA9CD\\uA9DE\\uA9DF\\uAA5C-\\uAA5F\\uAADE\\uAADF\\uAAF0\\uAAF1\\uABEB\\uFD3E\\uFD3F\\uFE10-\\uFE19\\uFE30-\\uFE52\\uFE54-\\uFE61\\uFE63\\uFE68\\uFE6A\\uFE6B\\uFF01-\\uFF03\\uFF05-\\uFF0A\\uFF0C-\\uFF0F\\uFF1A\\uFF1B\\uFF1F\\uFF20\\uFF3B-\\uFF3D\\uFF3F\\uFF5B\\uFF5D\\uFF5F-\\uFF65]/\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {unicodePunctuationRegex} from './lib/unicode-punctuation-regex.js'\n/**\n * Check whether the character code represents an ASCII alpha (`a` through `z`,\n * case insensitive).\n *\n * An **ASCII alpha** is an ASCII upper alpha or ASCII lower alpha.\n *\n * An **ASCII upper alpha** is a character in the inclusive range U+0041 (`A`)\n * to U+005A (`Z`).\n *\n * An **ASCII lower alpha** is a character in the inclusive range U+0061 (`a`)\n * to U+007A (`z`).\n */\n\nexport const asciiAlpha = regexCheck(/[A-Za-z]/)\n/**\n * Check whether the character code represents an ASCII digit (`0` through `9`).\n *\n * An **ASCII digit** is a character in the inclusive range U+0030 (`0`) to\n * U+0039 (`9`).\n */\n\nexport const asciiDigit = regexCheck(/\\d/)\n/**\n * Check whether the character code represents an ASCII hex digit (`a` through\n * `f`, case insensitive, or `0` through `9`).\n *\n * An **ASCII hex digit** is an ASCII digit (see `asciiDigit`), ASCII upper hex\n * digit, or an ASCII lower hex digit.\n *\n * An **ASCII upper hex digit** is a character in the inclusive range U+0041\n * (`A`) to U+0046 (`F`).\n *\n * An **ASCII lower hex digit** is a character in the inclusive range U+0061\n * (`a`) to U+0066 (`f`).\n */\n\nexport const asciiHexDigit = regexCheck(/[\\dA-Fa-f]/)\n/**\n * Check whether the character code represents an ASCII alphanumeric (`a`\n * through `z`, case insensitive, or `0` through `9`).\n *\n * An **ASCII alphanumeric** is an ASCII digit (see `asciiDigit`) or ASCII alpha\n * (see `asciiAlpha`).\n */\n\nexport const asciiAlphanumeric = regexCheck(/[\\dA-Za-z]/)\n/**\n * Check whether the character code represents ASCII punctuation.\n *\n * An **ASCII punctuation** is a character in the inclusive ranges U+0021\n * EXCLAMATION MARK (`!`) to U+002F SLASH (`/`), U+003A COLON (`:`) to U+0040 AT\n * SIGN (`@`), U+005B LEFT SQUARE BRACKET (`[`) to U+0060 GRAVE ACCENT\n * (`` ` ``), or U+007B LEFT CURLY BRACE (`{`) to U+007E TILDE (`~`).\n */\n\nexport const asciiPunctuation = regexCheck(/[!-/:-@[-`{-~]/)\n/**\n * Check whether the character code represents an ASCII atext.\n *\n * atext is an ASCII alphanumeric (see `asciiAlphanumeric`), or a character in\n * the inclusive ranges U+0023 NUMBER SIGN (`#`) to U+0027 APOSTROPHE (`'`),\n * U+002A ASTERISK (`*`), U+002B PLUS SIGN (`+`), U+002D DASH (`-`), U+002F\n * SLASH (`/`), U+003D EQUALS TO (`=`), U+003F QUESTION MARK (`?`), U+005E\n * CARET (`^`) to U+0060 GRAVE ACCENT (`` ` ``), or U+007B LEFT CURLY BRACE\n * (`{`) to U+007E TILDE (`~`).\n *\n * See:\n * **\\[RFC5322]**:\n * [Internet Message Format](https://tools.ietf.org/html/rfc5322).\n * P. Resnick.\n * IETF.\n */\n\nexport const asciiAtext = regexCheck(/[#-'*+\\--9=?A-Z^-~]/)\n/**\n * Check whether a character code is an ASCII control character.\n *\n * An **ASCII control** is a character in the inclusive range U+0000 NULL (NUL)\n * to U+001F (US), or U+007F (DEL).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function asciiControl(code) {\n  return (\n    // Special whitespace codes (which have negative values), C0 and Control\n    // character DEL\n    code !== null && (code < 32 || code === 127)\n  )\n}\n/**\n * Check whether a character code is a markdown line ending (see\n * `markdownLineEnding`) or markdown space (see `markdownSpace`).\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEndingOrSpace(code) {\n  return code !== null && (code < 0 || code === 32)\n}\n/**\n * Check whether a character code is a markdown line ending.\n *\n * A **markdown line ending** is the virtual characters M-0003 CARRIAGE RETURN\n * LINE FEED (CRLF), M-0004 LINE FEED (LF) and M-0005 CARRIAGE RETURN (CR).\n *\n * In micromark, the actual character U+000A LINE FEED (LF) and U+000D CARRIAGE\n * RETURN (CR) are replaced by these virtual characters depending on whether\n * they occurred together.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownLineEnding(code) {\n  return code !== null && code < -2\n}\n/**\n * Check whether a character code is a markdown space.\n *\n * A **markdown space** is the concrete character U+0020 SPACE (SP) and the\n * virtual characters M-0001 VIRTUAL SPACE (VS) and M-0002 HORIZONTAL TAB (HT).\n *\n * In micromark, the actual character U+0009 CHARACTER TABULATION (HT) is\n * replaced by one M-0002 HORIZONTAL TAB (HT) and between 0 and 3 M-0001 VIRTUAL\n * SPACE (VS) characters, depending on the column at which the tab occurred.\n *\n * @param {Code} code\n * @returns {code is number}\n */\n\nexport function markdownSpace(code) {\n  return code === -2 || code === -1 || code === 32\n}\n/**\n * Check whether the character code represents Unicode whitespace.\n *\n * Note that this does handle micromark specific markdown whitespace characters.\n * See `markdownLineEndingOrSpace` to check that.\n *\n * A **Unicode whitespace** is a character in the Unicode `Zs` (Separator,\n * Space) category, or U+0009 CHARACTER TABULATION (HT), U+000A LINE FEED (LF),\n * U+000C (FF), or U+000D CARRIAGE RETURN (CR) (**\\[UNICODE]**).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n\nexport const unicodeWhitespace = regexCheck(/\\s/)\n/**\n * Check whether the character code represents Unicode punctuation.\n *\n * A **Unicode punctuation** is a character in the Unicode `Pc` (Punctuation,\n * Connector), `Pd` (Punctuation, Dash), `Pe` (Punctuation, Close), `Pf`\n * (Punctuation, Final quote), `Pi` (Punctuation, Initial quote), `Po`\n * (Punctuation, Other), or `Ps` (Punctuation, Open) categories, or an ASCII\n * punctuation (see `asciiPunctuation`).\n *\n * See:\n * **\\[UNICODE]**:\n * [The Unicode Standard](https://www.unicode.org/versions/).\n * Unicode Consortium.\n */\n// Size note: removing ASCII from the regex and using `asciiPunctuation` here\n// In fact adds to the bundle size.\n\nexport const unicodePunctuation = regexCheck(unicodePunctuationRegex)\n/**\n * Create a code check from a regex.\n *\n * @param {RegExp} regex\n * @returns {(code: Code) => code is number}\n */\n\nfunction regexCheck(regex) {\n  return check\n  /**\n   * Check whether a code matches the bound regex.\n   *\n   * @param {Code} code Character code\n   * @returns {code is number} Whether the character code matches the bound regex\n   */\n\n  function check(code) {\n    return code !== null && regex.test(String.fromCharCode(code))\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownSpace} from 'micromark-util-character'\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {string} type\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n\nexport function factorySpace(effects, ok, type, max) {\n  const limit = max ? max - 1 : Number.POSITIVE_INFINITY\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownSpace(code)) {\n      effects.enter(type)\n      return prefix(code)\n    }\n\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function prefix(code) {\n    if (markdownSpace(code) && size++ < limit) {\n      effects.consume(code)\n      return prefix\n    }\n\n    effects.exit(type)\n    return ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const content = {\n  tokenize: initializeContent\n}\n/** @type {Initializer} */\n\nfunction initializeContent(effects) {\n  const contentStart = effects.attempt(\n    this.parser.constructs.contentInitial,\n    afterContentStartConstruct,\n    paragraphInitial\n  )\n  /** @type {Token} */\n\n  let previous\n  return contentStart\n  /** @type {State} */\n\n  function afterContentStartConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, contentStart, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function paragraphInitial(code) {\n    effects.enter('paragraph')\n    return lineStart(code)\n  }\n  /** @type {State} */\n\n  function lineStart(code) {\n    const token = effects.enter('chunkText', {\n      contentType: 'text',\n      previous\n    })\n\n    if (previous) {\n      previous.next = token\n    }\n\n    previous = token\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      effects.exit('chunkText')\n      effects.exit('paragraph')\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      effects.exit('chunkText')\n      return lineStart\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Point} Point\n */\n\n/**\n * @typedef {Record<string, unknown>} StackState\n * @typedef {[Construct, StackState]} StackItem\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n/** @type {InitialConstruct} */\n\nexport const document = {\n  tokenize: initializeDocument\n}\n/** @type {Construct} */\n\nconst containerConstruct = {\n  tokenize: tokenizeContainer\n}\n/** @type {Initializer} */\n\nfunction initializeDocument(effects) {\n  const self = this\n  /** @type {Array<StackItem>} */\n\n  const stack = []\n  let continued = 0\n  /** @type {TokenizeContext|undefined} */\n\n  let childFlow\n  /** @type {Token|undefined} */\n\n  let childToken\n  /** @type {number} */\n\n  let lineStartOffset\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // First we iterate through the open blocks, starting with the root\n    // document, and descending through last children down to the last open\n    // block.\n    // Each block imposes a condition that the line must satisfy if the block is\n    // to remain open.\n    // For example, a block quote requires a `>` character.\n    // A paragraph requires a non-blank line.\n    // In this phase we may match all or just some of the open blocks.\n    // But we cannot close unmatched blocks yet, because we may have a lazy\n    // continuation line.\n    if (continued < stack.length) {\n      const item = stack[continued]\n      self.containerState = item[1]\n      return effects.attempt(\n        item[0].continuation,\n        documentContinue,\n        checkNewContainers\n      )(code)\n    } // Done.\n\n    return checkNewContainers(code)\n  }\n  /** @type {State} */\n\n  function documentContinue(code) {\n    continued++ // Note: this field is called `_closeFlow` but it also closes containers.\n    // Perhaps a good idea to rename it but it’s already used in the wild by\n    // extensions.\n\n    if (self.containerState._closeFlow) {\n      self.containerState._closeFlow = undefined\n\n      if (childFlow) {\n        closeFlow()\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when dealing with lazy lines in `writeToChild`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {Point|undefined} */\n\n      let point // Find the flow chunk.\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          point = self.events[indexBeforeFlow][1].end\n          break\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      let index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n      return checkNewContainers(code)\n    }\n\n    return start(code)\n  }\n  /** @type {State} */\n\n  function checkNewContainers(code) {\n    // Next, after consuming the continuation markers for existing blocks, we\n    // look for new block starts (e.g. `>` for a block quote).\n    // If we encounter a new block start, we close any blocks unmatched in\n    // step 1 before creating the new block as a child of the last matched\n    // block.\n    if (continued === stack.length) {\n      // No need to `check` whether there’s a container, of `exitContainers`\n      // would be moot.\n      // We can instead immediately `attempt` to parse one.\n      if (!childFlow) {\n        return documentContinued(code)\n      } // If we have concrete content, such as block HTML or fenced code,\n      // we can’t have containers “pierce” into them, so we can immediately\n      // start.\n\n      if (childFlow.currentConstruct && childFlow.currentConstruct.concrete) {\n        return flowStart(code)\n      } // If we do have flow, it could still be a blank line,\n      // but we’d be interrupting it w/ a new container if there’s a current\n      // construct.\n\n      self.interrupt = Boolean(\n        childFlow.currentConstruct && !childFlow._gfmTableDynamicInterruptHack\n      )\n    } // Check if there is a new container.\n\n    self.containerState = {}\n    return effects.check(\n      containerConstruct,\n      thereIsANewContainer,\n      thereIsNoNewContainer\n    )(code)\n  }\n  /** @type {State} */\n\n  function thereIsANewContainer(code) {\n    if (childFlow) closeFlow()\n    exitContainers(continued)\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function thereIsNoNewContainer(code) {\n    self.parser.lazy[self.now().line] = continued !== stack.length\n    lineStartOffset = self.now().offset\n    return flowStart(code)\n  }\n  /** @type {State} */\n\n  function documentContinued(code) {\n    // Try new containers.\n    self.containerState = {}\n    return effects.attempt(\n      containerConstruct,\n      containerContinue,\n      flowStart\n    )(code)\n  }\n  /** @type {State} */\n\n  function containerContinue(code) {\n    continued++\n    stack.push([self.currentConstruct, self.containerState]) // Try another.\n\n    return documentContinued(code)\n  }\n  /** @type {State} */\n\n  function flowStart(code) {\n    if (code === null) {\n      if (childFlow) closeFlow()\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    childFlow = childFlow || self.parser.flow(self.now())\n    effects.enter('chunkFlow', {\n      contentType: 'flow',\n      previous: childToken,\n      _tokenizer: childFlow\n    })\n    return flowContinue(code)\n  }\n  /** @type {State} */\n\n  function flowContinue(code) {\n    if (code === null) {\n      writeToChild(effects.exit('chunkFlow'), true)\n      exitContainers(0)\n      effects.consume(code)\n      return\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.consume(code)\n      writeToChild(effects.exit('chunkFlow')) // Get ready for the next line.\n\n      continued = 0\n      self.interrupt = undefined\n      return start\n    }\n\n    effects.consume(code)\n    return flowContinue\n  }\n  /**\n   * @param {Token} token\n   * @param {boolean} [eof]\n   * @returns {void}\n   */\n\n  function writeToChild(token, eof) {\n    const stream = self.sliceStream(token)\n    if (eof) stream.push(null)\n    token.previous = childToken\n    if (childToken) childToken.next = token\n    childToken = token\n    childFlow.defineSkip(token.start)\n    childFlow.write(stream) // Alright, so we just added a lazy line:\n    //\n    // ```markdown\n    // > a\n    // b.\n    //\n    // Or:\n    //\n    // > ~~~c\n    // d\n    //\n    // Or:\n    //\n    // > | e |\n    // f\n    // ```\n    //\n    // The construct in the second example (fenced code) does not accept lazy\n    // lines, so it marked itself as done at the end of its first line, and\n    // then the content construct parses `d`.\n    // Most constructs in markdown match on the first line: if the first line\n    // forms a construct, a non-lazy line can’t “unmake” it.\n    //\n    // The construct in the third example is potentially a GFM table, and\n    // those are *weird*.\n    // It *could* be a table, from the first line, if the following line\n    // matches a condition.\n    // In this case, that second line is lazy, which “unmakes” the first line\n    // and turns the whole into one content block.\n    //\n    // We’ve now parsed the non-lazy and the lazy line, and can figure out\n    // whether the lazy line started a new flow block.\n    // If it did, we exit the current containers between the two flow blocks.\n\n    if (self.parser.lazy[token.start.line]) {\n      let index = childFlow.events.length\n\n      while (index--) {\n        if (\n          // The token starts before the line ending…\n          childFlow.events[index][1].start.offset < lineStartOffset && // …and either is not ended yet…\n          (!childFlow.events[index][1].end || // …or ends after it.\n            childFlow.events[index][1].end.offset > lineStartOffset)\n        ) {\n          // Exit: there’s still something open, which means it’s a lazy line\n          // part of something.\n          return\n        }\n      } // Note: this algorithm for moving events around is similar to the\n      // algorithm when closing flow in `documentContinue`.\n\n      const indexBeforeExits = self.events.length\n      let indexBeforeFlow = indexBeforeExits\n      /** @type {boolean|undefined} */\n\n      let seen\n      /** @type {Point|undefined} */\n\n      let point // Find the previous chunk (the one before the lazy line).\n\n      while (indexBeforeFlow--) {\n        if (\n          self.events[indexBeforeFlow][0] === 'exit' &&\n          self.events[indexBeforeFlow][1].type === 'chunkFlow'\n        ) {\n          if (seen) {\n            point = self.events[indexBeforeFlow][1].end\n            break\n          }\n\n          seen = true\n        }\n      }\n\n      exitContainers(continued) // Fix positions.\n\n      index = indexBeforeExits\n\n      while (index < self.events.length) {\n        self.events[index][1].end = Object.assign({}, point)\n        index++\n      } // Inject the exits earlier (they’re still also at the end).\n\n      splice(\n        self.events,\n        indexBeforeFlow + 1,\n        0,\n        self.events.slice(indexBeforeExits)\n      ) // Discard the duplicate exits.\n\n      self.events.length = index\n    }\n  }\n  /**\n   * @param {number} size\n   * @returns {void}\n   */\n\n  function exitContainers(size) {\n    let index = stack.length // Exit open containers.\n\n    while (index-- > size) {\n      const entry = stack[index]\n      self.containerState = entry[1]\n      entry[0].exit.call(self, effects)\n    }\n\n    stack.length = size\n  }\n\n  function closeFlow() {\n    childFlow.write([null])\n    childToken = undefined\n    childFlow = undefined\n    self.containerState._closeFlow = undefined\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContainer(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(this.parser.constructs.document, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blankLine = {\n  tokenize: tokenizeBlankLine,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlankLine(effects, ok, nok) {\n  return factorySpace(effects, afterWhitespace, 'linePrefix')\n  /** @type {State} */\n\n  function afterWhitespace(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {splice} from 'micromark-util-chunked'\n\n/**\n * Tokenize subcontent.\n *\n * @param {Event[]} events\n * @returns {boolean}\n */\nexport function subtokenize(events) {\n  /** @type {Record<string, number>} */\n  const jumps = {}\n  let index = -1\n  /** @type {Event} */\n\n  let event\n  /** @type {number|undefined} */\n\n  let lineIndex\n  /** @type {number} */\n\n  let otherIndex\n  /** @type {Event} */\n\n  let otherEvent\n  /** @type {Event[]} */\n\n  let parameters\n  /** @type {Event[]} */\n\n  let subevents\n  /** @type {boolean|undefined} */\n\n  let more\n\n  while (++index < events.length) {\n    while (index in jumps) {\n      index = jumps[index]\n    }\n\n    event = events[index] // Add a hook for the GFM tasklist extension, which needs to know if text\n    // is in the first content of a list item.\n\n    if (\n      index &&\n      event[1].type === 'chunkFlow' &&\n      events[index - 1][1].type === 'listItemPrefix'\n    ) {\n      subevents = event[1]._tokenizer.events\n      otherIndex = 0\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'lineEndingBlank'\n      ) {\n        otherIndex += 2\n      }\n\n      if (\n        otherIndex < subevents.length &&\n        subevents[otherIndex][1].type === 'content'\n      ) {\n        while (++otherIndex < subevents.length) {\n          if (subevents[otherIndex][1].type === 'content') {\n            break\n          }\n\n          if (subevents[otherIndex][1].type === 'chunkText') {\n            subevents[otherIndex][1]._isInFirstContentOfListItem = true\n            otherIndex++\n          }\n        }\n      }\n    } // Enter.\n\n    if (event[0] === 'enter') {\n      if (event[1].contentType) {\n        Object.assign(jumps, subcontent(events, index))\n        index = jumps[index]\n        more = true\n      }\n    } // Exit.\n    else if (event[1]._container) {\n      otherIndex = index\n      lineIndex = undefined\n\n      while (otherIndex--) {\n        otherEvent = events[otherIndex]\n\n        if (\n          otherEvent[1].type === 'lineEnding' ||\n          otherEvent[1].type === 'lineEndingBlank'\n        ) {\n          if (otherEvent[0] === 'enter') {\n            if (lineIndex) {\n              events[lineIndex][1].type = 'lineEndingBlank'\n            }\n\n            otherEvent[1].type = 'lineEnding'\n            lineIndex = otherIndex\n          }\n        } else {\n          break\n        }\n      }\n\n      if (lineIndex) {\n        // Fix position.\n        event[1].end = Object.assign({}, events[lineIndex][1].start) // Switch container exit w/ line endings.\n\n        parameters = events.slice(lineIndex, index)\n        parameters.unshift(event)\n        splice(events, lineIndex, index - lineIndex + 1, parameters)\n      }\n    }\n  }\n\n  return !more\n}\n/**\n * Tokenize embedded tokens.\n *\n * @param {Event[]} events\n * @param {number} eventIndex\n * @returns {Record<string, number>}\n */\n\nfunction subcontent(events, eventIndex) {\n  const token = events[eventIndex][1]\n  const context = events[eventIndex][2]\n  let startPosition = eventIndex - 1\n  /** @type {number[]} */\n\n  const startPositions = []\n  const tokenizer =\n    token._tokenizer || context.parser[token.contentType](token.start)\n  const childEvents = tokenizer.events\n  /** @type {[number, number][]} */\n\n  const jumps = []\n  /** @type {Record<string, number>} */\n\n  const gaps = {}\n  /** @type {Chunk[]} */\n\n  let stream\n  /** @type {Token|undefined} */\n\n  let previous\n  let index = -1\n  /** @type {Token|undefined} */\n\n  let current = token\n  let adjust = 0\n  let start = 0\n  const breaks = [start] // Loop forward through the linked tokens to pass them in order to the\n  // subtokenizer.\n\n  while (current) {\n    // Find the position of the event for this token.\n    while (events[++startPosition][1] !== current) {\n      // Empty.\n    }\n\n    startPositions.push(startPosition)\n\n    if (!current._tokenizer) {\n      stream = context.sliceStream(current)\n\n      if (!current.next) {\n        stream.push(null)\n      }\n\n      if (previous) {\n        tokenizer.defineSkip(current.start)\n      }\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = true\n      }\n\n      tokenizer.write(stream)\n\n      if (current._isInFirstContentOfListItem) {\n        tokenizer._gfmTasklistFirstContentOfListItem = undefined\n      }\n    } // Unravel the next token.\n\n    previous = current\n    current = current.next\n  } // Now, loop back through all events (and linked tokens), to figure out which\n  // parts belong where.\n\n  current = token\n\n  while (++index < childEvents.length) {\n    if (\n      // Find a void token that includes a break.\n      childEvents[index][0] === 'exit' &&\n      childEvents[index - 1][0] === 'enter' &&\n      childEvents[index][1].type === childEvents[index - 1][1].type &&\n      childEvents[index][1].start.line !== childEvents[index][1].end.line\n    ) {\n      start = index + 1\n      breaks.push(start) // Help GC.\n\n      current._tokenizer = undefined\n      current.previous = undefined\n      current = current.next\n    }\n  } // Help GC.\n\n  tokenizer.events = [] // If there’s one more token (which is the cases for lines that end in an\n  // EOF), that’s perfect: the last point we found starts it.\n  // If there isn’t then make sure any remaining content is added to it.\n\n  if (current) {\n    // Help GC.\n    current._tokenizer = undefined\n    current.previous = undefined\n  } else {\n    breaks.pop()\n  } // Now splice the events from the subtokenizer into the current events,\n  // moving back to front so that splice indices aren’t affected.\n\n  index = breaks.length\n\n  while (index--) {\n    const slice = childEvents.slice(breaks[index], breaks[index + 1])\n    const start = startPositions.pop()\n    jumps.unshift([start, start + slice.length - 1])\n    splice(events, start, 2, slice)\n  }\n\n  index = -1\n\n  while (++index < jumps.length) {\n    gaps[adjust + jumps[index][0]] = adjust + jumps[index][1]\n    adjust += jumps[index][1] - jumps[index][0] - 1\n  }\n\n  return gaps\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {subtokenize} from 'micromark-util-subtokenize'\n\n/**\n * No name because it must not be turned off.\n * @type {Construct}\n */\nexport const content = {\n  tokenize: tokenizeContent,\n  resolve: resolveContent\n}\n/** @type {Construct} */\n\nconst continuationConstruct = {\n  tokenize: tokenizeContinuation,\n  partial: true\n}\n/**\n * Content is transparent: it’s parsed right now. That way, definitions are also\n * parsed right now: before text in paragraphs (specifically, media) are parsed.\n *\n * @type {Resolver}\n */\n\nfunction resolveContent(events) {\n  subtokenize(events)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContent(effects, ok) {\n  /** @type {Token} */\n  let previous\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('content')\n    previous = effects.enter('chunkContent', {\n      contentType: 'content'\n    })\n    return data(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null) {\n      return contentEnd(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.check(\n        continuationConstruct,\n        contentContinue,\n        contentEnd\n      )(code)\n    } // Data.\n\n    effects.consume(code)\n    return data\n  }\n  /** @type {State} */\n\n  function contentEnd(code) {\n    effects.exit('chunkContent')\n    effects.exit('content')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    effects.consume(code)\n    effects.exit('chunkContent')\n    previous.next = effects.enter('chunkContent', {\n      contentType: 'content',\n      previous\n    })\n    previous = previous.next\n    return data\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeContinuation(effects, ok, nok) {\n  const self = this\n  return startLookahead\n  /** @type {State} */\n\n  function startLookahead(code) {\n    effects.exit('chunkContent')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, prefixed, 'linePrefix')\n  }\n  /** @type {State} */\n\n  function prefixed(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    const tail = self.events[self.events.length - 1]\n\n    if (\n      !self.parser.constructs.disable.null.includes('codeIndented') &&\n      tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n    ) {\n      return ok(code)\n    }\n\n    return effects.interrupt(self.parser.constructs.flow, nok, ok)(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {blankLine, content} from 'micromark-core-commonmark'\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {InitialConstruct} */\nexport const flow = {\n  tokenize: initializeFlow\n}\n/** @type {Initializer} */\n\nfunction initializeFlow(effects) {\n  const self = this\n  const initial = effects.attempt(\n    // Try to parse a blank line.\n    blankLine,\n    atBlankEnding, // Try to parse initial flow (essentially, only code).\n    effects.attempt(\n      this.parser.constructs.flowInitial,\n      afterConstruct,\n      factorySpace(\n        effects,\n        effects.attempt(\n          this.parser.constructs.flow,\n          afterConstruct,\n          effects.attempt(content, afterConstruct)\n        ),\n        'linePrefix'\n      )\n    )\n  )\n  return initial\n  /** @type {State} */\n\n  function atBlankEnding(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    self.currentConstruct = undefined\n    return initial\n  }\n  /** @type {State} */\n\n  function afterConstruct(code) {\n    if (code === null) {\n      effects.consume(code)\n      return\n    }\n\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    self.currentConstruct = undefined\n    return initial\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Initializer} Initializer\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nexport const resolver = {\n  resolveAll: createResolver()\n}\nexport const string = initializeFactory('string')\nexport const text = initializeFactory('text')\n/**\n * @param {'string'|'text'} field\n * @returns {InitialConstruct}\n */\n\nfunction initializeFactory(field) {\n  return {\n    tokenize: initializeText,\n    resolveAll: createResolver(\n      field === 'text' ? resolveAllLineSuffixes : undefined\n    )\n  }\n  /** @type {Initializer} */\n\n  function initializeText(effects) {\n    const self = this\n    const constructs = this.parser.constructs[field]\n    const text = effects.attempt(constructs, start, notText)\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      return atBreak(code) ? text(code) : notText(code)\n    }\n    /** @type {State} */\n\n    function notText(code) {\n      if (code === null) {\n        effects.consume(code)\n        return\n      }\n\n      effects.enter('data')\n      effects.consume(code)\n      return data\n    }\n    /** @type {State} */\n\n    function data(code) {\n      if (atBreak(code)) {\n        effects.exit('data')\n        return text(code)\n      } // Data.\n\n      effects.consume(code)\n      return data\n    }\n    /**\n     * @param {Code} code\n     * @returns {boolean}\n     */\n\n    function atBreak(code) {\n      if (code === null) {\n        return true\n      }\n\n      const list = constructs[code]\n      let index = -1\n\n      if (list) {\n        while (++index < list.length) {\n          const item = list[index]\n\n          if (!item.previous || item.previous.call(self, self.previous)) {\n            return true\n          }\n        }\n      }\n\n      return false\n    }\n  }\n}\n/**\n * @param {Resolver} [extraResolver]\n * @returns {Resolver}\n */\n\nfunction createResolver(extraResolver) {\n  return resolveAllText\n  /** @type {Resolver} */\n\n  function resolveAllText(events, context) {\n    let index = -1\n    /** @type {number|undefined} */\n\n    let enter // A rather boring computation (to merge adjacent `data` events) which\n    // improves mm performance by 29%.\n\n    while (++index <= events.length) {\n      if (enter === undefined) {\n        if (events[index] && events[index][1].type === 'data') {\n          enter = index\n          index++\n        }\n      } else if (!events[index] || events[index][1].type !== 'data') {\n        // Don’t do anything if there is one data token.\n        if (index !== enter + 2) {\n          events[enter][1].end = events[index - 1][1].end\n          events.splice(enter + 2, index - enter - 2)\n          index = enter + 2\n        }\n\n        enter = undefined\n      }\n    }\n\n    return extraResolver ? extraResolver(events, context) : events\n  }\n}\n/**\n * A rather ugly set of instructions which again looks at chunks in the input\n * stream.\n * The reason to do this here is that it is *much* faster to parse in reverse.\n * And that we can’t hook into `null` to split the line suffix before an EOF.\n * To do: figure out if we can make this into a clean utility, or even in core.\n * As it will be useful for GFMs literal autolink extension (and maybe even\n * tables?)\n *\n * @type {Resolver}\n */\n\nfunction resolveAllLineSuffixes(events, context) {\n  let eventIndex = 0 // Skip first.\n\n  while (++eventIndex <= events.length) {\n    if (\n      (eventIndex === events.length ||\n        events[eventIndex][1].type === 'lineEnding') &&\n      events[eventIndex - 1][1].type === 'data'\n    ) {\n      const data = events[eventIndex - 1][1]\n      const chunks = context.sliceStream(data)\n      let index = chunks.length\n      let bufferIndex = -1\n      let size = 0\n      /** @type {boolean|undefined} */\n\n      let tabs\n\n      while (index--) {\n        const chunk = chunks[index]\n\n        if (typeof chunk === 'string') {\n          bufferIndex = chunk.length\n\n          while (chunk.charCodeAt(bufferIndex - 1) === 32) {\n            size++\n            bufferIndex--\n          }\n\n          if (bufferIndex) break\n          bufferIndex = -1\n        } // Number\n        else if (chunk === -2) {\n          tabs = true\n          size++\n        } else if (chunk === -1) {\n          // Empty\n        } else {\n          // Replacement character, exit.\n          index++\n          break\n        }\n      }\n\n      if (size) {\n        const token = {\n          type:\n            eventIndex === events.length || tabs || size < 2\n              ? 'lineSuffix'\n              : 'hardBreakTrailing',\n          start: {\n            line: data.end.line,\n            column: data.end.column - size,\n            offset: data.end.offset - size,\n            _index: data.start._index + index,\n            _bufferIndex: index\n              ? bufferIndex\n              : data.start._bufferIndex + bufferIndex\n          },\n          end: Object.assign({}, data.end)\n        }\n        data.end = Object.assign({}, token.start)\n\n        if (data.start.offset === data.end.offset) {\n          Object.assign(data, token)\n        } else {\n          events.splice(\n            eventIndex,\n            0,\n            ['enter', token, context],\n            ['exit', token, context]\n          )\n          eventIndex += 2\n        }\n      }\n\n      eventIndex++\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Resolver} Resolver\n */\n\n/**\n * Call all `resolveAll`s.\n *\n * @param {{resolveAll?: Resolver}[]} constructs\n * @param {Event[]} events\n * @param {TokenizeContext} context\n * @returns {Event[]}\n */\nexport function resolveAll(constructs, events, context) {\n  /** @type {Resolver[]} */\n  const called = []\n  let index = -1\n\n  while (++index < constructs.length) {\n    const resolve = constructs[index].resolveAll\n\n    if (resolve && !called.includes(resolve)) {\n      events = resolve(events, context)\n      called.push(resolve)\n    }\n  }\n\n  return events\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Point} Point\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').ConstructRecord} ConstructRecord\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n */\n\n/**\n * @typedef Info\n * @property {() => void} restore\n * @property {number} from\n *\n * @callback ReturnHandle\n *   Handle a successful run.\n * @param {Construct} construct\n * @param {Info} info\n * @returns {void}\n */\nimport {markdownLineEnding} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/**\n * Create a tokenizer.\n * Tokenizers deal with one type of data (e.g., containers, flow, text).\n * The parser is the object dealing with it all.\n * `initialize` works like other constructs, except that only its `tokenize`\n * function is used, in which case it doesn’t receive an `ok` or `nok`.\n * `from` can be given to set the point before the first character, although\n * when further lines are indented, they must be set with `defineSkip`.\n *\n * @param {ParseContext} parser\n * @param {InitialConstruct} initialize\n * @param {Omit<Point, '_index'|'_bufferIndex'>} [from]\n * @returns {TokenizeContext}\n */\nexport function createTokenizer(parser, initialize, from) {\n  /** @type {Point} */\n  let point = Object.assign(\n    from\n      ? Object.assign({}, from)\n      : {\n          line: 1,\n          column: 1,\n          offset: 0\n        },\n    {\n      _index: 0,\n      _bufferIndex: -1\n    }\n  )\n  /** @type {Record<string, number>} */\n\n  const columnStart = {}\n  /** @type {Array<Construct>} */\n\n  const resolveAllConstructs = []\n  /** @type {Array<Chunk>} */\n\n  let chunks = []\n  /** @type {Array<Token>} */\n\n  let stack = []\n  /** @type {boolean|undefined} */\n\n  let consumed = true\n  /**\n   * Tools used for tokenizing.\n   *\n   * @type {Effects}\n   */\n\n  const effects = {\n    consume,\n    enter,\n    exit,\n    attempt: constructFactory(onsuccessfulconstruct),\n    check: constructFactory(onsuccessfulcheck),\n    interrupt: constructFactory(onsuccessfulcheck, {\n      interrupt: true\n    })\n  }\n  /**\n   * State and tools for resolving and serializing.\n   *\n   * @type {TokenizeContext}\n   */\n\n  const context = {\n    previous: null,\n    code: null,\n    containerState: {},\n    events: [],\n    parser,\n    sliceStream,\n    sliceSerialize,\n    now,\n    defineSkip,\n    write\n  }\n  /**\n   * The state function.\n   *\n   * @type {State|void}\n   */\n\n  let state = initialize.tokenize.call(context, effects)\n  /**\n   * Track which character we expect to be consumed, to catch bugs.\n   *\n   * @type {Code}\n   */\n\n  let expectedCode\n\n  if (initialize.resolveAll) {\n    resolveAllConstructs.push(initialize)\n  }\n\n  return context\n  /** @type {TokenizeContext['write']} */\n\n  function write(slice) {\n    chunks = push(chunks, slice)\n    main() // Exit if we’re not done, resolve might change stuff.\n\n    if (chunks[chunks.length - 1] !== null) {\n      return []\n    }\n\n    addResult(initialize, 0) // Otherwise, resolve, and exit.\n\n    context.events = resolveAll(resolveAllConstructs, context.events, context)\n    return context.events\n  } //\n  // Tools.\n  //\n\n  /** @type {TokenizeContext['sliceSerialize']} */\n\n  function sliceSerialize(token, expandTabs) {\n    return serializeChunks(sliceStream(token), expandTabs)\n  }\n  /** @type {TokenizeContext['sliceStream']} */\n\n  function sliceStream(token) {\n    return sliceChunks(chunks, token)\n  }\n  /** @type {TokenizeContext['now']} */\n\n  function now() {\n    return Object.assign({}, point)\n  }\n  /** @type {TokenizeContext['defineSkip']} */\n\n  function defineSkip(value) {\n    columnStart[value.line] = value.column\n    accountForPotentialSkip()\n  } //\n  // State management.\n  //\n\n  /**\n   * Main loop (note that `_index` and `_bufferIndex` in `point` are modified by\n   * `consume`).\n   * Here is where we walk through the chunks, which either include strings of\n   * several characters, or numerical character codes.\n   * The reason to do this in a loop instead of a call is so the stack can\n   * drain.\n   *\n   * @returns {void}\n   */\n\n  function main() {\n    /** @type {number} */\n    let chunkIndex\n\n    while (point._index < chunks.length) {\n      const chunk = chunks[point._index] // If we’re in a buffer chunk, loop through it.\n\n      if (typeof chunk === 'string') {\n        chunkIndex = point._index\n\n        if (point._bufferIndex < 0) {\n          point._bufferIndex = 0\n        }\n\n        while (\n          point._index === chunkIndex &&\n          point._bufferIndex < chunk.length\n        ) {\n          go(chunk.charCodeAt(point._bufferIndex))\n        }\n      } else {\n        go(chunk)\n      }\n    }\n  }\n  /**\n   * Deal with one code.\n   *\n   * @param {Code} code\n   * @returns {void}\n   */\n\n  function go(code) {\n    consumed = undefined\n    expectedCode = code\n    state = state(code)\n  }\n  /** @type {Effects['consume']} */\n\n  function consume(code) {\n    if (markdownLineEnding(code)) {\n      point.line++\n      point.column = 1\n      point.offset += code === -3 ? 2 : 1\n      accountForPotentialSkip()\n    } else if (code !== -1) {\n      point.column++\n      point.offset++\n    } // Not in a string chunk.\n\n    if (point._bufferIndex < 0) {\n      point._index++\n    } else {\n      point._bufferIndex++ // At end of string chunk.\n      // @ts-expect-error Points w/ non-negative `_bufferIndex` reference\n      // strings.\n\n      if (point._bufferIndex === chunks[point._index].length) {\n        point._bufferIndex = -1\n        point._index++\n      }\n    } // Expose the previous character.\n\n    context.previous = code // Mark as consumed.\n\n    consumed = true\n  }\n  /** @type {Effects['enter']} */\n\n  function enter(type, fields) {\n    /** @type {Token} */\n    // @ts-expect-error Patch instead of assign required fields to help GC.\n    const token = fields || {}\n    token.type = type\n    token.start = now()\n    context.events.push(['enter', token, context])\n    stack.push(token)\n    return token\n  }\n  /** @type {Effects['exit']} */\n\n  function exit(type) {\n    const token = stack.pop()\n    token.end = now()\n    context.events.push(['exit', token, context])\n    return token\n  }\n  /**\n   * Use results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulconstruct(construct, info) {\n    addResult(construct, info.from)\n  }\n  /**\n   * Discard results.\n   *\n   * @type {ReturnHandle}\n   */\n\n  function onsuccessfulcheck(_, info) {\n    info.restore()\n  }\n  /**\n   * Factory to attempt/check/interrupt.\n   *\n   * @param {ReturnHandle} onreturn\n   * @param {Record<string, unknown>} [fields]\n   */\n\n  function constructFactory(onreturn, fields) {\n    return hook\n    /**\n     * Handle either an object mapping codes to constructs, a list of\n     * constructs, or a single construct.\n     *\n     * @param {Construct|Array<Construct>|ConstructRecord} constructs\n     * @param {State} returnState\n     * @param {State} [bogusState]\n     * @returns {State}\n     */\n\n    function hook(constructs, returnState, bogusState) {\n      /** @type {Array<Construct>} */\n      let listOfConstructs\n      /** @type {number} */\n\n      let constructIndex\n      /** @type {Construct} */\n\n      let currentConstruct\n      /** @type {Info} */\n\n      let info\n      return Array.isArray(constructs)\n        ? /* c8 ignore next 1 */\n          handleListOfConstructs(constructs)\n        : 'tokenize' in constructs // @ts-expect-error Looks like a construct.\n        ? handleListOfConstructs([constructs])\n        : handleMapOfConstructs(constructs)\n      /**\n       * Handle a list of construct.\n       *\n       * @param {ConstructRecord} map\n       * @returns {State}\n       */\n\n      function handleMapOfConstructs(map) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          const def = code !== null && map[code]\n          const all = code !== null && map.null\n          const list = [\n            // To do: add more extension tests.\n\n            /* c8 ignore next 2 */\n            ...(Array.isArray(def) ? def : def ? [def] : []),\n            ...(Array.isArray(all) ? all : all ? [all] : [])\n          ]\n          return handleListOfConstructs(list)(code)\n        }\n      }\n      /**\n       * Handle a list of construct.\n       *\n       * @param {Array<Construct>} list\n       * @returns {State}\n       */\n\n      function handleListOfConstructs(list) {\n        listOfConstructs = list\n        constructIndex = 0\n\n        if (list.length === 0) {\n          return bogusState\n        }\n\n        return handleConstruct(list[constructIndex])\n      }\n      /**\n       * Handle a single construct.\n       *\n       * @param {Construct} construct\n       * @returns {State}\n       */\n\n      function handleConstruct(construct) {\n        return start\n        /** @type {State} */\n\n        function start(code) {\n          // To do: not needed to store if there is no bogus state, probably?\n          // Currently doesn’t work because `inspect` in document does a check\n          // w/o a bogus, which doesn’t make sense. But it does seem to help perf\n          // by not storing.\n          info = store()\n          currentConstruct = construct\n\n          if (!construct.partial) {\n            context.currentConstruct = construct\n          }\n\n          if (\n            construct.name &&\n            context.parser.constructs.disable.null.includes(construct.name)\n          ) {\n            return nok(code)\n          }\n\n          return construct.tokenize.call(\n            // If we do have fields, create an object w/ `context` as its\n            // prototype.\n            // This allows a “live binding”, which is needed for `interrupt`.\n            fields ? Object.assign(Object.create(context), fields) : context,\n            effects,\n            ok,\n            nok\n          )(code)\n        }\n      }\n      /** @type {State} */\n\n      function ok(code) {\n        consumed = true\n        onreturn(currentConstruct, info)\n        return returnState\n      }\n      /** @type {State} */\n\n      function nok(code) {\n        consumed = true\n        info.restore()\n\n        if (++constructIndex < listOfConstructs.length) {\n          return handleConstruct(listOfConstructs[constructIndex])\n        }\n\n        return bogusState\n      }\n    }\n  }\n  /**\n   * @param {Construct} construct\n   * @param {number} from\n   * @returns {void}\n   */\n\n  function addResult(construct, from) {\n    if (construct.resolveAll && !resolveAllConstructs.includes(construct)) {\n      resolveAllConstructs.push(construct)\n    }\n\n    if (construct.resolve) {\n      splice(\n        context.events,\n        from,\n        context.events.length - from,\n        construct.resolve(context.events.slice(from), context)\n      )\n    }\n\n    if (construct.resolveTo) {\n      context.events = construct.resolveTo(context.events, context)\n    }\n  }\n  /**\n   * Store state.\n   *\n   * @returns {Info}\n   */\n\n  function store() {\n    const startPoint = now()\n    const startPrevious = context.previous\n    const startCurrentConstruct = context.currentConstruct\n    const startEventsIndex = context.events.length\n    const startStack = Array.from(stack)\n    return {\n      restore,\n      from: startEventsIndex\n    }\n    /**\n     * Restore state.\n     *\n     * @returns {void}\n     */\n\n    function restore() {\n      point = startPoint\n      context.previous = startPrevious\n      context.currentConstruct = startCurrentConstruct\n      context.events.length = startEventsIndex\n      stack = startStack\n      accountForPotentialSkip()\n    }\n  }\n  /**\n   * Move the current point a bit forward in the line when it’s on a column\n   * skip.\n   *\n   * @returns {void}\n   */\n\n  function accountForPotentialSkip() {\n    if (point.line in columnStart && point.column < 2) {\n      point.column = columnStart[point.line]\n      point.offset += columnStart[point.line] - 1\n    }\n  }\n}\n/**\n * Get the chunks from a slice of chunks in the range of a token.\n *\n * @param {Array<Chunk>} chunks\n * @param {Pick<Token, 'start'|'end'>} token\n * @returns {Array<Chunk>}\n */\n\nfunction sliceChunks(chunks, token) {\n  const startIndex = token.start._index\n  const startBufferIndex = token.start._bufferIndex\n  const endIndex = token.end._index\n  const endBufferIndex = token.end._bufferIndex\n  /** @type {Array<Chunk>} */\n\n  let view\n\n  if (startIndex === endIndex) {\n    // @ts-expect-error `_bufferIndex` is used on string chunks.\n    view = [chunks[startIndex].slice(startBufferIndex, endBufferIndex)]\n  } else {\n    view = chunks.slice(startIndex, endIndex)\n\n    if (startBufferIndex > -1) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view[0] = view[0].slice(startBufferIndex)\n    }\n\n    if (endBufferIndex > 0) {\n      // @ts-expect-error `_bufferIndex` is used on string chunks.\n      view.push(chunks[endIndex].slice(0, endBufferIndex))\n    }\n  }\n\n  return view\n}\n/**\n * Get the string value of a slice of chunks.\n *\n * @param {Array<Chunk>} chunks\n * @param {boolean} [expandTabs=false]\n * @returns {string}\n */\n\nfunction serializeChunks(chunks, expandTabs) {\n  let index = -1\n  /** @type {Array<string>} */\n\n  const result = []\n  /** @type {boolean|undefined} */\n\n  let atTab\n\n  while (++index < chunks.length) {\n    const chunk = chunks[index]\n    /** @type {string} */\n\n    let value\n\n    if (typeof chunk === 'string') {\n      value = chunk\n    } else\n      switch (chunk) {\n        case -5: {\n          value = '\\r'\n          break\n        }\n\n        case -4: {\n          value = '\\n'\n          break\n        }\n\n        case -3: {\n          value = '\\r' + '\\n'\n          break\n        }\n\n        case -2: {\n          value = expandTabs ? ' ' : '\\t'\n          break\n        }\n\n        case -1: {\n          if (!expandTabs && atTab) continue\n          value = ' '\n          break\n        }\n\n        default: {\n          // Currently only replacement character.\n          value = String.fromCharCode(chunk)\n        }\n      }\n\n    atTab = chunk === -2\n    result.push(value)\n  }\n\n  return result.join('')\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const thematicBreak = {\n  name: 'thematicBreak',\n  tokenize: tokenizeThematicBreak\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeThematicBreak(effects, ok, nok) {\n  let size = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('thematicBreak')\n    marker = code\n    return atBreak(code)\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (code === marker) {\n      effects.enter('thematicBreakSequence')\n      return sequence(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, atBreak, 'whitespace')(code)\n    }\n\n    if (size < 3 || (code !== null && !markdownLineEnding(code))) {\n      return nok(code)\n    }\n\n    effects.exit('thematicBreak')\n    return ok(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      size++\n      return sequence\n    }\n\n    effects.exit('thematicBreakSequence')\n    return atBreak(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @typedef {Record<string, unknown> & {marker: Code, type: string, size: number}} ListContainerState\n * @typedef {TokenizeContext & {containerState: ListContainerState}} TokenizeContextWithState\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {asciiDigit, markdownSpace} from 'micromark-util-character'\nimport {blankLine} from './blank-line.js'\nimport {thematicBreak} from './thematic-break.js'\n/** @type {Construct} */\n\nexport const list = {\n  name: 'list',\n  tokenize: tokenizeListStart,\n  continuation: {\n    tokenize: tokenizeListContinuation\n  },\n  exit: tokenizeListEnd\n}\n/** @type {Construct} */\n\nconst listItemPrefixWhitespaceConstruct = {\n  tokenize: tokenizeListItemPrefixWhitespace,\n  partial: true\n}\n/** @type {Construct} */\n\nconst indentConstruct = {\n  tokenize: tokenizeIndent,\n  partial: true\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListStart(effects, ok, nok) {\n  const self = this\n  const tail = self.events[self.events.length - 1]\n  let initialSize =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    const kind =\n      self.containerState.type ||\n      (code === 42 || code === 43 || code === 45\n        ? 'listUnordered'\n        : 'listOrdered')\n\n    if (\n      kind === 'listUnordered'\n        ? !self.containerState.marker || code === self.containerState.marker\n        : asciiDigit(code)\n    ) {\n      if (!self.containerState.type) {\n        self.containerState.type = kind\n        effects.enter(kind, {\n          _container: true\n        })\n      }\n\n      if (kind === 'listUnordered') {\n        effects.enter('listItemPrefix')\n        return code === 42 || code === 45\n          ? effects.check(thematicBreak, nok, atMarker)(code)\n          : atMarker(code)\n      }\n\n      if (!self.interrupt || code === 49) {\n        effects.enter('listItemPrefix')\n        effects.enter('listItemValue')\n        return inside(code)\n      }\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function inside(code) {\n    if (asciiDigit(code) && ++size < 10) {\n      effects.consume(code)\n      return inside\n    }\n\n    if (\n      (!self.interrupt || size < 2) &&\n      (self.containerState.marker\n        ? code === self.containerState.marker\n        : code === 41 || code === 46)\n    ) {\n      effects.exit('listItemValue')\n      return atMarker(code)\n    }\n\n    return nok(code)\n  }\n  /**\n   * @type {State}\n   **/\n\n  function atMarker(code) {\n    effects.enter('listItemMarker')\n    effects.consume(code)\n    effects.exit('listItemMarker')\n    self.containerState.marker = self.containerState.marker || code\n    return effects.check(\n      blankLine, // Can’t be empty when interrupting.\n      self.interrupt ? nok : onBlank,\n      effects.attempt(\n        listItemPrefixWhitespaceConstruct,\n        endOfPrefix,\n        otherPrefix\n      )\n    )\n  }\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.initialBlankLine = true\n    initialSize++\n    return endOfPrefix(code)\n  }\n  /** @type {State} */\n\n  function otherPrefix(code) {\n    if (markdownSpace(code)) {\n      effects.enter('listItemPrefixWhitespace')\n      effects.consume(code)\n      effects.exit('listItemPrefixWhitespace')\n      return endOfPrefix\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function endOfPrefix(code) {\n    self.containerState.size =\n      initialSize +\n      self.sliceSerialize(effects.exit('listItemPrefix'), true).length\n    return ok(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListContinuation(effects, ok, nok) {\n  const self = this\n  self.containerState._closeFlow = undefined\n  return effects.check(blankLine, onBlank, notBlank)\n  /** @type {State} */\n\n  function onBlank(code) {\n    self.containerState.furtherBlankLines =\n      self.containerState.furtherBlankLines ||\n      self.containerState.initialBlankLine // We have a blank line.\n    // Still, try to consume at most the items size.\n\n    return factorySpace(\n      effects,\n      ok,\n      'listItemIndent',\n      self.containerState.size + 1\n    )(code)\n  }\n  /** @type {State} */\n\n  function notBlank(code) {\n    if (self.containerState.furtherBlankLines || !markdownSpace(code)) {\n      self.containerState.furtherBlankLines = undefined\n      self.containerState.initialBlankLine = undefined\n      return notInCurrentItem(code)\n    }\n\n    self.containerState.furtherBlankLines = undefined\n    self.containerState.initialBlankLine = undefined\n    return effects.attempt(indentConstruct, ok, notInCurrentItem)(code)\n  }\n  /** @type {State} */\n\n  function notInCurrentItem(code) {\n    // While we do continue, we signal that the flow should be closed.\n    self.containerState._closeFlow = true // As we’re closing flow, we’re no longer interrupting.\n\n    self.interrupt = undefined\n    return factorySpace(\n      effects,\n      effects.attempt(list, ok, nok),\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )(code)\n  }\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeIndent(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemIndent',\n    self.containerState.size + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'listItemIndent' &&\n      tail[2].sliceSerialize(tail[1], true).length === self.containerState.size\n      ? ok(code)\n      : nok(code)\n  }\n}\n/**\n * @type {Exiter}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListEnd(effects) {\n  effects.exit(this.containerState.type)\n}\n/**\n * @type {Tokenizer}\n * @this {TokenizeContextWithState}\n */\n\nfunction tokenizeListItemPrefixWhitespace(effects, ok, nok) {\n  const self = this\n  return factorySpace(\n    effects,\n    afterPrefix,\n    'listItemPrefixWhitespace',\n    self.parser.constructs.disable.null.includes('codeIndented')\n      ? undefined\n      : 4 + 1\n  )\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return !markdownSpace(code) &&\n      tail &&\n      tail[1].type === 'listItemPrefixWhitespace'\n      ? ok(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Exiter} Exiter\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownSpace} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const blockQuote = {\n  name: 'blockQuote',\n  tokenize: tokenizeBlockQuoteStart,\n  continuation: {\n    tokenize: tokenizeBlockQuoteContinuation\n  },\n  exit\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteStart(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 62) {\n      const state = self.containerState\n\n      if (!state.open) {\n        effects.enter('blockQuote', {\n          _container: true\n        })\n        state.open = true\n      }\n\n      effects.enter('blockQuotePrefix')\n      effects.enter('blockQuoteMarker')\n      effects.consume(code)\n      effects.exit('blockQuoteMarker')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (markdownSpace(code)) {\n      effects.enter('blockQuotePrefixWhitespace')\n      effects.consume(code)\n      effects.exit('blockQuotePrefixWhitespace')\n      effects.exit('blockQuotePrefix')\n      return ok\n    }\n\n    effects.exit('blockQuotePrefix')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeBlockQuoteContinuation(effects, ok, nok) {\n  return factorySpace(\n    effects,\n    effects.attempt(blockQuote, ok, nok),\n    'linePrefix',\n    this.parser.constructs.disable.null.includes('codeIndented') ? undefined : 4\n  )\n}\n/** @type {Exiter} */\n\nfunction exit(effects) {\n  effects.exit('blockQuote')\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiControl,\n  markdownLineEndingOrSpace,\n  markdownLineEnding\n} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} literalType\n * @param {string} literalMarkerType\n * @param {string} rawType\n * @param {string} stringType\n * @param {number} [max=Infinity]\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryDestination(\n  effects,\n  ok,\n  nok,\n  type,\n  literalType,\n  literalMarkerType,\n  rawType,\n  stringType,\n  max\n) {\n  const limit = max || Number.POSITIVE_INFINITY\n  let balance = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (code === 60) {\n      effects.enter(type)\n      effects.enter(literalType)\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      return destinationEnclosedBefore\n    }\n\n    if (code === null || code === 41 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.enter(type)\n    effects.enter(rawType)\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationRaw(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosedBefore(code) {\n    if (code === 62) {\n      effects.enter(literalMarkerType)\n      effects.consume(code)\n      effects.exit(literalMarkerType)\n      effects.exit(literalType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationEnclosed(code) {\n    if (code === 62) {\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      return destinationEnclosedBefore(code)\n    }\n\n    if (code === null || code === 60 || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? destinationEnclosedEscape : destinationEnclosed\n  }\n  /** @type {State} */\n\n  function destinationEnclosedEscape(code) {\n    if (code === 60 || code === 62 || code === 92) {\n      effects.consume(code)\n      return destinationEnclosed\n    }\n\n    return destinationEnclosed(code)\n  }\n  /** @type {State} */\n\n  function destinationRaw(code) {\n    if (code === 40) {\n      if (++balance > limit) return nok(code)\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === 41) {\n      if (!balance--) {\n        effects.exit('chunkString')\n        effects.exit(stringType)\n        effects.exit(rawType)\n        effects.exit(type)\n        return ok(code)\n      }\n\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      if (balance) return nok(code)\n      effects.exit('chunkString')\n      effects.exit(stringType)\n      effects.exit(rawType)\n      effects.exit(type)\n      return ok(code)\n    }\n\n    if (asciiControl(code)) return nok(code)\n    effects.consume(code)\n    return code === 92 ? destinationRawEscape : destinationRaw\n  }\n  /** @type {State} */\n\n  function destinationRawEscape(code) {\n    if (code === 40 || code === 41 || code === 92) {\n      effects.consume(code)\n      return destinationRaw\n    }\n\n    return destinationRaw(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @this {TokenizeContext}\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryLabel(effects, ok, nok, type, markerType, stringType) {\n  const self = this\n  let size = 0\n  /** @type {boolean} */\n\n  let data\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    effects.enter(stringType)\n    return atBreak\n  }\n  /** @type {State} */\n\n  function atBreak(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      (code === 93 && !data) ||\n      /* To do: remove in the future once we’ve switched from\n       * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n       * which doesn’t need this */\n\n      /* Hidden footnotes hook */\n\n      /* c8 ignore next 3 */\n      (code === 94 &&\n        !size &&\n        '_hiddenFootnoteSupport' in self.parser.constructs) ||\n      size > 999\n    ) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.exit(stringType)\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return atBreak\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return label(code)\n  }\n  /** @type {State} */\n\n  function label(code) {\n    if (\n      code === null ||\n      code === 91 ||\n      code === 93 ||\n      markdownLineEnding(code) ||\n      size++ > 999\n    ) {\n      effects.exit('chunkString')\n      return atBreak(code)\n    }\n\n    effects.consume(code)\n    data = data || !markdownSpace(code)\n    return code === 92 ? labelEscape : label\n  }\n  /** @type {State} */\n\n  function labelEscape(code) {\n    if (code === 91 || code === 92 || code === 93) {\n      effects.consume(code)\n      size++\n      return label\n    }\n\n    return label(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n * @param {State} nok\n * @param {string} type\n * @param {string} markerType\n * @param {string} stringType\n * @returns {State}\n */\n// eslint-disable-next-line max-params\nexport function factoryTitle(effects, ok, nok, type, markerType, stringType) {\n  /** @type {NonNullable<Code>} */\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter(type)\n    effects.enter(markerType)\n    effects.consume(code)\n    effects.exit(markerType)\n    marker = code === 40 ? 41 : code\n    return atFirstTitleBreak\n  }\n  /** @type {State} */\n\n  function atFirstTitleBreak(code) {\n    if (code === marker) {\n      effects.enter(markerType)\n      effects.consume(code)\n      effects.exit(markerType)\n      effects.exit(type)\n      return ok\n    }\n\n    effects.enter(stringType)\n    return atTitleBreak(code)\n  }\n  /** @type {State} */\n\n  function atTitleBreak(code) {\n    if (code === marker) {\n      effects.exit(stringType)\n      return atFirstTitleBreak(marker)\n    }\n\n    if (code === null) {\n      return nok(code)\n    } // Note: blank lines can’t exist in content.\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return factorySpace(effects, atTitleBreak, 'linePrefix')\n    }\n\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return title(code)\n  }\n  /** @type {State} */\n\n  function title(code) {\n    if (code === marker || code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      return atTitleBreak(code)\n    }\n\n    effects.consume(code)\n    return code === 92 ? titleEscape : title\n  }\n  /** @type {State} */\n\n  function titleEscape(code) {\n    if (code === marker || code === 92) {\n      effects.consume(code)\n      return title\n    }\n\n    return title(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Effects} Effects\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding, markdownSpace} from 'micromark-util-character'\n\n/**\n * @param {Effects} effects\n * @param {State} ok\n */\nexport function factoryWhitespace(effects, ok) {\n  /** @type {boolean} */\n  let seen\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      seen = true\n      return start\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(\n        effects,\n        start,\n        seen ? 'linePrefix' : 'lineSuffix'\n      )(code)\n    }\n\n    return ok(code)\n  }\n}\n","/**\n * Normalize an identifier (such as used in definitions).\n *\n * @param {string} value\n * @returns {string}\n */\nexport function normalizeIdentifier(value) {\n  return (\n    value // Collapse Markdown whitespace.\n      .replace(/[\\t\\n\\r ]+/g, ' ') // Trim.\n      .replace(/^ | $/g, '') // Some characters are considered “uppercase”, but if their lowercase\n      // counterpart is uppercased will result in a different uppercase\n      // character.\n      // Hence, to get that form, we perform both lower- and uppercase.\n      // Upper case makes sure keys will not interact with default prototypal\n      // methods: no method is uppercase.\n      .toLowerCase()\n      .toUpperCase()\n  )\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factorySpace} from 'micromark-factory-space'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const definition = {\n  name: 'definition',\n  tokenize: tokenizeDefinition\n}\n/** @type {Construct} */\n\nconst titleConstruct = {\n  tokenize: tokenizeTitle,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeDefinition(effects, ok, nok) {\n  const self = this\n  /** @type {string} */\n\n  let identifier\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('definition')\n    return factoryLabel.call(\n      self,\n      effects,\n      labelAfter,\n      nok,\n      'definitionLabel',\n      'definitionLabelMarker',\n      'definitionLabelString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function labelAfter(code) {\n    identifier = normalizeIdentifier(\n      self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n    )\n\n    if (code === 58) {\n      effects.enter('definitionMarker')\n      effects.consume(code)\n      effects.exit('definitionMarker') // Note: blank lines can’t exist in content.\n\n      return factoryWhitespace(\n        effects,\n        factoryDestination(\n          effects,\n          effects.attempt(\n            titleConstruct,\n            factorySpace(effects, after, 'whitespace'),\n            factorySpace(effects, after, 'whitespace')\n          ),\n          nok,\n          'definitionDestination',\n          'definitionDestinationLiteral',\n          'definitionDestinationLiteralMarker',\n          'definitionDestinationRaw',\n          'definitionDestinationString'\n        )\n      )\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('definition')\n\n      if (!self.parser.defined.includes(identifier)) {\n        self.parser.defined.push(identifier)\n      }\n\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeTitle(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, before)(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function before(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factorySpace(effects, after, 'whitespace'),\n        nok,\n        'definitionTitle',\n        'definitionTitleMarker',\n        'definitionTitleString'\n      )(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    return code === null || markdownLineEnding(code) ? ok(code) : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeIndented = {\n  name: 'codeIndented',\n  tokenize: tokenizeCodeIndented\n}\n/** @type {Construct} */\n\nconst indentedContent = {\n  tokenize: tokenizeIndentedContent,\n  partial: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeIndented(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeIndented')\n    return factorySpace(effects, afterStartPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterStartPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? afterPrefix(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(indentedContent, afterPrefix, after)(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return content(code)\n  }\n  /** @type {State} */\n\n  function content(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return afterPrefix(code)\n    }\n\n    effects.consume(code)\n    return content\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeIndented')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeIndentedContent(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    // If this is a lazy line, it can’t be code.\n    if (self.parser.lazy[self.now().line]) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return start\n    }\n\n    return factorySpace(effects, afterPrefix, 'linePrefix', 4 + 1)(code)\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    const tail = self.events[self.events.length - 1]\n    return tail &&\n      tail[1].type === 'linePrefix' &&\n      tail[2].sliceSerialize(tail[1], true).length >= 4\n      ? ok(code)\n      : markdownLineEnding(code)\n      ? start(code)\n      : nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {splice} from 'micromark-util-chunked'\n\n/** @type {Construct} */\nexport const headingAtx = {\n  name: 'headingAtx',\n  tokenize: tokenizeHeadingAtx,\n  resolve: resolveHeadingAtx\n}\n/** @type {Resolver} */\n\nfunction resolveHeadingAtx(events, context) {\n  let contentEnd = events.length - 2\n  let contentStart = 3\n  /** @type {Token} */\n\n  let content\n  /** @type {Token} */\n\n  let text // Prefix whitespace, part of the opening.\n\n  if (events[contentStart][1].type === 'whitespace') {\n    contentStart += 2\n  } // Suffix whitespace, part of the closing.\n\n  if (\n    contentEnd - 2 > contentStart &&\n    events[contentEnd][1].type === 'whitespace'\n  ) {\n    contentEnd -= 2\n  }\n\n  if (\n    events[contentEnd][1].type === 'atxHeadingSequence' &&\n    (contentStart === contentEnd - 1 ||\n      (contentEnd - 4 > contentStart &&\n        events[contentEnd - 2][1].type === 'whitespace'))\n  ) {\n    contentEnd -= contentStart + 1 === contentEnd ? 2 : 4\n  }\n\n  if (contentEnd > contentStart) {\n    content = {\n      type: 'atxHeadingText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end\n    }\n    text = {\n      type: 'chunkText',\n      start: events[contentStart][1].start,\n      end: events[contentEnd][1].end,\n      // @ts-expect-error Constants are fine to assign.\n      contentType: 'text'\n    }\n    splice(events, contentStart, contentEnd - contentStart + 1, [\n      ['enter', content, context],\n      ['enter', text, context],\n      ['exit', text, context],\n      ['exit', content, context]\n    ])\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHeadingAtx(effects, ok, nok) {\n  const self = this\n  let size = 0\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('atxHeading')\n    effects.enter('atxHeadingSequence')\n    return fenceOpenInside(code)\n  }\n  /** @type {State} */\n\n  function fenceOpenInside(code) {\n    if (code === 35 && size++ < 6) {\n      effects.consume(code)\n      return fenceOpenInside\n    }\n\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingSequence')\n      return self.interrupt ? ok(code) : headingBreak(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function headingBreak(code) {\n    if (code === 35) {\n      effects.enter('atxHeadingSequence')\n      return sequence(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('atxHeading')\n      return ok(code)\n    }\n\n    if (markdownSpace(code)) {\n      return factorySpace(effects, headingBreak, 'whitespace')(code)\n    }\n\n    effects.enter('atxHeadingText')\n    return data(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === 35) {\n      effects.consume(code)\n      return sequence\n    }\n\n    effects.exit('atxHeadingSequence')\n    return headingBreak(code)\n  }\n  /** @type {State} */\n\n  function data(code) {\n    if (code === null || code === 35 || markdownLineEndingOrSpace(code)) {\n      effects.exit('atxHeadingText')\n      return headingBreak(code)\n    }\n\n    effects.consume(code)\n    return data\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const setextUnderline = {\n  name: 'setextUnderline',\n  tokenize: tokenizeSetextUnderline,\n  resolveTo: resolveToSetextUnderline\n}\n/** @type {Resolver} */\n\nfunction resolveToSetextUnderline(events, context) {\n  let index = events.length\n  /** @type {number|undefined} */\n\n  let content\n  /** @type {number|undefined} */\n\n  let text\n  /** @type {number|undefined} */\n\n  let definition // Find the opening of the content.\n  // It’ll always exist: we don’t tokenize if it isn’t there.\n\n  while (index--) {\n    if (events[index][0] === 'enter') {\n      if (events[index][1].type === 'content') {\n        content = index\n        break\n      }\n\n      if (events[index][1].type === 'paragraph') {\n        text = index\n      }\n    } // Exit\n    else {\n      if (events[index][1].type === 'content') {\n        // Remove the content end (if needed we’ll add it later)\n        events.splice(index, 1)\n      }\n\n      if (!definition && events[index][1].type === 'definition') {\n        definition = index\n      }\n    }\n  }\n\n  const heading = {\n    type: 'setextHeading',\n    start: Object.assign({}, events[text][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  } // Change the paragraph to setext heading text.\n\n  events[text][1].type = 'setextHeadingText' // If we have definitions in the content, we’ll keep on having content,\n  // but we need move it.\n\n  if (definition) {\n    events.splice(text, 0, ['enter', heading, context])\n    events.splice(definition + 1, 0, ['exit', events[content][1], context])\n    events[content][1].end = Object.assign({}, events[definition][1].end)\n  } else {\n    events[content][1] = heading\n  } // Add the heading exit at the end.\n\n  events.push(['exit', heading, context])\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeSetextUnderline(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  /** @type {boolean} */\n\n  let paragraph // Find an opening.\n\n  while (index--) {\n    // Skip enter/exit of line ending, line prefix, and content.\n    // We can now either have a definition or a paragraph.\n    if (\n      self.events[index][1].type !== 'lineEnding' &&\n      self.events[index][1].type !== 'linePrefix' &&\n      self.events[index][1].type !== 'content'\n    ) {\n      paragraph = self.events[index][1].type === 'paragraph'\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!self.parser.lazy[self.now().line] && (self.interrupt || paragraph)) {\n      effects.enter('setextHeadingLine')\n      effects.enter('setextHeadingLineSequence')\n      marker = code\n      return closingSequence(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function closingSequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return closingSequence\n    }\n\n    effects.exit('setextHeadingLineSequence')\n    return factorySpace(effects, closingSequenceEnd, 'lineSuffix')(code)\n  }\n  /** @type {State} */\n\n  function closingSequenceEnd(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('setextHeadingLine')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result\n * in more relaxed rules (condition 6): because they are known blocks, the\n * HTML-like syntax doesn’t have to be strictly parsed.\n * For tag names not in this list, a more strict algorithm (condition 7) is used\n * to detect whether the HTML-like syntax is seen as HTML (flow) or not.\n *\n * This is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n */\nexport const htmlBlockNames = [\n  'address',\n  'article',\n  'aside',\n  'base',\n  'basefont',\n  'blockquote',\n  'body',\n  'caption',\n  'center',\n  'col',\n  'colgroup',\n  'dd',\n  'details',\n  'dialog',\n  'dir',\n  'div',\n  'dl',\n  'dt',\n  'fieldset',\n  'figcaption',\n  'figure',\n  'footer',\n  'form',\n  'frame',\n  'frameset',\n  'h1',\n  'h2',\n  'h3',\n  'h4',\n  'h5',\n  'h6',\n  'head',\n  'header',\n  'hr',\n  'html',\n  'iframe',\n  'legend',\n  'li',\n  'link',\n  'main',\n  'menu',\n  'menuitem',\n  'nav',\n  'noframes',\n  'ol',\n  'optgroup',\n  'option',\n  'p',\n  'param',\n  'section',\n  'summary',\n  'table',\n  'tbody',\n  'td',\n  'tfoot',\n  'th',\n  'thead',\n  'title',\n  'tr',\n  'track',\n  'ul'\n]\n\n/**\n * List of lowercase HTML tag names which when parsing HTML (flow), result in\n * HTML that can include lines w/o exiting, until a closing tag also in this\n * list is found (condition 1).\n *\n * This module is copied from:\n * <https://spec.commonmark.org/0.30/#html-blocks>.\n *\n * Note that `textarea` was added in `CommonMark@0.30`.\n */\nexport const htmlRawNames = ['pre', 'script', 'style', 'textarea']\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\nimport {htmlBlockNames, htmlRawNames} from 'micromark-util-html-tag-name'\nimport {blankLine} from './blank-line.js'\n/** @type {Construct} */\n\nexport const htmlFlow = {\n  name: 'htmlFlow',\n  tokenize: tokenizeHtmlFlow,\n  resolveTo: resolveToHtmlFlow,\n  concrete: true\n}\n/** @type {Construct} */\n\nconst nextBlankConstruct = {\n  tokenize: tokenizeNextBlank,\n  partial: true\n}\n/** @type {Resolver} */\n\nfunction resolveToHtmlFlow(events) {\n  let index = events.length\n\n  while (index--) {\n    if (events[index][0] === 'enter' && events[index][1].type === 'htmlFlow') {\n      break\n    }\n  }\n\n  if (index > 1 && events[index - 2][1].type === 'linePrefix') {\n    // Add the prefix start to the HTML token.\n    events[index][1].start = events[index - 2][1].start // Add the prefix start to the HTML line token.\n\n    events[index + 1][1].start = events[index - 2][1].start // Remove the line prefix.\n\n    events.splice(index - 2, 2)\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlFlow(effects, ok, nok) {\n  const self = this\n  /** @type {number} */\n\n  let kind\n  /** @type {boolean} */\n\n  let startTag\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {Code} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlFlow')\n    effects.enter('htmlFlowData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationStart\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      kind = 3 // While we’re in an instruction instead of a declaration, we’re on a `?`\n      // right now, so we do need to search for `>`, similar to declarations.\n\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      startTag = true\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationStart(code) {\n    if (code === 45) {\n      effects.consume(code)\n      kind = 2\n      return commentOpenInside\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      kind = 5\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpenInside\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      kind = 4\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpenInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuationDeclarationInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdataOpenInside(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length\n        ? self.interrupt\n          ? ok\n          : continuation\n        : cdataOpenInside\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      buffer = String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagName(code) {\n    if (\n      code === null ||\n      code === 47 ||\n      code === 62 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      if (\n        code !== 47 &&\n        startTag &&\n        htmlRawNames.includes(buffer.toLowerCase())\n      ) {\n        kind = 1\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      if (htmlBlockNames.includes(buffer.toLowerCase())) {\n        kind = 6\n\n        if (code === 47) {\n          effects.consume(code)\n          return basicSelfClosing\n        }\n\n        return self.interrupt ? ok(code) : continuation(code)\n      }\n\n      kind = 7 // Do not support complete HTML when interrupting\n\n      return self.interrupt && !self.parser.lazy[self.now().line]\n        ? nok(code)\n        : startTag\n        ? completeAttributeNameBefore(code)\n        : completeClosingTagAfter(code)\n    }\n\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return tagName\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function basicSelfClosing(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return self.interrupt ? ok : continuation\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeClosingTagAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeClosingTagAfter\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameBefore(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return completeEnd\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameBefore\n    }\n\n    return completeEnd(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return completeAttributeName\n    }\n\n    return completeAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeNameAfter\n    }\n\n    return completeAttributeNameBefore(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return completeAttributeValueQuoted\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAttributeValueBefore\n    }\n\n    marker = null\n    return completeAttributeValueUnquoted(code)\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuoted(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return nok(code)\n    }\n\n    if (code === marker) {\n      effects.consume(code)\n      return completeAttributeValueQuotedAfter\n    }\n\n    effects.consume(code)\n    return completeAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96 ||\n      markdownLineEndingOrSpace(code)\n    ) {\n      return completeAttributeNameAfter(code)\n    }\n\n    effects.consume(code)\n    return completeAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function completeAttributeValueQuotedAfter(code) {\n    if (code === 47 || code === 62 || markdownSpace(code)) {\n      return completeAttributeNameBefore(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeEnd(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function completeAfter(code) {\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return completeAfter\n    }\n\n    return code === null || markdownLineEnding(code)\n      ? continuation(code)\n      : nok(code)\n  }\n  /** @type {State} */\n\n  function continuation(code) {\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationCommentInside\n    }\n\n    if (code === 60 && kind === 1) {\n      effects.consume(code)\n      return continuationRawTagOpen\n    }\n\n    if (code === 62 && kind === 4) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (code === 63 && kind === 3) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    if (code === 93 && kind === 5) {\n      effects.consume(code)\n      return continuationCharacterDataInside\n    }\n\n    if (markdownLineEnding(code) && (kind === 6 || kind === 7)) {\n      return effects.check(\n        nextBlankConstruct,\n        continuationClose,\n        continuationAtLineEnding\n      )(code)\n    }\n\n    if (code === null || markdownLineEnding(code)) {\n      return continuationAtLineEnding(code)\n    }\n\n    effects.consume(code)\n    return continuation\n  }\n  /** @type {State} */\n\n  function continuationAtLineEnding(code) {\n    effects.exit('htmlFlowData')\n    return htmlContinueStart(code)\n  }\n  /** @type {State} */\n\n  function htmlContinueStart(code) {\n    if (code === null) {\n      return done(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        {\n          tokenize: htmlLineEnd,\n          partial: true\n        },\n        htmlContinueStart,\n        done\n      )(code)\n    }\n\n    effects.enter('htmlFlowData')\n    return continuation(code)\n  }\n  /** @type {Tokenizer} */\n\n  function htmlLineEnd(effects, ok, nok) {\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {State} */\n\n  function continuationCommentInside(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawTagOpen(code) {\n    if (code === 47) {\n      effects.consume(code)\n      buffer = ''\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationRawEndTag(code) {\n    if (code === 62 && htmlRawNames.includes(buffer.toLowerCase())) {\n      effects.consume(code)\n      return continuationClose\n    }\n\n    if (asciiAlpha(code) && buffer.length < 8) {\n      effects.consume(code)\n      buffer += String.fromCharCode(code)\n      return continuationRawEndTag\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationCharacterDataInside(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationDeclarationInside(code) {\n    if (code === 62) {\n      effects.consume(code)\n      return continuationClose\n    } // More dashes.\n\n    if (code === 45 && kind === 2) {\n      effects.consume(code)\n      return continuationDeclarationInside\n    }\n\n    return continuation(code)\n  }\n  /** @type {State} */\n\n  function continuationClose(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('htmlFlowData')\n      return done(code)\n    }\n\n    effects.consume(code)\n    return continuationClose\n  }\n  /** @type {State} */\n\n  function done(code) {\n    effects.exit('htmlFlow')\n    return ok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeNextBlank(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.exit('htmlFlowData')\n    effects.enter('lineEndingBlank')\n    effects.consume(code)\n    effects.exit('lineEndingBlank')\n    return effects.attempt(blankLine, ok, nok)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  markdownLineEnding,\n  markdownLineEndingOrSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeFenced = {\n  name: 'codeFenced',\n  tokenize: tokenizeCodeFenced,\n  concrete: true\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeFenced(effects, ok, nok) {\n  const self = this\n  /** @type {Construct} */\n\n  const closingFenceConstruct = {\n    tokenize: tokenizeClosingFence,\n    partial: true\n  }\n  /** @type {Construct} */\n\n  const nonLazyLine = {\n    tokenize: tokenizeNonLazyLine,\n    partial: true\n  }\n  const tail = this.events[this.events.length - 1]\n  const initialPrefix =\n    tail && tail[1].type === 'linePrefix'\n      ? tail[2].sliceSerialize(tail[1], true).length\n      : 0\n  let sizeOpen = 0\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeFenced')\n    effects.enter('codeFencedFence')\n    effects.enter('codeFencedFenceSequence')\n    marker = code\n    return sequenceOpen(code)\n  }\n  /** @type {State} */\n\n  function sequenceOpen(code) {\n    if (code === marker) {\n      effects.consume(code)\n      sizeOpen++\n      return sequenceOpen\n    }\n\n    effects.exit('codeFencedFenceSequence')\n    return sizeOpen < 3\n      ? nok(code)\n      : factorySpace(effects, infoOpen, 'whitespace')(code)\n  }\n  /** @type {State} */\n\n  function infoOpen(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceInfo')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return info(code)\n  }\n  /** @type {State} */\n\n  function info(code) {\n    if (code === null || markdownLineEndingOrSpace(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceInfo')\n      return factorySpace(effects, infoAfter, 'whitespace')(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return info\n  }\n  /** @type {State} */\n\n  function infoAfter(code) {\n    if (code === null || markdownLineEnding(code)) {\n      return openAfter(code)\n    }\n\n    effects.enter('codeFencedFenceMeta')\n    effects.enter('chunkString', {\n      contentType: 'string'\n    })\n    return meta(code)\n  }\n  /** @type {State} */\n\n  function meta(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('chunkString')\n      effects.exit('codeFencedFenceMeta')\n      return openAfter(code)\n    }\n\n    if (code === 96 && code === marker) return nok(code)\n    effects.consume(code)\n    return meta\n  }\n  /** @type {State} */\n\n  function openAfter(code) {\n    effects.exit('codeFencedFence')\n    return self.interrupt ? ok(code) : contentStart(code)\n  }\n  /** @type {State} */\n\n  function contentStart(code) {\n    if (code === null) {\n      return after(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      return effects.attempt(\n        nonLazyLine,\n        effects.attempt(\n          closingFenceConstruct,\n          after,\n          initialPrefix\n            ? factorySpace(\n                effects,\n                contentStart,\n                'linePrefix',\n                initialPrefix + 1\n              )\n            : contentStart\n        ),\n        after\n      )(code)\n    }\n\n    effects.enter('codeFlowValue')\n    return contentContinue(code)\n  }\n  /** @type {State} */\n\n  function contentContinue(code) {\n    if (code === null || markdownLineEnding(code)) {\n      effects.exit('codeFlowValue')\n      return contentStart(code)\n    }\n\n    effects.consume(code)\n    return contentContinue\n  }\n  /** @type {State} */\n\n  function after(code) {\n    effects.exit('codeFenced')\n    return ok(code)\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeNonLazyLine(effects, ok, nok) {\n    const self = this\n    return start\n    /** @type {State} */\n\n    function start(code) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return lineStart\n    }\n    /** @type {State} */\n\n    function lineStart(code) {\n      return self.parser.lazy[self.now().line] ? nok(code) : ok(code)\n    }\n  }\n  /** @type {Tokenizer} */\n\n  function tokenizeClosingFence(effects, ok, nok) {\n    let size = 0\n    return factorySpace(\n      effects,\n      closingSequenceStart,\n      'linePrefix',\n      this.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n    /** @type {State} */\n\n    function closingSequenceStart(code) {\n      effects.enter('codeFencedFence')\n      effects.enter('codeFencedFenceSequence')\n      return closingSequence(code)\n    }\n    /** @type {State} */\n\n    function closingSequence(code) {\n      if (code === marker) {\n        effects.consume(code)\n        size++\n        return closingSequence\n      }\n\n      if (size < sizeOpen) return nok(code)\n      effects.exit('codeFencedFenceSequence')\n      return factorySpace(effects, closingSequenceEnd, 'whitespace')(code)\n    }\n    /** @type {State} */\n\n    function closingSequenceEnd(code) {\n      if (code === null || markdownLineEnding(code)) {\n        effects.exit('codeFencedFence')\n        return ok(code)\n      }\n\n      return nok(code)\n    }\n  }\n}\n","/// <reference lib=\"dom\" />\n\n/* eslint-env browser */\n\nconst element = document.createElement('i')\n\n/**\n * @param {string} value\n * @returns {string|false}\n */\nexport function decodeNamedCharacterReference(value) {\n  const characterReference = '&' + value + ';'\n  element.innerHTML = characterReference\n  const char = element.textContent\n\n  // Some named character references do not require the closing semicolon\n  // (`&not`, for instance), which leads to situations where parsing the assumed\n  // named reference of `&notit;` will result in the string `¬it;`.\n  // When we encounter a trailing semicolon after parsing, and the character\n  // reference to decode was not a semicolon (`&semi;`), we can assume that the\n  // matching was not complete.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  if (char.charCodeAt(char.length - 1) === 59 /* `;` */ && value !== 'semi') {\n    return false\n  }\n\n  // If the decoded string is equal to the input, the character reference was\n  // not valid.\n  // @ts-expect-error: TypeScript is wrong that `textContent` on elements can\n  // yield `null`.\n  return char === characterReference ? false : char\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {\n  asciiAlphanumeric,\n  asciiDigit,\n  asciiHexDigit\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterReference = {\n  name: 'characterReference',\n  tokenize: tokenizeCharacterReference\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterReference(effects, ok, nok) {\n  const self = this\n  let size = 0\n  /** @type {number} */\n\n  let max\n  /** @type {(code: Code) => code is number} */\n\n  let test\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterReference')\n    effects.enter('characterReferenceMarker')\n    effects.consume(code)\n    effects.exit('characterReferenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 35) {\n      effects.enter('characterReferenceMarkerNumeric')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerNumeric')\n      return numeric\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 31\n    test = asciiAlphanumeric\n    return value(code)\n  }\n  /** @type {State} */\n\n  function numeric(code) {\n    if (code === 88 || code === 120) {\n      effects.enter('characterReferenceMarkerHexadecimal')\n      effects.consume(code)\n      effects.exit('characterReferenceMarkerHexadecimal')\n      effects.enter('characterReferenceValue')\n      max = 6\n      test = asciiHexDigit\n      return value\n    }\n\n    effects.enter('characterReferenceValue')\n    max = 7\n    test = asciiDigit\n    return value(code)\n  }\n  /** @type {State} */\n\n  function value(code) {\n    /** @type {Token} */\n    let token\n\n    if (code === 59 && size) {\n      token = effects.exit('characterReferenceValue')\n\n      if (\n        test === asciiAlphanumeric &&\n        !decodeNamedCharacterReference(self.sliceSerialize(token))\n      ) {\n        return nok(code)\n      }\n\n      effects.enter('characterReferenceMarker')\n      effects.consume(code)\n      effects.exit('characterReferenceMarker')\n      effects.exit('characterReference')\n      return ok\n    }\n\n    if (test(code) && size++ < max) {\n      effects.consume(code)\n      return value\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {asciiPunctuation} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const characterEscape = {\n  name: 'characterEscape',\n  tokenize: tokenizeCharacterEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCharacterEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('characterEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    effects.exit('escapeMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiPunctuation(code)) {\n      effects.enter('characterEscapeValue')\n      effects.consume(code)\n      effects.exit('characterEscapeValue')\n      effects.exit('characterEscape')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const lineEnding = {\n  name: 'lineEnding',\n  tokenize: tokenizeLineEnding\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLineEnding(effects, ok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(effects, ok, 'linePrefix')\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factoryDestination} from 'micromark-factory-destination'\nimport {factoryLabel} from 'micromark-factory-label'\nimport {factoryTitle} from 'micromark-factory-title'\nimport {factoryWhitespace} from 'micromark-factory-whitespace'\nimport {markdownLineEndingOrSpace} from 'micromark-util-character'\nimport {push, splice} from 'micromark-util-chunked'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const labelEnd = {\n  name: 'labelEnd',\n  tokenize: tokenizeLabelEnd,\n  resolveTo: resolveToLabelEnd,\n  resolveAll: resolveAllLabelEnd\n}\n/** @type {Construct} */\n\nconst resourceConstruct = {\n  tokenize: tokenizeResource\n}\n/** @type {Construct} */\n\nconst fullReferenceConstruct = {\n  tokenize: tokenizeFullReference\n}\n/** @type {Construct} */\n\nconst collapsedReferenceConstruct = {\n  tokenize: tokenizeCollapsedReference\n}\n/** @type {Resolver} */\n\nfunction resolveAllLabelEnd(events) {\n  let index = -1\n  /** @type {Token} */\n\n  let token\n\n  while (++index < events.length) {\n    token = events[index][1]\n\n    if (\n      token.type === 'labelImage' ||\n      token.type === 'labelLink' ||\n      token.type === 'labelEnd'\n    ) {\n      // Remove the marker.\n      events.splice(index + 1, token.type === 'labelImage' ? 4 : 2)\n      token.type = 'data'\n      index++\n    }\n  }\n\n  return events\n}\n/** @type {Resolver} */\n\nfunction resolveToLabelEnd(events, context) {\n  let index = events.length\n  let offset = 0\n  /** @type {Token} */\n\n  let token\n  /** @type {number|undefined} */\n\n  let open\n  /** @type {number|undefined} */\n\n  let close\n  /** @type {Event[]} */\n\n  let media // Find an opening.\n\n  while (index--) {\n    token = events[index][1]\n\n    if (open) {\n      // If we see another link, or inactive link label, we’ve been here before.\n      if (\n        token.type === 'link' ||\n        (token.type === 'labelLink' && token._inactive)\n      ) {\n        break\n      } // Mark other link openings as inactive, as we can’t have links in\n      // links.\n\n      if (events[index][0] === 'enter' && token.type === 'labelLink') {\n        token._inactive = true\n      }\n    } else if (close) {\n      if (\n        events[index][0] === 'enter' &&\n        (token.type === 'labelImage' || token.type === 'labelLink') &&\n        !token._balanced\n      ) {\n        open = index\n\n        if (token.type !== 'labelLink') {\n          offset = 2\n          break\n        }\n      }\n    } else if (token.type === 'labelEnd') {\n      close = index\n    }\n  }\n\n  const group = {\n    type: events[open][1].type === 'labelLink' ? 'link' : 'image',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[events.length - 1][1].end)\n  }\n  const label = {\n    type: 'label',\n    start: Object.assign({}, events[open][1].start),\n    end: Object.assign({}, events[close][1].end)\n  }\n  const text = {\n    type: 'labelText',\n    start: Object.assign({}, events[open + offset + 2][1].end),\n    end: Object.assign({}, events[close - 2][1].start)\n  }\n  media = [\n    ['enter', group, context],\n    ['enter', label, context]\n  ] // Opening marker.\n\n  media = push(media, events.slice(open + 1, open + offset + 3)) // Text open.\n\n  media = push(media, [['enter', text, context]]) // Between.\n\n  media = push(\n    media,\n    resolveAll(\n      context.parser.constructs.insideSpan.null,\n      events.slice(open + offset + 4, close - 3),\n      context\n    )\n  ) // Text close, marker close, label close.\n\n  media = push(media, [\n    ['exit', text, context],\n    events[close - 2],\n    events[close - 1],\n    ['exit', label, context]\n  ]) // Reference, resource, or so.\n\n  media = push(media, events.slice(close + 1)) // Media close.\n\n  media = push(media, [['exit', group, context]])\n  splice(events, open, events.length, media)\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelEnd(effects, ok, nok) {\n  const self = this\n  let index = self.events.length\n  /** @type {Token} */\n\n  let labelStart\n  /** @type {boolean} */\n\n  let defined // Find an opening.\n\n  while (index--) {\n    if (\n      (self.events[index][1].type === 'labelImage' ||\n        self.events[index][1].type === 'labelLink') &&\n      !self.events[index][1]._balanced\n    ) {\n      labelStart = self.events[index][1]\n      break\n    }\n  }\n\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    if (!labelStart) {\n      return nok(code)\n    } // It’s a balanced bracket, but contains a link.\n\n    if (labelStart._inactive) return balanced(code)\n    defined = self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize({\n          start: labelStart.end,\n          end: self.now()\n        })\n      )\n    )\n    effects.enter('labelEnd')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelEnd')\n    return afterLabelEnd\n  }\n  /** @type {State} */\n\n  function afterLabelEnd(code) {\n    // Resource: `[asd](fgh)`.\n    if (code === 40) {\n      return effects.attempt(\n        resourceConstruct,\n        ok,\n        defined ? ok : balanced\n      )(code)\n    } // Collapsed (`[asd][]`) or full (`[asd][fgh]`) reference?\n\n    if (code === 91) {\n      return effects.attempt(\n        fullReferenceConstruct,\n        ok,\n        defined\n          ? effects.attempt(collapsedReferenceConstruct, ok, balanced)\n          : balanced\n      )(code)\n    } // Shortcut reference: `[asd]`?\n\n    return defined ? ok(code) : balanced(code)\n  }\n  /** @type {State} */\n\n  function balanced(code) {\n    labelStart._balanced = true\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeResource(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('resource')\n    effects.enter('resourceMarker')\n    effects.consume(code)\n    effects.exit('resourceMarker')\n    return factoryWhitespace(effects, open)\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 41) {\n      return end(code)\n    }\n\n    return factoryDestination(\n      effects,\n      destinationAfter,\n      nok,\n      'resourceDestination',\n      'resourceDestinationLiteral',\n      'resourceDestinationLiteralMarker',\n      'resourceDestinationRaw',\n      'resourceDestinationString',\n      32\n    )(code)\n  }\n  /** @type {State} */\n\n  function destinationAfter(code) {\n    return markdownLineEndingOrSpace(code)\n      ? factoryWhitespace(effects, between)(code)\n      : end(code)\n  }\n  /** @type {State} */\n\n  function between(code) {\n    if (code === 34 || code === 39 || code === 40) {\n      return factoryTitle(\n        effects,\n        factoryWhitespace(effects, end),\n        nok,\n        'resourceTitle',\n        'resourceTitleMarker',\n        'resourceTitleString'\n      )(code)\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 41) {\n      effects.enter('resourceMarker')\n      effects.consume(code)\n      effects.exit('resourceMarker')\n      effects.exit('resource')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeFullReference(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    return factoryLabel.call(\n      self,\n      effects,\n      afterLabel,\n      nok,\n      'reference',\n      'referenceMarker',\n      'referenceString'\n    )(code)\n  }\n  /** @type {State} */\n\n  function afterLabel(code) {\n    return self.parser.defined.includes(\n      normalizeIdentifier(\n        self.sliceSerialize(self.events[self.events.length - 1][1]).slice(1, -1)\n      )\n    )\n      ? ok(code)\n      : nok(code)\n  }\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCollapsedReference(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('reference')\n    effects.enter('referenceMarker')\n    effects.consume(code)\n    effects.exit('referenceMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 93) {\n      effects.enter('referenceMarker')\n      effects.consume(code)\n      effects.exit('referenceMarker')\n      effects.exit('reference')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartImage = {\n  name: 'labelStartImage',\n  tokenize: tokenizeLabelStartImage,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartImage(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelImage')\n    effects.enter('labelImageMarker')\n    effects.consume(code)\n    effects.exit('labelImageMarker')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 91) {\n      effects.enter('labelMarker')\n      effects.consume(code)\n      effects.exit('labelMarker')\n      effects.exit('labelImage')\n      return after\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {\n  markdownLineEndingOrSpace,\n  unicodePunctuation,\n  unicodeWhitespace\n} from 'micromark-util-character'\n\n/**\n * Classify whether a character code represents whitespace, punctuation, or\n * something else.\n *\n * Used for attention (emphasis, strong), whose sequences can open or close\n * based on the class of surrounding characters.\n *\n * Note that eof (`null`) is seen as whitespace.\n *\n * @param {Code} code\n * @returns {number|undefined}\n */\nexport function classifyCharacter(code) {\n  if (\n    code === null ||\n    markdownLineEndingOrSpace(code) ||\n    unicodeWhitespace(code)\n  ) {\n    return 1\n  }\n\n  if (unicodePunctuation(code)) {\n    return 2\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').Code} Code\n * @typedef {import('micromark-util-types').Point} Point\n */\nimport {push, splice} from 'micromark-util-chunked'\nimport {classifyCharacter} from 'micromark-util-classify-character'\nimport {resolveAll} from 'micromark-util-resolve-all'\n\n/** @type {Construct} */\nexport const attention = {\n  name: 'attention',\n  tokenize: tokenizeAttention,\n  resolveAll: resolveAllAttention\n}\n/**\n * Take all events and resolve attention to emphasis or strong.\n *\n * @type {Resolver}\n */\n\nfunction resolveAllAttention(events, context) {\n  let index = -1\n  /** @type {number} */\n\n  let open\n  /** @type {Token} */\n\n  let group\n  /** @type {Token} */\n\n  let text\n  /** @type {Token} */\n\n  let openingSequence\n  /** @type {Token} */\n\n  let closingSequence\n  /** @type {number} */\n\n  let use\n  /** @type {Event[]} */\n\n  let nextEvents\n  /** @type {number} */\n\n  let offset // Walk through all events.\n  //\n  // Note: performance of this is fine on an mb of normal markdown, but it’s\n  // a bottleneck for malicious stuff.\n\n  while (++index < events.length) {\n    // Find a token that can close.\n    if (\n      events[index][0] === 'enter' &&\n      events[index][1].type === 'attentionSequence' &&\n      events[index][1]._close\n    ) {\n      open = index // Now walk back to find an opener.\n\n      while (open--) {\n        // Find a token that can open the closer.\n        if (\n          events[open][0] === 'exit' &&\n          events[open][1].type === 'attentionSequence' &&\n          events[open][1]._open && // If the markers are the same:\n          context.sliceSerialize(events[open][1]).charCodeAt(0) ===\n            context.sliceSerialize(events[index][1]).charCodeAt(0)\n        ) {\n          // If the opening can close or the closing can open,\n          // and the close size *is not* a multiple of three,\n          // but the sum of the opening and closing size *is* multiple of three,\n          // then don’t match.\n          if (\n            (events[open][1]._close || events[index][1]._open) &&\n            (events[index][1].end.offset - events[index][1].start.offset) % 3 &&\n            !(\n              (events[open][1].end.offset -\n                events[open][1].start.offset +\n                events[index][1].end.offset -\n                events[index][1].start.offset) %\n              3\n            )\n          ) {\n            continue\n          } // Number of markers to use from the sequence.\n\n          use =\n            events[open][1].end.offset - events[open][1].start.offset > 1 &&\n            events[index][1].end.offset - events[index][1].start.offset > 1\n              ? 2\n              : 1\n          const start = Object.assign({}, events[open][1].end)\n          const end = Object.assign({}, events[index][1].start)\n          movePoint(start, -use)\n          movePoint(end, use)\n          openingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start,\n            end: Object.assign({}, events[open][1].end)\n          }\n          closingSequence = {\n            type: use > 1 ? 'strongSequence' : 'emphasisSequence',\n            start: Object.assign({}, events[index][1].start),\n            end\n          }\n          text = {\n            type: use > 1 ? 'strongText' : 'emphasisText',\n            start: Object.assign({}, events[open][1].end),\n            end: Object.assign({}, events[index][1].start)\n          }\n          group = {\n            type: use > 1 ? 'strong' : 'emphasis',\n            start: Object.assign({}, openingSequence.start),\n            end: Object.assign({}, closingSequence.end)\n          }\n          events[open][1].end = Object.assign({}, openingSequence.start)\n          events[index][1].start = Object.assign({}, closingSequence.end)\n          nextEvents = [] // If there are more markers in the opening, add them before.\n\n          if (events[open][1].end.offset - events[open][1].start.offset) {\n            nextEvents = push(nextEvents, [\n              ['enter', events[open][1], context],\n              ['exit', events[open][1], context]\n            ])\n          } // Opening.\n\n          nextEvents = push(nextEvents, [\n            ['enter', group, context],\n            ['enter', openingSequence, context],\n            ['exit', openingSequence, context],\n            ['enter', text, context]\n          ]) // Between.\n\n          nextEvents = push(\n            nextEvents,\n            resolveAll(\n              context.parser.constructs.insideSpan.null,\n              events.slice(open + 1, index),\n              context\n            )\n          ) // Closing.\n\n          nextEvents = push(nextEvents, [\n            ['exit', text, context],\n            ['enter', closingSequence, context],\n            ['exit', closingSequence, context],\n            ['exit', group, context]\n          ]) // If there are more markers in the closing, add them after.\n\n          if (events[index][1].end.offset - events[index][1].start.offset) {\n            offset = 2\n            nextEvents = push(nextEvents, [\n              ['enter', events[index][1], context],\n              ['exit', events[index][1], context]\n            ])\n          } else {\n            offset = 0\n          }\n\n          splice(events, open - 1, index - open + 3, nextEvents)\n          index = open + nextEvents.length - offset - 2\n          break\n        }\n      }\n    }\n  } // Remove remaining sequences.\n\n  index = -1\n\n  while (++index < events.length) {\n    if (events[index][1].type === 'attentionSequence') {\n      events[index][1].type = 'data'\n    }\n  }\n\n  return events\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAttention(effects, ok) {\n  const attentionMarkers = this.parser.constructs.attentionMarkers.null\n  const previous = this.previous\n  const before = classifyCharacter(previous)\n  /** @type {NonNullable<Code>} */\n\n  let marker\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('attentionSequence')\n    marker = code\n    return sequence(code)\n  }\n  /** @type {State} */\n\n  function sequence(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return sequence\n    }\n\n    const token = effects.exit('attentionSequence')\n    const after = classifyCharacter(code)\n    const open =\n      !after || (after === 2 && before) || attentionMarkers.includes(code)\n    const close =\n      !before || (before === 2 && after) || attentionMarkers.includes(previous)\n    token._open = Boolean(marker === 42 ? open : open && (before || !close))\n    token._close = Boolean(marker === 42 ? close : close && (after || !open))\n    return ok(code)\n  }\n}\n/**\n * Move a point a bit.\n *\n * Note: `move` only works inside lines! It’s not possible to move past other\n * chunks (replacement characters, tabs, or line endings).\n *\n * @param {Point} point\n * @param {number} offset\n * @returns {void}\n */\n\nfunction movePoint(point, offset) {\n  point.column += offset\n  point.offset += offset\n  point._bufferIndex += offset\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  asciiAtext,\n  asciiControl\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const autolink = {\n  name: 'autolink',\n  tokenize: tokenizeAutolink\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeAutolink(effects, ok, nok) {\n  let size = 1\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('autolink')\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.enter('autolinkProtocol')\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return schemeOrEmailAtext\n    }\n\n    return asciiAtext(code) ? emailAtext(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function schemeOrEmailAtext(code) {\n    return code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)\n      ? schemeInsideOrEmailAtext(code)\n      : emailAtext(code)\n  }\n  /** @type {State} */\n\n  function schemeInsideOrEmailAtext(code) {\n    if (code === 58) {\n      effects.consume(code)\n      return urlInside\n    }\n\n    if (\n      (code === 43 || code === 45 || code === 46 || asciiAlphanumeric(code)) &&\n      size++ < 32\n    ) {\n      effects.consume(code)\n      return schemeInsideOrEmailAtext\n    }\n\n    return emailAtext(code)\n  }\n  /** @type {State} */\n\n  function urlInside(code) {\n    if (code === 62) {\n      effects.exit('autolinkProtocol')\n      return end(code)\n    }\n\n    if (code === null || code === 32 || code === 60 || asciiControl(code)) {\n      return nok(code)\n    }\n\n    effects.consume(code)\n    return urlInside\n  }\n  /** @type {State} */\n\n  function emailAtext(code) {\n    if (code === 64) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (asciiAtext(code)) {\n      effects.consume(code)\n      return emailAtext\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function emailAtSignOrDot(code) {\n    return asciiAlphanumeric(code) ? emailLabel(code) : nok(code)\n  }\n  /** @type {State} */\n\n  function emailLabel(code) {\n    if (code === 46) {\n      effects.consume(code)\n      size = 0\n      return emailAtSignOrDot\n    }\n\n    if (code === 62) {\n      // Exit, then change the type.\n      effects.exit('autolinkProtocol').type = 'autolinkEmail'\n      return end(code)\n    }\n\n    return emailValue(code)\n  }\n  /** @type {State} */\n\n  function emailValue(code) {\n    if ((code === 45 || asciiAlphanumeric(code)) && size++ < 63) {\n      effects.consume(code)\n      return code === 45 ? emailValue : emailLabel\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    effects.enter('autolinkMarker')\n    effects.consume(code)\n    effects.exit('autolinkMarker')\n    effects.exit('autolink')\n    return ok\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n * @typedef {import('micromark-util-types').Code} Code\n */\nimport {factorySpace} from 'micromark-factory-space'\nimport {\n  asciiAlpha,\n  asciiAlphanumeric,\n  markdownLineEnding,\n  markdownLineEndingOrSpace,\n  markdownSpace\n} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const htmlText = {\n  name: 'htmlText',\n  tokenize: tokenizeHtmlText\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHtmlText(effects, ok, nok) {\n  const self = this\n  /** @type {NonNullable<Code>|undefined} */\n\n  let marker\n  /** @type {string} */\n\n  let buffer\n  /** @type {number} */\n\n  let index\n  /** @type {State} */\n\n  let returnState\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('htmlText')\n    effects.enter('htmlTextData')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (code === 33) {\n      effects.consume(code)\n      return declarationOpen\n    }\n\n    if (code === 47) {\n      effects.consume(code)\n      return tagCloseStart\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instruction\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function declarationOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentOpen\n    }\n\n    if (code === 91) {\n      effects.consume(code)\n      buffer = 'CDATA['\n      index = 0\n      return cdataOpen\n    }\n\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return declaration\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentOpen(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return commentStart\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function commentStart(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentStartDash\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function commentStartDash(code) {\n    if (code === null || code === 62) {\n      return nok(code)\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function comment(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 45) {\n      effects.consume(code)\n      return commentClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = comment\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return comment\n  }\n  /** @type {State} */\n\n  function commentClose(code) {\n    if (code === 45) {\n      effects.consume(code)\n      return end\n    }\n\n    return comment(code)\n  }\n  /** @type {State} */\n\n  function cdataOpen(code) {\n    if (code === buffer.charCodeAt(index++)) {\n      effects.consume(code)\n      return index === buffer.length ? cdata : cdataOpen\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function cdata(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = cdata\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return cdata\n  }\n  /** @type {State} */\n\n  function cdataClose(code) {\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function cdataEnd(code) {\n    if (code === 62) {\n      return end(code)\n    }\n\n    if (code === 93) {\n      effects.consume(code)\n      return cdataEnd\n    }\n\n    return cdata(code)\n  }\n  /** @type {State} */\n\n  function declaration(code) {\n    if (code === null || code === 62) {\n      return end(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = declaration\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return declaration\n  }\n  /** @type {State} */\n\n  function instruction(code) {\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (code === 63) {\n      effects.consume(code)\n      return instructionClose\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = instruction\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return instruction\n  }\n  /** @type {State} */\n\n  function instructionClose(code) {\n    return code === 62 ? end(code) : instruction(code)\n  }\n  /** @type {State} */\n\n  function tagCloseStart(code) {\n    if (asciiAlpha(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagClose(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagClose\n    }\n\n    return tagCloseBetween(code)\n  }\n  /** @type {State} */\n\n  function tagCloseBetween(code) {\n    if (markdownLineEnding(code)) {\n      returnState = tagCloseBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagCloseBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpen(code) {\n    if (code === 45 || asciiAlphanumeric(code)) {\n      effects.consume(code)\n      return tagOpen\n    }\n\n    if (code === 47 || code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenBetween(code) {\n    if (code === 47) {\n      effects.consume(code)\n      return end\n    }\n\n    if (code === 58 || code === 95 || asciiAlpha(code)) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenBetween\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenBetween\n    }\n\n    return end(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeName(code) {\n    if (\n      code === 45 ||\n      code === 46 ||\n      code === 58 ||\n      code === 95 ||\n      asciiAlphanumeric(code)\n    ) {\n      effects.consume(code)\n      return tagOpenAttributeName\n    }\n\n    return tagOpenAttributeNameAfter(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeNameAfter(code) {\n    if (code === 61) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeNameAfter\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeNameAfter\n    }\n\n    return tagOpenBetween(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueBefore(code) {\n    if (\n      code === null ||\n      code === 60 ||\n      code === 61 ||\n      code === 62 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 34 || code === 39) {\n      effects.consume(code)\n      marker = code\n      return tagOpenAttributeValueQuoted\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueBefore\n      return atLineEnding(code)\n    }\n\n    if (markdownSpace(code)) {\n      effects.consume(code)\n      return tagOpenAttributeValueBefore\n    }\n\n    effects.consume(code)\n    marker = undefined\n    return tagOpenAttributeValueUnquoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuoted(code) {\n    if (code === marker) {\n      effects.consume(code)\n      return tagOpenAttributeValueQuotedAfter\n    }\n\n    if (code === null) {\n      return nok(code)\n    }\n\n    if (markdownLineEnding(code)) {\n      returnState = tagOpenAttributeValueQuoted\n      return atLineEnding(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueQuoted\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueQuotedAfter(code) {\n    if (code === 62 || code === 47 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    return nok(code)\n  }\n  /** @type {State} */\n\n  function tagOpenAttributeValueUnquoted(code) {\n    if (\n      code === null ||\n      code === 34 ||\n      code === 39 ||\n      code === 60 ||\n      code === 61 ||\n      code === 96\n    ) {\n      return nok(code)\n    }\n\n    if (code === 62 || markdownLineEndingOrSpace(code)) {\n      return tagOpenBetween(code)\n    }\n\n    effects.consume(code)\n    return tagOpenAttributeValueUnquoted\n  } // We can’t have blank lines in content, so no need to worry about empty\n  // tokens.\n\n  /** @type {State} */\n\n  function atLineEnding(code) {\n    effects.exit('htmlTextData')\n    effects.enter('lineEnding')\n    effects.consume(code)\n    effects.exit('lineEnding')\n    return factorySpace(\n      effects,\n      afterPrefix,\n      'linePrefix',\n      self.parser.constructs.disable.null.includes('codeIndented')\n        ? undefined\n        : 4\n    )\n  }\n  /** @type {State} */\n\n  function afterPrefix(code) {\n    effects.enter('htmlTextData')\n    return returnState(code)\n  }\n  /** @type {State} */\n\n  function end(code) {\n    if (code === 62) {\n      effects.consume(code)\n      effects.exit('htmlTextData')\n      effects.exit('htmlText')\n      return ok\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {labelEnd} from './label-end.js'\n/** @type {Construct} */\n\nexport const labelStartLink = {\n  name: 'labelStartLink',\n  tokenize: tokenizeLabelStartLink,\n  resolveAll: labelEnd.resolveAll\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeLabelStartLink(effects, ok, nok) {\n  const self = this\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('labelLink')\n    effects.enter('labelMarker')\n    effects.consume(code)\n    effects.exit('labelMarker')\n    effects.exit('labelLink')\n    return after\n  }\n  /** @type {State} */\n\n  function after(code) {\n    /* To do: remove in the future once we’ve switched from\n     * `micromark-extension-footnote` to `micromark-extension-gfm-footnote`,\n     * which doesn’t need this */\n\n    /* Hidden footnotes hook. */\n\n    /* c8 ignore next 3 */\n    return code === 94 && '_hiddenFootnoteSupport' in self.parser.constructs\n      ? nok(code)\n      : ok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const hardBreakEscape = {\n  name: 'hardBreakEscape',\n  tokenize: tokenizeHardBreakEscape\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeHardBreakEscape(effects, ok, nok) {\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('hardBreakEscape')\n    effects.enter('escapeMarker')\n    effects.consume(code)\n    return open\n  }\n  /** @type {State} */\n\n  function open(code) {\n    if (markdownLineEnding(code)) {\n      effects.exit('escapeMarker')\n      effects.exit('hardBreakEscape')\n      return ok(code)\n    }\n\n    return nok(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Construct} Construct\n * @typedef {import('micromark-util-types').Resolver} Resolver\n * @typedef {import('micromark-util-types').Tokenizer} Tokenizer\n * @typedef {import('micromark-util-types').Previous} Previous\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').State} State\n */\nimport {markdownLineEnding} from 'micromark-util-character'\n\n/** @type {Construct} */\nexport const codeText = {\n  name: 'codeText',\n  tokenize: tokenizeCodeText,\n  resolve: resolveCodeText,\n  previous\n}\n/** @type {Resolver} */\n\nfunction resolveCodeText(events) {\n  let tailExitIndex = events.length - 4\n  let headEnterIndex = 3\n  /** @type {number} */\n\n  let index\n  /** @type {number|undefined} */\n\n  let enter // If we start and end with an EOL or a space.\n\n  if (\n    (events[headEnterIndex][1].type === 'lineEnding' ||\n      events[headEnterIndex][1].type === 'space') &&\n    (events[tailExitIndex][1].type === 'lineEnding' ||\n      events[tailExitIndex][1].type === 'space')\n  ) {\n    index = headEnterIndex // And we have data.\n\n    while (++index < tailExitIndex) {\n      if (events[index][1].type === 'codeTextData') {\n        // Then we have padding.\n        events[headEnterIndex][1].type = 'codeTextPadding'\n        events[tailExitIndex][1].type = 'codeTextPadding'\n        headEnterIndex += 2\n        tailExitIndex -= 2\n        break\n      }\n    }\n  } // Merge adjacent spaces and data.\n\n  index = headEnterIndex - 1\n  tailExitIndex++\n\n  while (++index <= tailExitIndex) {\n    if (enter === undefined) {\n      if (index !== tailExitIndex && events[index][1].type !== 'lineEnding') {\n        enter = index\n      }\n    } else if (\n      index === tailExitIndex ||\n      events[index][1].type === 'lineEnding'\n    ) {\n      events[enter][1].type = 'codeTextData'\n\n      if (index !== enter + 2) {\n        events[enter][1].end = events[index - 1][1].end\n        events.splice(enter + 2, index - enter - 2)\n        tailExitIndex -= index - enter - 2\n        index = enter + 2\n      }\n\n      enter = undefined\n    }\n  }\n\n  return events\n}\n/** @type {Previous} */\n\nfunction previous(code) {\n  // If there is a previous code, there will always be a tail.\n  return (\n    code !== 96 ||\n    this.events[this.events.length - 1][1].type === 'characterEscape'\n  )\n}\n/** @type {Tokenizer} */\n\nfunction tokenizeCodeText(effects, ok, nok) {\n  const self = this\n  let sizeOpen = 0\n  /** @type {number} */\n\n  let size\n  /** @type {Token} */\n\n  let token\n  return start\n  /** @type {State} */\n\n  function start(code) {\n    effects.enter('codeText')\n    effects.enter('codeTextSequence')\n    return openingSequence(code)\n  }\n  /** @type {State} */\n\n  function openingSequence(code) {\n    if (code === 96) {\n      effects.consume(code)\n      sizeOpen++\n      return openingSequence\n    }\n\n    effects.exit('codeTextSequence')\n    return gap(code)\n  }\n  /** @type {State} */\n\n  function gap(code) {\n    // EOF.\n    if (code === null) {\n      return nok(code)\n    } // Closing fence?\n    // Could also be data.\n\n    if (code === 96) {\n      token = effects.enter('codeTextSequence')\n      size = 0\n      return closingSequence(code)\n    } // Tabs don’t work, and virtual spaces don’t make sense.\n\n    if (code === 32) {\n      effects.enter('space')\n      effects.consume(code)\n      effects.exit('space')\n      return gap\n    }\n\n    if (markdownLineEnding(code)) {\n      effects.enter('lineEnding')\n      effects.consume(code)\n      effects.exit('lineEnding')\n      return gap\n    } // Data.\n\n    effects.enter('codeTextData')\n    return data(code)\n  } // In code.\n\n  /** @type {State} */\n\n  function data(code) {\n    if (\n      code === null ||\n      code === 32 ||\n      code === 96 ||\n      markdownLineEnding(code)\n    ) {\n      effects.exit('codeTextData')\n      return gap(code)\n    }\n\n    effects.consume(code)\n    return data\n  } // Closing fence.\n\n  /** @type {State} */\n\n  function closingSequence(code) {\n    // More.\n    if (code === 96) {\n      effects.consume(code)\n      size++\n      return closingSequence\n    } // Done!\n\n    if (size === sizeOpen) {\n      effects.exit('codeTextSequence')\n      effects.exit('codeText')\n      return ok(code)\n    } // More or less accents: mark as data.\n\n    token.type = 'codeTextData'\n    return data(code)\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Extension} Extension\n */\nimport {\n  attention,\n  autolink,\n  blockQuote,\n  characterEscape,\n  characterReference,\n  codeFenced,\n  codeIndented,\n  codeText,\n  definition,\n  hardBreakEscape,\n  headingAtx,\n  htmlFlow,\n  htmlText,\n  labelEnd,\n  labelStartImage,\n  labelStartLink,\n  lineEnding,\n  list,\n  setextUnderline,\n  thematicBreak\n} from 'micromark-core-commonmark'\nimport {resolver as resolveText} from './initialize/text.js'\n/** @type {Extension['document']} */\n\nexport const document = {\n  [42]: list,\n  [43]: list,\n  [45]: list,\n  [48]: list,\n  [49]: list,\n  [50]: list,\n  [51]: list,\n  [52]: list,\n  [53]: list,\n  [54]: list,\n  [55]: list,\n  [56]: list,\n  [57]: list,\n  [62]: blockQuote\n}\n/** @type {Extension['contentInitial']} */\n\nexport const contentInitial = {\n  [91]: definition\n}\n/** @type {Extension['flowInitial']} */\n\nexport const flowInitial = {\n  [-2]: codeIndented,\n  [-1]: codeIndented,\n  [32]: codeIndented\n}\n/** @type {Extension['flow']} */\n\nexport const flow = {\n  [35]: headingAtx,\n  [42]: thematicBreak,\n  [45]: [setextUnderline, thematicBreak],\n  [60]: htmlFlow,\n  [61]: setextUnderline,\n  [95]: thematicBreak,\n  [96]: codeFenced,\n  [126]: codeFenced\n}\n/** @type {Extension['string']} */\n\nexport const string = {\n  [38]: characterReference,\n  [92]: characterEscape\n}\n/** @type {Extension['text']} */\n\nexport const text = {\n  [-5]: lineEnding,\n  [-4]: lineEnding,\n  [-3]: lineEnding,\n  [33]: labelStartImage,\n  [38]: characterReference,\n  [42]: attention,\n  [60]: [autolink, htmlText],\n  [91]: labelStartLink,\n  [92]: [hardBreakEscape, characterEscape],\n  [93]: labelEnd,\n  [95]: attention,\n  [96]: codeText\n}\n/** @type {Extension['insideSpan']} */\n\nexport const insideSpan = {\n  null: [attention, resolveText]\n}\n/** @type {Extension['attentionMarkers']} */\n\nexport const attentionMarkers = {\n  null: [42, 95]\n}\n/** @type {Extension['disable']} */\n\nexport const disable = {\n  null: []\n}\n","/**\n * @typedef {import('micromark-util-types').InitialConstruct} InitialConstruct\n * @typedef {import('micromark-util-types').FullNormalizedExtension} FullNormalizedExtension\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').ParseContext} ParseContext\n * @typedef {import('micromark-util-types').Create} Create\n */\nimport {combineExtensions} from 'micromark-util-combine-extensions'\nimport {content} from './initialize/content.js'\nimport {document} from './initialize/document.js'\nimport {flow} from './initialize/flow.js'\nimport {text, string} from './initialize/text.js'\nimport {createTokenizer} from './create-tokenizer.js'\nimport * as defaultConstructs from './constructs.js'\n/**\n * @param {ParseOptions} [options]\n * @returns {ParseContext}\n */\n\nexport function parse(options = {}) {\n  /** @type {FullNormalizedExtension} */\n  // @ts-expect-error `defaultConstructs` is full, so the result will be too.\n  const constructs = combineExtensions(\n    // @ts-expect-error Same as above.\n    [defaultConstructs].concat(options.extensions || [])\n  )\n  /** @type {ParseContext} */\n\n  const parser = {\n    defined: [],\n    lazy: {},\n    constructs,\n    content: create(content),\n    document: create(document),\n    flow: create(flow),\n    string: create(string),\n    text: create(text)\n  }\n  return parser\n  /**\n   * @param {InitialConstruct} initial\n   */\n\n  function create(initial) {\n    return creator\n    /** @type {Create} */\n\n    function creator(from) {\n      return createTokenizer(parser, initial, from)\n    }\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Value} Value\n * @typedef {import('micromark-util-types').Chunk} Chunk\n * @typedef {import('micromark-util-types').Code} Code\n */\n\n/**\n * @callback Preprocessor\n * @param {Value} value\n * @param {Encoding} [encoding]\n * @param {boolean} [end=false]\n * @returns {Array<Chunk>}\n */\nconst search = /[\\0\\t\\n\\r]/g\n/**\n * @returns {Preprocessor}\n */\n\nexport function preprocess() {\n  let column = 1\n  let buffer = ''\n  /** @type {boolean|undefined} */\n\n  let start = true\n  /** @type {boolean|undefined} */\n\n  let atCarriageReturn\n  return preprocessor\n  /** @type {Preprocessor} */\n\n  function preprocessor(value, encoding, end) {\n    /** @type {Array<Chunk>} */\n    const chunks = []\n    /** @type {RegExpMatchArray|null} */\n\n    let match\n    /** @type {number} */\n\n    let next\n    /** @type {number} */\n\n    let startPosition\n    /** @type {number} */\n\n    let endPosition\n    /** @type {Code} */\n\n    let code // @ts-expect-error `Buffer` does allow an encoding.\n\n    value = buffer + value.toString(encoding)\n    startPosition = 0\n    buffer = ''\n\n    if (start) {\n      if (value.charCodeAt(0) === 65279) {\n        startPosition++\n      }\n\n      start = undefined\n    }\n\n    while (startPosition < value.length) {\n      search.lastIndex = startPosition\n      match = search.exec(value)\n      endPosition =\n        match && match.index !== undefined ? match.index : value.length\n      code = value.charCodeAt(endPosition)\n\n      if (!match) {\n        buffer = value.slice(startPosition)\n        break\n      }\n\n      if (code === 10 && startPosition === endPosition && atCarriageReturn) {\n        chunks.push(-3)\n        atCarriageReturn = undefined\n      } else {\n        if (atCarriageReturn) {\n          chunks.push(-5)\n          atCarriageReturn = undefined\n        }\n\n        if (startPosition < endPosition) {\n          chunks.push(value.slice(startPosition, endPosition))\n          column += endPosition - startPosition\n        }\n\n        switch (code) {\n          case 0: {\n            chunks.push(65533)\n            column++\n            break\n          }\n\n          case 9: {\n            next = Math.ceil(column / 4) * 4\n            chunks.push(-2)\n\n            while (column++ < next) chunks.push(-1)\n\n            break\n          }\n\n          case 10: {\n            chunks.push(-4)\n            column = 1\n            break\n          }\n\n          default: {\n            atCarriageReturn = true\n            column = 1\n          }\n        }\n      }\n\n      startPosition = endPosition + 1\n    }\n\n    if (end) {\n      if (atCarriageReturn) chunks.push(-5)\n      if (buffer) chunks.push(buffer)\n      chunks.push(null)\n    }\n\n    return chunks\n  }\n}\n","/**\n * Turn the number (in string form as either hexa- or plain decimal) coming from\n * a numeric character reference into a character.\n *\n * @param {string} value\n *   Value to decode.\n * @param {number} base\n *   Numeric base.\n * @returns {string}\n */\nexport function decodeNumericCharacterReference(value, base) {\n  const code = Number.parseInt(value, base)\n\n  if (\n    // C0 except for HT, LF, FF, CR, space\n    code < 9 ||\n    code === 11 ||\n    (code > 13 && code < 32) || // Control character (DEL) of the basic block and C1 controls.\n    (code > 126 && code < 160) || // Lone high surrogates and low surrogates.\n    (code > 55295 && code < 57344) || // Noncharacters.\n    (code > 64975 && code < 65008) ||\n    (code & 65535) === 65535 ||\n    (code & 65535) === 65534 || // Out of range\n    code > 1114111\n  ) {\n    return '\\uFFFD'\n  }\n\n  return String.fromCharCode(code)\n}\n","import {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nconst characterEscapeOrReference =\n  /\\\\([!-/:-@[-`{-~])|&(#(?:\\d{1,7}|x[\\da-f]{1,6})|[\\da-z]{1,31});/gi\n/**\n * Utility to decode markdown strings (which occur in places such as fenced\n * code info strings, destinations, labels, and titles).\n * The “string” content type allows character escapes and -references.\n * This decodes those.\n *\n * @param {string} value\n * @returns {string}\n */\n\nexport function decodeString(value) {\n  return value.replace(characterEscapeOrReference, decode)\n}\n/**\n * @param {string} $0\n * @param {string} $1\n * @param {string} $2\n * @returns {string}\n */\n\nfunction decode($0, $1, $2) {\n  if ($1) {\n    // Escape.\n    return $1\n  } // Reference.\n\n  const head = $2.charCodeAt(0)\n\n  if (head === 35) {\n    const head = $2.charCodeAt(1)\n    const hex = head === 120 || head === 88\n    return decodeNumericCharacterReference($2.slice(hex ? 2 : 1), hex ? 16 : 10)\n  }\n\n  return decodeNamedCharacterReference($2) || $0\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Point} Point\n * @typedef {import('unist').Position} Position\n */\n\n/**\n * @typedef NodeLike\n * @property {string} type\n * @property {PositionLike | null | undefined} [position]\n *\n * @typedef PositionLike\n * @property {PointLike | null | undefined} [start]\n * @property {PointLike | null | undefined} [end]\n *\n * @typedef PointLike\n * @property {number | null | undefined} [line]\n * @property {number | null | undefined} [column]\n * @property {number | null | undefined} [offset]\n */\n\n/**\n * Serialize the positional info of a point, position (start and end points),\n * or node.\n *\n * @param {Node | NodeLike | Position | PositionLike | Point | PointLike | null | undefined} [value]\n *   Node, position, or point.\n * @returns {string}\n *   Pretty printed positional info of a node (`string`).\n *\n *   In the format of a range `ls:cs-le:ce` (when given `node` or `position`)\n *   or a point `l:c` (when given `point`), where `l` stands for line, `c` for\n *   column, `s` for `start`, and `e` for end.\n *   An empty string (`''`) is returned if the given value is neither `node`,\n *   `position`, nor `point`.\n */\nexport function stringifyPosition(value) {\n  // Nothing.\n  if (!value || typeof value !== 'object') {\n    return ''\n  }\n\n  // Node.\n  if ('position' in value || 'type' in value) {\n    return position(value.position)\n  }\n\n  // Position.\n  if ('start' in value || 'end' in value) {\n    return position(value)\n  }\n\n  // Point.\n  if ('line' in value || 'column' in value) {\n    return point(value)\n  }\n\n  // ?\n  return ''\n}\n\n/**\n * @param {Point | PointLike | null | undefined} point\n * @returns {string}\n */\nfunction point(point) {\n  return index(point && point.line) + ':' + index(point && point.column)\n}\n\n/**\n * @param {Position | PositionLike | null | undefined} pos\n * @returns {string}\n */\nfunction position(pos) {\n  return point(pos && pos.start) + '-' + point(pos && pos.end)\n}\n\n/**\n * @param {number | null | undefined} value\n * @returns {number}\n */\nfunction index(value) {\n  return value && typeof value === 'number' ? value : 1\n}\n","/**\n * @typedef {import('micromark-util-types').Encoding} Encoding\n * @typedef {import('micromark-util-types').Event} Event\n * @typedef {import('micromark-util-types').ParseOptions} ParseOptions\n * @typedef {import('micromark-util-types').Token} Token\n * @typedef {import('micromark-util-types').TokenizeContext} TokenizeContext\n * @typedef {import('micromark-util-types').Value} Value\n *\n * @typedef {import('unist').Parent} UnistParent\n * @typedef {import('unist').Point} Point\n *\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('mdast').StaticPhrasingContent} StaticPhrasingContent\n * @typedef {import('mdast').Content} Content\n * @typedef {import('mdast').Break} Break\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('mdast').Code} Code\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('mdast').HTML} HTML\n * @typedef {import('mdast').Image} Image\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('mdast').Link} Link\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('mdast').List} List\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('mdast').Text} Text\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('mdast').ReferenceType} ReferenceType\n * @typedef {import('../index.js').CompileData} CompileData\n */\n\n/**\n * @typedef {Root | Content} Node\n * @typedef {Extract<Node, UnistParent>} Parent\n *\n * @typedef {Omit<UnistParent, 'type' | 'children'> & {type: 'fragment', children: Array<PhrasingContent>}} Fragment\n */\n\n/**\n * @callback Transform\n *   Extra transform, to change the AST afterwards.\n * @param {Root} tree\n *   Tree to transform.\n * @returns {Root | undefined | null | void}\n *   New tree or nothing (in which case the current tree is used).\n *\n * @callback Handle\n *   Handle a token.\n * @param {CompileContext} this\n *   Context.\n * @param {Token} token\n *   Current token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {Record<string, Handle>} Handles\n *   Token types mapping to handles\n *\n * @callback OnEnterError\n *   Handle the case where the `right` token is open, but it is closed (by the\n *   `left` token) or because we reached the end of the document.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token | undefined} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @callback OnExitError\n *   Handle the case where the `right` token is open but it is closed by\n *   exiting the `left` token.\n * @param {Omit<CompileContext, 'sliceSerialize'>} this\n *   Context.\n * @param {Token} left\n *   Left token.\n * @param {Token} right\n *   Right token.\n * @returns {void}\n *   Nothing.\n *\n * @typedef {[Token, OnEnterError | undefined]} TokenTuple\n *   Open token on the stack, with an optional error handler for when\n *   that token isn’t closed properly.\n */\n\n/**\n * @typedef Config\n *   Configuration.\n *\n *   We have our defaults, but extensions will add more.\n * @property {Array<string>} canContainEols\n *   Token types where line endings are used.\n * @property {Handles} enter\n *   Opening handles.\n * @property {Handles} exit\n *   Closing handles.\n * @property {Array<Transform>} transforms\n *   Tree transforms.\n *\n * @typedef {Partial<Config>} Extension\n *   Change how markdown tokens from micromark are turned into mdast.\n *\n * @typedef CompileContext\n *   mdast compiler context.\n * @property {Array<Node | Fragment>} stack\n *   Stack of nodes.\n * @property {Array<TokenTuple>} tokenStack\n *   Stack of tokens.\n * @property {<Key extends keyof CompileData>(key: Key) => CompileData[Key]} getData\n *   Get data from the key/value store.\n * @property {<Key extends keyof CompileData>(key: Key, value?: CompileData[Key]) => void} setData\n *   Set data into the key/value store.\n * @property {(this: CompileContext) => void} buffer\n *   Capture some of the output data.\n * @property {(this: CompileContext) => string} resume\n *   Stop capturing and access the output data.\n * @property {<Kind extends Node>(this: CompileContext, node: Kind, token: Token, onError?: OnEnterError) => Kind} enter\n *   Enter a token.\n * @property {(this: CompileContext, token: Token, onError?: OnExitError) => Node} exit\n *   Exit a token.\n * @property {TokenizeContext['sliceSerialize']} sliceSerialize\n *   Get the string value of a token.\n * @property {Config} config\n *   Configuration.\n *\n * @typedef FromMarkdownOptions\n *   Configuration for how to build mdast.\n * @property {Array<Extension | Array<Extension>> | null | undefined} [mdastExtensions]\n *   Extensions for this utility to change how tokens are turned into a tree.\n *\n * @typedef {ParseOptions & FromMarkdownOptions} Options\n *   Configuration.\n */\n\n// To do: micromark: create a registry of tokens?\n// To do: next major: don’t return given `Node` from `enter`.\n// To do: next major: remove setter/getter.\n\nimport {toString} from 'mdast-util-to-string'\nimport {parse} from 'micromark/lib/parse.js'\nimport {preprocess} from 'micromark/lib/preprocess.js'\nimport {postprocess} from 'micromark/lib/postprocess.js'\nimport {decodeNumericCharacterReference} from 'micromark-util-decode-numeric-character-reference'\nimport {decodeString} from 'micromark-util-decode-string'\nimport {normalizeIdentifier} from 'micromark-util-normalize-identifier'\nimport {decodeNamedCharacterReference} from 'decode-named-character-reference'\nimport {stringifyPosition} from 'unist-util-stringify-position'\nconst own = {}.hasOwnProperty\n\n/**\n * @param value\n *   Markdown to parse.\n * @param encoding\n *   Character encoding for when `value` is `Buffer`.\n * @param options\n *   Configuration.\n * @returns\n *   mdast tree.\n */\nexport const fromMarkdown =\n  /**\n   * @type {(\n   *   ((value: Value, encoding: Encoding, options?: Options | null | undefined) => Root) &\n   *   ((value: Value, options?: Options | null | undefined) => Root)\n   * )}\n   */\n\n  /**\n   * @param {Value} value\n   * @param {Encoding | Options | null | undefined} [encoding]\n   * @param {Options | null | undefined} [options]\n   * @returns {Root}\n   */\n  function (value, encoding, options) {\n    if (typeof encoding !== 'string') {\n      options = encoding\n      encoding = undefined\n    }\n    return compiler(options)(\n      postprocess(\n        // @ts-expect-error: micromark types need to accept `null`.\n        parse(options).document().write(preprocess()(value, encoding, true))\n      )\n    )\n  }\n\n/**\n * Note this compiler only understand complete buffering, not streaming.\n *\n * @param {Options | null | undefined} [options]\n */\nfunction compiler(options) {\n  /** @type {Config} */\n  const config = {\n    transforms: [],\n    canContainEols: ['emphasis', 'fragment', 'heading', 'paragraph', 'strong'],\n    enter: {\n      autolink: opener(link),\n      autolinkProtocol: onenterdata,\n      autolinkEmail: onenterdata,\n      atxHeading: opener(heading),\n      blockQuote: opener(blockQuote),\n      characterEscape: onenterdata,\n      characterReference: onenterdata,\n      codeFenced: opener(codeFlow),\n      codeFencedFenceInfo: buffer,\n      codeFencedFenceMeta: buffer,\n      codeIndented: opener(codeFlow, buffer),\n      codeText: opener(codeText, buffer),\n      codeTextData: onenterdata,\n      data: onenterdata,\n      codeFlowValue: onenterdata,\n      definition: opener(definition),\n      definitionDestinationString: buffer,\n      definitionLabelString: buffer,\n      definitionTitleString: buffer,\n      emphasis: opener(emphasis),\n      hardBreakEscape: opener(hardBreak),\n      hardBreakTrailing: opener(hardBreak),\n      htmlFlow: opener(html, buffer),\n      htmlFlowData: onenterdata,\n      htmlText: opener(html, buffer),\n      htmlTextData: onenterdata,\n      image: opener(image),\n      label: buffer,\n      link: opener(link),\n      listItem: opener(listItem),\n      listItemValue: onenterlistitemvalue,\n      listOrdered: opener(list, onenterlistordered),\n      listUnordered: opener(list),\n      paragraph: opener(paragraph),\n      reference: onenterreference,\n      referenceString: buffer,\n      resourceDestinationString: buffer,\n      resourceTitleString: buffer,\n      setextHeading: opener(heading),\n      strong: opener(strong),\n      thematicBreak: opener(thematicBreak)\n    },\n    exit: {\n      atxHeading: closer(),\n      atxHeadingSequence: onexitatxheadingsequence,\n      autolink: closer(),\n      autolinkEmail: onexitautolinkemail,\n      autolinkProtocol: onexitautolinkprotocol,\n      blockQuote: closer(),\n      characterEscapeValue: onexitdata,\n      characterReferenceMarkerHexadecimal: onexitcharacterreferencemarker,\n      characterReferenceMarkerNumeric: onexitcharacterreferencemarker,\n      characterReferenceValue: onexitcharacterreferencevalue,\n      codeFenced: closer(onexitcodefenced),\n      codeFencedFence: onexitcodefencedfence,\n      codeFencedFenceInfo: onexitcodefencedfenceinfo,\n      codeFencedFenceMeta: onexitcodefencedfencemeta,\n      codeFlowValue: onexitdata,\n      codeIndented: closer(onexitcodeindented),\n      codeText: closer(onexitcodetext),\n      codeTextData: onexitdata,\n      data: onexitdata,\n      definition: closer(),\n      definitionDestinationString: onexitdefinitiondestinationstring,\n      definitionLabelString: onexitdefinitionlabelstring,\n      definitionTitleString: onexitdefinitiontitlestring,\n      emphasis: closer(),\n      hardBreakEscape: closer(onexithardbreak),\n      hardBreakTrailing: closer(onexithardbreak),\n      htmlFlow: closer(onexithtmlflow),\n      htmlFlowData: onexitdata,\n      htmlText: closer(onexithtmltext),\n      htmlTextData: onexitdata,\n      image: closer(onexitimage),\n      label: onexitlabel,\n      labelText: onexitlabeltext,\n      lineEnding: onexitlineending,\n      link: closer(onexitlink),\n      listItem: closer(),\n      listOrdered: closer(),\n      listUnordered: closer(),\n      paragraph: closer(),\n      referenceString: onexitreferencestring,\n      resourceDestinationString: onexitresourcedestinationstring,\n      resourceTitleString: onexitresourcetitlestring,\n      resource: onexitresource,\n      setextHeading: closer(onexitsetextheading),\n      setextHeadingLineSequence: onexitsetextheadinglinesequence,\n      setextHeadingText: onexitsetextheadingtext,\n      strong: closer(),\n      thematicBreak: closer()\n    }\n  }\n  configure(config, (options || {}).mdastExtensions || [])\n\n  /** @type {CompileData} */\n  const data = {}\n  return compile\n\n  /**\n   * Turn micromark events into an mdast tree.\n   *\n   * @param {Array<Event>} events\n   *   Events.\n   * @returns {Root}\n   *   mdast tree.\n   */\n  function compile(events) {\n    /** @type {Root} */\n    let tree = {\n      type: 'root',\n      children: []\n    }\n    /** @type {Omit<CompileContext, 'sliceSerialize'>} */\n    const context = {\n      stack: [tree],\n      tokenStack: [],\n      config,\n      enter,\n      exit,\n      buffer,\n      resume,\n      setData,\n      getData\n    }\n    /** @type {Array<number>} */\n    const listStack = []\n    let index = -1\n    while (++index < events.length) {\n      // We preprocess lists to add `listItem` tokens, and to infer whether\n      // items the list itself are spread out.\n      if (\n        events[index][1].type === 'listOrdered' ||\n        events[index][1].type === 'listUnordered'\n      ) {\n        if (events[index][0] === 'enter') {\n          listStack.push(index)\n        } else {\n          const tail = listStack.pop()\n          index = prepareList(events, tail, index)\n        }\n      }\n    }\n    index = -1\n    while (++index < events.length) {\n      const handler = config[events[index][0]]\n      if (own.call(handler, events[index][1].type)) {\n        handler[events[index][1].type].call(\n          Object.assign(\n            {\n              sliceSerialize: events[index][2].sliceSerialize\n            },\n            context\n          ),\n          events[index][1]\n        )\n      }\n    }\n\n    // Handle tokens still being open.\n    if (context.tokenStack.length > 0) {\n      const tail = context.tokenStack[context.tokenStack.length - 1]\n      const handler = tail[1] || defaultOnError\n      handler.call(context, undefined, tail[0])\n    }\n\n    // Figure out `root` position.\n    tree.position = {\n      start: point(\n        events.length > 0\n          ? events[0][1].start\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      ),\n      end: point(\n        events.length > 0\n          ? events[events.length - 2][1].end\n          : {\n              line: 1,\n              column: 1,\n              offset: 0\n            }\n      )\n    }\n\n    // Call transforms.\n    index = -1\n    while (++index < config.transforms.length) {\n      tree = config.transforms[index](tree) || tree\n    }\n    return tree\n  }\n\n  /**\n   * @param {Array<Event>} events\n   * @param {number} start\n   * @param {number} length\n   * @returns {number}\n   */\n  function prepareList(events, start, length) {\n    let index = start - 1\n    let containerBalance = -1\n    let listSpread = false\n    /** @type {Token | undefined} */\n    let listItem\n    /** @type {number | undefined} */\n    let lineIndex\n    /** @type {number | undefined} */\n    let firstBlankLineIndex\n    /** @type {boolean | undefined} */\n    let atMarker\n    while (++index <= length) {\n      const event = events[index]\n      if (\n        event[1].type === 'listUnordered' ||\n        event[1].type === 'listOrdered' ||\n        event[1].type === 'blockQuote'\n      ) {\n        if (event[0] === 'enter') {\n          containerBalance++\n        } else {\n          containerBalance--\n        }\n        atMarker = undefined\n      } else if (event[1].type === 'lineEndingBlank') {\n        if (event[0] === 'enter') {\n          if (\n            listItem &&\n            !atMarker &&\n            !containerBalance &&\n            !firstBlankLineIndex\n          ) {\n            firstBlankLineIndex = index\n          }\n          atMarker = undefined\n        }\n      } else if (\n        event[1].type === 'linePrefix' ||\n        event[1].type === 'listItemValue' ||\n        event[1].type === 'listItemMarker' ||\n        event[1].type === 'listItemPrefix' ||\n        event[1].type === 'listItemPrefixWhitespace'\n      ) {\n        // Empty.\n      } else {\n        atMarker = undefined\n      }\n      if (\n        (!containerBalance &&\n          event[0] === 'enter' &&\n          event[1].type === 'listItemPrefix') ||\n        (containerBalance === -1 &&\n          event[0] === 'exit' &&\n          (event[1].type === 'listUnordered' ||\n            event[1].type === 'listOrdered'))\n      ) {\n        if (listItem) {\n          let tailIndex = index\n          lineIndex = undefined\n          while (tailIndex--) {\n            const tailEvent = events[tailIndex]\n            if (\n              tailEvent[1].type === 'lineEnding' ||\n              tailEvent[1].type === 'lineEndingBlank'\n            ) {\n              if (tailEvent[0] === 'exit') continue\n              if (lineIndex) {\n                events[lineIndex][1].type = 'lineEndingBlank'\n                listSpread = true\n              }\n              tailEvent[1].type = 'lineEnding'\n              lineIndex = tailIndex\n            } else if (\n              tailEvent[1].type === 'linePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefix' ||\n              tailEvent[1].type === 'blockQuotePrefixWhitespace' ||\n              tailEvent[1].type === 'blockQuoteMarker' ||\n              tailEvent[1].type === 'listItemIndent'\n            ) {\n              // Empty\n            } else {\n              break\n            }\n          }\n          if (\n            firstBlankLineIndex &&\n            (!lineIndex || firstBlankLineIndex < lineIndex)\n          ) {\n            // @ts-expect-error Patched.\n            listItem._spread = true\n          }\n\n          // Fix position.\n          listItem.end = Object.assign(\n            {},\n            lineIndex ? events[lineIndex][1].start : event[1].end\n          )\n          events.splice(lineIndex || index, 0, ['exit', listItem, event[2]])\n          index++\n          length++\n        }\n\n        // Create a new list item.\n        if (event[1].type === 'listItemPrefix') {\n          listItem = {\n            type: 'listItem',\n            // @ts-expect-error Patched\n            _spread: false,\n            start: Object.assign({}, event[1].start)\n          }\n          // @ts-expect-error: `listItem` is most definitely defined, TS...\n          events.splice(index, 0, ['enter', listItem, event[2]])\n          index++\n          length++\n          firstBlankLineIndex = undefined\n          atMarker = true\n        }\n      }\n    }\n\n    // @ts-expect-error Patched.\n    events[start][1]._spread = listSpread\n    return length\n  }\n\n  /**\n   * Set data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @param {CompileData[Key]} [value]\n   *   New value.\n   * @returns {void}\n   *   Nothing.\n   */\n  function setData(key, value) {\n    data[key] = value\n  }\n\n  /**\n   * Get data.\n   *\n   * @template {keyof CompileData} Key\n   *   Field type.\n   * @param {Key} key\n   *   Key of field.\n   * @returns {CompileData[Key]}\n   *   Value.\n   */\n  function getData(key) {\n    return data[key]\n  }\n\n  /**\n   * Create an opener handle.\n   *\n   * @param {(token: Token) => Node} create\n   *   Create a node.\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function opener(create, and) {\n    return open\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function open(token) {\n      enter.call(this, create(token), token)\n      if (and) and.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {void}\n   */\n  function buffer() {\n    this.stack.push({\n      type: 'fragment',\n      children: []\n    })\n  }\n\n  /**\n   * @template {Node} Kind\n   *   Node type.\n   * @this {CompileContext}\n   *   Context.\n   * @param {Kind} node\n   *   Node to enter.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnEnterError | undefined} [errorHandler]\n   *   Handle the case where this token is open, but it is closed by something else.\n   * @returns {Kind}\n   *   The given node.\n   */\n  function enter(node, token, errorHandler) {\n    const parent = this.stack[this.stack.length - 1]\n    // @ts-expect-error: Assume `Node` can exist as a child of `parent`.\n    parent.children.push(node)\n    this.stack.push(node)\n    this.tokenStack.push([token, errorHandler])\n    // @ts-expect-error: `end` will be patched later.\n    node.position = {\n      start: point(token.start)\n    }\n    return node\n  }\n\n  /**\n   * Create a closer handle.\n   *\n   * @param {Handle} [and]\n   *   Optional function to also run.\n   * @returns {Handle}\n   *   Handle.\n   */\n  function closer(and) {\n    return close\n\n    /**\n     * @this {CompileContext}\n     * @param {Token} token\n     * @returns {void}\n     */\n    function close(token) {\n      if (and) and.call(this, token)\n      exit.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   *   Context.\n   * @param {Token} token\n   *   Corresponding token.\n   * @param {OnExitError | undefined} [onExitError]\n   *   Handle the case where another token is open.\n   * @returns {Node}\n   *   The closed node.\n   */\n  function exit(token, onExitError) {\n    const node = this.stack.pop()\n    const open = this.tokenStack.pop()\n    if (!open) {\n      throw new Error(\n        'Cannot close `' +\n          token.type +\n          '` (' +\n          stringifyPosition({\n            start: token.start,\n            end: token.end\n          }) +\n          '): it’s not open'\n      )\n    } else if (open[0].type !== token.type) {\n      if (onExitError) {\n        onExitError.call(this, token, open[0])\n      } else {\n        const handler = open[1] || defaultOnError\n        handler.call(this, token, open[0])\n      }\n    }\n    node.position.end = point(token.end)\n    return node\n  }\n\n  /**\n   * @this {CompileContext}\n   * @returns {string}\n   */\n  function resume() {\n    return toString(this.stack.pop())\n  }\n\n  //\n  // Handlers.\n  //\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistordered() {\n    setData('expectingFirstListItemValue', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onenterlistitemvalue(token) {\n    if (getData('expectingFirstListItemValue')) {\n      const ancestor = this.stack[this.stack.length - 2]\n      ancestor.start = Number.parseInt(this.sliceSerialize(token), 10)\n      setData('expectingFirstListItemValue')\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfenceinfo() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.lang = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfencemeta() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.meta = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefencedfence() {\n    // Exit if this is the closing fence.\n    if (getData('flowCodeInside')) return\n    this.buffer()\n    setData('flowCodeInside', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodefenced() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/^(\\r?\\n|\\r)|(\\r?\\n|\\r)$/g, '')\n    setData('flowCodeInside')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcodeindented() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data.replace(/(\\r?\\n|\\r)$/g, '')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitionlabelstring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.label = label\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiontitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitdefinitiondestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitatxheadingsequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    if (!node.depth) {\n      const depth = this.sliceSerialize(token).length\n      node.depth = depth\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadingtext() {\n    setData('setextHeadingSlurpLineEnding', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheadinglinesequence(token) {\n    const node = this.stack[this.stack.length - 1]\n    node.depth = this.sliceSerialize(token).charCodeAt(0) === 61 ? 1 : 2\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitsetextheading() {\n    setData('setextHeadingSlurpLineEnding')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterdata(token) {\n    const node = this.stack[this.stack.length - 1]\n    let tail = node.children[node.children.length - 1]\n    if (!tail || tail.type !== 'text') {\n      // Add a new text node.\n      tail = text()\n      // @ts-expect-error: we’ll add `end` later.\n      tail.position = {\n        start: point(token.start)\n      }\n      // @ts-expect-error: Assume `parent` accepts `text`.\n      node.children.push(tail)\n    }\n    this.stack.push(tail)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitdata(token) {\n    const tail = this.stack.pop()\n    tail.value += this.sliceSerialize(token)\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlineending(token) {\n    const context = this.stack[this.stack.length - 1]\n    // If we’re at a hard break, include the line ending in there.\n    if (getData('atHardBreak')) {\n      const tail = context.children[context.children.length - 1]\n      tail.position.end = point(token.end)\n      setData('atHardBreak')\n      return\n    }\n    if (\n      !getData('setextHeadingSlurpLineEnding') &&\n      config.canContainEols.includes(context.type)\n    ) {\n      onenterdata.call(this, token)\n      onexitdata.call(this, token)\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithardbreak() {\n    setData('atHardBreak', true)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmlflow() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexithtmltext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcodetext() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.value = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlink() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitimage() {\n    const node = this.stack[this.stack.length - 1]\n    // Note: there are also `identifier` and `label` fields on this link node!\n    // These are used / cleaned here.\n\n    // To do: clean.\n    if (getData('inReference')) {\n      /** @type {ReferenceType} */\n      const referenceType = getData('referenceType') || 'shortcut'\n      node.type += 'Reference'\n      // @ts-expect-error: mutate.\n      node.referenceType = referenceType\n      // @ts-expect-error: mutate.\n      delete node.url\n      delete node.title\n    } else {\n      // @ts-expect-error: mutate.\n      delete node.identifier\n      // @ts-expect-error: mutate.\n      delete node.label\n    }\n    setData('referenceType')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabeltext(token) {\n    const string = this.sliceSerialize(token)\n    const ancestor = this.stack[this.stack.length - 2]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    ancestor.label = decodeString(string)\n    // @ts-expect-error: same as above.\n    ancestor.identifier = normalizeIdentifier(string).toLowerCase()\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitlabel() {\n    const fragment = this.stack[this.stack.length - 1]\n    const value = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // Assume a reference.\n    setData('inReference', true)\n    if (node.type === 'link') {\n      /** @type {Array<StaticPhrasingContent>} */\n      // @ts-expect-error: Assume static phrasing content.\n      const children = fragment.children\n      node.children = children\n    } else {\n      node.alt = value\n    }\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcedestinationstring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.url = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresourcetitlestring() {\n    const data = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    node.title = data\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitresource() {\n    setData('inReference')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onenterreference() {\n    setData('referenceType', 'collapsed')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitreferencestring(token) {\n    const label = this.resume()\n    const node = this.stack[this.stack.length - 1]\n    // @ts-expect-error: stash this on the node, as it might become a reference\n    // later.\n    node.label = label\n    // @ts-expect-error: same as above.\n    node.identifier = normalizeIdentifier(\n      this.sliceSerialize(token)\n    ).toLowerCase()\n    setData('referenceType', 'full')\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n\n  function onexitcharacterreferencemarker(token) {\n    setData('characterReferenceType', token.type)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitcharacterreferencevalue(token) {\n    const data = this.sliceSerialize(token)\n    const type = getData('characterReferenceType')\n    /** @type {string} */\n    let value\n    if (type) {\n      value = decodeNumericCharacterReference(\n        data,\n        type === 'characterReferenceMarkerNumeric' ? 10 : 16\n      )\n      setData('characterReferenceType')\n    } else {\n      const result = decodeNamedCharacterReference(data)\n      value = result\n    }\n    const tail = this.stack.pop()\n    tail.value += value\n    tail.position.end = point(token.end)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkprotocol(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = this.sliceSerialize(token)\n  }\n\n  /**\n   * @this {CompileContext}\n   * @type {Handle}\n   */\n  function onexitautolinkemail(token) {\n    onexitdata.call(this, token)\n    const node = this.stack[this.stack.length - 1]\n    node.url = 'mailto:' + this.sliceSerialize(token)\n  }\n\n  //\n  // Creaters.\n  //\n\n  /** @returns {Blockquote} */\n  function blockQuote() {\n    return {\n      type: 'blockquote',\n      children: []\n    }\n  }\n\n  /** @returns {Code} */\n  function codeFlow() {\n    return {\n      type: 'code',\n      lang: null,\n      meta: null,\n      value: ''\n    }\n  }\n\n  /** @returns {InlineCode} */\n  function codeText() {\n    return {\n      type: 'inlineCode',\n      value: ''\n    }\n  }\n\n  /** @returns {Definition} */\n  function definition() {\n    return {\n      type: 'definition',\n      identifier: '',\n      label: null,\n      title: null,\n      url: ''\n    }\n  }\n\n  /** @returns {Emphasis} */\n  function emphasis() {\n    return {\n      type: 'emphasis',\n      children: []\n    }\n  }\n\n  /** @returns {Heading} */\n  function heading() {\n    // @ts-expect-error `depth` will be set later.\n    return {\n      type: 'heading',\n      depth: undefined,\n      children: []\n    }\n  }\n\n  /** @returns {Break} */\n  function hardBreak() {\n    return {\n      type: 'break'\n    }\n  }\n\n  /** @returns {HTML} */\n  function html() {\n    return {\n      type: 'html',\n      value: ''\n    }\n  }\n\n  /** @returns {Image} */\n  function image() {\n    return {\n      type: 'image',\n      title: null,\n      url: '',\n      alt: null\n    }\n  }\n\n  /** @returns {Link} */\n  function link() {\n    return {\n      type: 'link',\n      title: null,\n      url: '',\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {List}\n   */\n  function list(token) {\n    return {\n      type: 'list',\n      ordered: token.type === 'listOrdered',\n      start: null,\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      children: []\n    }\n  }\n\n  /**\n   * @param {Token} token\n   * @returns {ListItem}\n   */\n  function listItem(token) {\n    return {\n      type: 'listItem',\n      // @ts-expect-error Patched.\n      spread: token._spread,\n      checked: null,\n      children: []\n    }\n  }\n\n  /** @returns {Paragraph} */\n  function paragraph() {\n    return {\n      type: 'paragraph',\n      children: []\n    }\n  }\n\n  /** @returns {Strong} */\n  function strong() {\n    return {\n      type: 'strong',\n      children: []\n    }\n  }\n\n  /** @returns {Text} */\n  function text() {\n    return {\n      type: 'text',\n      value: ''\n    }\n  }\n\n  /** @returns {ThematicBreak} */\n  function thematicBreak() {\n    return {\n      type: 'thematicBreak'\n    }\n  }\n}\n\n/**\n * Copy a point-like value.\n *\n * @param {Point} d\n *   Point-like value.\n * @returns {Point}\n *   unist point.\n */\nfunction point(d) {\n  return {\n    line: d.line,\n    column: d.column,\n    offset: d.offset\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Array<Extension | Array<Extension>>} extensions\n * @returns {void}\n */\nfunction configure(combined, extensions) {\n  let index = -1\n  while (++index < extensions.length) {\n    const value = extensions[index]\n    if (Array.isArray(value)) {\n      configure(combined, value)\n    } else {\n      extension(combined, value)\n    }\n  }\n}\n\n/**\n * @param {Config} combined\n * @param {Extension} extension\n * @returns {void}\n */\nfunction extension(combined, extension) {\n  /** @type {keyof Extension} */\n  let key\n  for (key in extension) {\n    if (own.call(extension, key)) {\n      if (key === 'canContainEols') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'transforms') {\n        const right = extension[key]\n        if (right) {\n          combined[key].push(...right)\n        }\n      } else if (key === 'enter' || key === 'exit') {\n        const right = extension[key]\n        if (right) {\n          Object.assign(combined[key], right)\n        }\n      }\n    }\n  }\n}\n\n/** @type {OnEnterError} */\nfunction defaultOnError(left, right) {\n  if (left) {\n    throw new Error(\n      'Cannot close `' +\n        left.type +\n        '` (' +\n        stringifyPosition({\n          start: left.start,\n          end: left.end\n        }) +\n        '): a different token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is open'\n    )\n  } else {\n    throw new Error(\n      'Cannot close document, a token (`' +\n        right.type +\n        '`, ' +\n        stringifyPosition({\n          start: right.start,\n          end: right.end\n        }) +\n        ') is still open'\n    )\n  }\n}\n","/**\n * @typedef {import('micromark-util-types').Event} Event\n */\nimport {subtokenize} from 'micromark-util-subtokenize'\n/**\n * @param {Array<Event>} events\n * @returns {Array<Event>}\n */\n\nexport function postprocess(events) {\n  while (!subtokenize(events)) {\n    // Empty\n  }\n\n  return events\n}\n","import remarkParse from './lib/index.js'\n\nexport default remarkParse\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('mdast-util-from-markdown').Options} Options\n */\n\nimport {fromMarkdown} from 'mdast-util-from-markdown'\n\n/** @type {import('unified').Plugin<[Options?] | void[], string, Root>} */\nexport default function remarkParse(options) {\n  /** @type {import('unified').ParserFunction<Root>} */\n  const parser = (doc) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return fromMarkdown(\n      doc,\n      Object.assign({}, settings, options, {\n        // Note: these options are not in the readme.\n        // The goal is for them to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions: this.data('micromarkExtensions') || [],\n        mdastExtensions: this.data('fromMarkdownExtensions') || []\n      })\n    )\n  }\n\n  Object.assign(this, {Parser: parser})\n}\n","/**\n * @callback Handler\n *   Handle a value, with a certain ID field set to a certain value.\n *   The ID field is passed to `zwitch`, and it’s value is this function’s\n *   place on the `handlers` record.\n * @param {...any} parameters\n *   Arbitrary parameters passed to the zwitch.\n *   The first will be an object with a certain ID field set to a certain value.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback UnknownHandler\n *   Handle values that do have a certain ID field, but it’s set to a value\n *   that is not listed in the `handlers` record.\n * @param {unknown} value\n *   An object with a certain ID field set to an unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {any}\n *   Anything!\n */\n\n/**\n * @callback InvalidHandler\n *   Handle values that do not have a certain ID field.\n * @param {unknown} value\n *   Any unknown value.\n * @param {...any} rest\n *   Arbitrary parameters passed to the zwitch.\n * @returns {void|null|undefined|never}\n *   This should crash or return nothing.\n */\n\n/**\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @typedef Options\n *   Configuration (required).\n * @property {Invalid} [invalid]\n *   Handler to use for invalid values.\n * @property {Unknown} [unknown]\n *   Handler to use for unknown values.\n * @property {Handlers} [handlers]\n *   Handlers to use.\n */\n\nconst own = {}.hasOwnProperty\n\n/**\n * Handle values based on a field.\n *\n * @template {InvalidHandler} [Invalid=InvalidHandler]\n * @template {UnknownHandler} [Unknown=UnknownHandler]\n * @template {Record<string, Handler>} [Handlers=Record<string, Handler>]\n * @param {string} key\n *   Field to switch on.\n * @param {Options<Invalid, Unknown, Handlers>} [options]\n *   Configuration (required).\n * @returns {{unknown: Unknown, invalid: Invalid, handlers: Handlers, (...parameters: Parameters<Handlers[keyof Handlers]>): ReturnType<Handlers[keyof Handlers]>, (...parameters: Parameters<Unknown>): ReturnType<Unknown>}}\n */\nexport function zwitch(key, options) {\n  const settings = options || {}\n\n  /**\n   * Handle one value.\n   *\n   * Based on the bound `key`, a respective handler will be called.\n   * If `value` is not an object, or doesn’t have a `key` property, the special\n   * “invalid” handler will be called.\n   * If `value` has an unknown `key`, the special “unknown” handler will be\n   * called.\n   *\n   * All arguments, and the context object, are passed through to the handler,\n   * and it’s result is returned.\n   *\n   * @this {unknown}\n   *   Any context object.\n   * @param {unknown} [value]\n   *   Any value.\n   * @param {...unknown} parameters\n   *   Arbitrary parameters passed to the zwitch.\n   * @property {Handler} invalid\n   *   Handle for values that do not have a certain ID field.\n   * @property {Handler} unknown\n   *   Handle values that do have a certain ID field, but it’s set to a value\n   *   that is not listed in the `handlers` record.\n   * @property {Handlers} handlers\n   *   Record of handlers.\n   * @returns {unknown}\n   *   Anything.\n   */\n  function one(value, ...parameters) {\n    /** @type {Handler|undefined} */\n    let fn = one.invalid\n    const handlers = one.handlers\n\n    if (value && own.call(value, key)) {\n      // @ts-expect-error Indexable.\n      const id = String(value[key])\n      // @ts-expect-error Indexable.\n      fn = own.call(handlers, id) ? handlers[id] : one.unknown\n    }\n\n    if (fn) {\n      return fn.call(this, value, ...parameters)\n    }\n  }\n\n  one.handlers = settings.handlers || {}\n  one.invalid = settings.invalid\n  one.unknown = settings.unknown\n\n  // @ts-expect-error: matches!\n  return one\n}\n","/**\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').State} State\n */\n\n/**\n * @param {State} base\n * @param {Options} extension\n * @returns {State}\n */\nexport function configure(base, extension) {\n  let index = -1\n  /** @type {keyof Options} */\n  let key\n\n  // First do subextensions.\n  if (extension.extensions) {\n    while (++index < extension.extensions.length) {\n      configure(base, extension.extensions[index])\n    }\n  }\n\n  for (key in extension) {\n    if (key === 'extensions') {\n      // Empty.\n    } else if (key === 'unsafe' || key === 'join') {\n      /* c8 ignore next 2 */\n      // @ts-expect-error: hush.\n      base[key] = [...(base[key] || []), ...(extension[key] || [])]\n    } else if (key === 'handlers') {\n      base[key] = Object.assign(base[key], extension[key] || {})\n    } else {\n      // @ts-expect-error: hush.\n      base.options[key] = extension[key]\n    }\n  }\n\n  return base\n}\n","/**\n * @typedef {import('mdast').Blockquote} Blockquote\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n */\n\n/**\n * @param {Blockquote} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function blockquote(node, _, state, info) {\n  const exit = state.enter('blockquote')\n  const tracker = state.createTracker(info)\n  tracker.move('> ')\n  tracker.shift(2)\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return '>' + (blank ? '' : ' ') + line\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n * @typedef {import('../types.js').ConstructName} ConstructName\n */\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe} pattern\n * @returns {boolean}\n */\nexport function patternInScope(stack, pattern) {\n  return (\n    listInScope(stack, pattern.inConstruct, true) &&\n    !listInScope(stack, pattern.notInConstruct, false)\n  )\n}\n\n/**\n * @param {Array<ConstructName>} stack\n * @param {Unsafe['inConstruct']} list\n * @param {boolean} none\n * @returns {boolean}\n */\nfunction listInScope(stack, list, none) {\n  if (typeof list === 'string') {\n    list = [list]\n  }\n\n  if (!list || list.length === 0) {\n    return none\n  }\n\n  let index = -1\n\n  while (++index < list.length) {\n    if (stack.includes(list[index])) {\n      return true\n    }\n  }\n\n  return false\n}\n","/**\n * @typedef {import('mdast').Break} Break\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {patternInScope} from '../util/pattern-in-scope.js'\n\n/**\n * @param {Break} _\n * @param {Parent | undefined} _1\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function hardBreak(_, _1, state, info) {\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    // If we can’t put eols in this construct (setext headings, tables), use a\n    // space instead.\n    if (\n      state.unsafe[index].character === '\\n' &&\n      patternInScope(state.stack, state.unsafe[index])\n    ) {\n      return /[ \\t]/.test(info.before) ? '' : ' '\n    }\n  }\n\n  return '\\\\\\n'\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * @param {Code} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatCodeAsIndented(node, state) {\n  return Boolean(\n    !state.options.fences &&\n      node.value &&\n      // If there’s no info…\n      !node.lang &&\n      // And there’s a non-whitespace character…\n      /[^ \\r\\n]/.test(node.value) &&\n      // And the value doesn’t start or end in a blank…\n      !/^[\\t ]*(?:[\\r\\n]|$)|(?:^|[\\r\\n])[\\t ]*$/.test(node.value)\n  )\n}\n","/**\n * @typedef {import('mdast').Code} Code\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Map} Map\n */\n\nimport {longestStreak} from 'longest-streak'\nimport {formatCodeAsIndented} from '../util/format-code-as-indented.js'\nimport {checkFence} from '../util/check-fence.js'\n\n/**\n * @param {Code} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function code(node, _, state, info) {\n  const marker = checkFence(state)\n  const raw = node.value || ''\n  const suffix = marker === '`' ? 'GraveAccent' : 'Tilde'\n\n  if (formatCodeAsIndented(node, state)) {\n    const exit = state.enter('codeIndented')\n    const value = state.indentLines(raw, map)\n    exit()\n    return value\n  }\n\n  const tracker = state.createTracker(info)\n  const sequence = marker.repeat(Math.max(longestStreak(raw, marker) + 1, 3))\n  const exit = state.enter('codeFenced')\n  let value = tracker.move(sequence)\n\n  if (node.lang) {\n    const subexit = state.enter(`codeFencedLang${suffix}`)\n    value += tracker.move(\n      state.safe(node.lang, {\n        before: value,\n        after: ' ',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  if (node.lang && node.meta) {\n    const subexit = state.enter(`codeFencedMeta${suffix}`)\n    value += tracker.move(' ')\n    value += tracker.move(\n      state.safe(node.meta, {\n        before: value,\n        after: '\\n',\n        encode: ['`'],\n        ...tracker.current()\n      })\n    )\n    subexit()\n  }\n\n  value += tracker.move('\\n')\n\n  if (raw) {\n    value += tracker.move(raw + '\\n')\n  }\n\n  value += tracker.move(sequence)\n  exit()\n  return value\n}\n\n/** @type {Map} */\nfunction map(line, _, blank) {\n  return (blank ? '' : '    ') + line\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['quote'], null | undefined>}\n */\nexport function checkQuote(state) {\n  const marker = state.options.quote || '\"'\n\n  if (marker !== '\"' && marker !== \"'\") {\n    throw new Error(\n      'Cannot serialize title with `' +\n        marker +\n        '` for `options.quote`, expected `\"`, or `\\'`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('mdast').Emphasis} Emphasis\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkEmphasis} from '../util/check-emphasis.js'\n\nemphasis.peek = emphasisPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Emphasis} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function emphasis(node, _, state, info) {\n  const marker = checkEmphasis(state)\n  const exit = state.enter('emphasis')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Emphasis} _\n * @param {Parent | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction emphasisPeek(_, _1, state) {\n  return state.options.emphasis || '*'\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['emphasis'], null | undefined>}\n */\nexport function checkEmphasis(state) {\n  const marker = state.options.emphasis || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize emphasis with `' +\n        marker +\n        '` for `options.emphasis`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n */\n\n/**\n * @typedef {boolean | 'skip'} Action\n *   Union of the action types.\n *\n * @typedef {number} Index\n *   Move to the sibling at `index` next (after node itself is completely\n *   traversed).\n *\n *   Useful if mutating the tree, such as removing the node the visitor is\n *   currently on, or any of its previous siblings.\n *   Results less than 0 or greater than or equal to `children.length` stop\n *   traversing the parent.\n *\n * @typedef {[(Action | null | undefined | void)?, (Index | null | undefined)?]} ActionTuple\n *   List with one or two values, the first an action, the second an index.\n *\n * @typedef {Action | ActionTuple | Index | null | undefined | void} VisitorResult\n *   Any value that can be returned from a visitor.\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform the parent of node (the last of `ancestors`).\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of an ancestor still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Array<Ancestor>} ancestors\n *   Ancestors of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * @template {Node} [Tree=Node]\n *   Tree type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {Visitor<import('./complex-types.js').Matches<import('./complex-types.js').InclusiveDescendant<Tree>, Check>, Extract<import('./complex-types.js').InclusiveDescendant<Tree>, Parent>>} BuildVisitor\n *   Build a typed `Visitor` function from a tree and a test.\n *\n *   It will infer which values are passed as `node` and which as `parents`.\n */\n\nimport {convert} from 'unist-util-is'\nimport {color} from './color.js'\n\n/**\n * Continue traversing as normal.\n */\nexport const CONTINUE = true\n\n/**\n * Stop traversing immediately.\n */\nexport const EXIT = false\n\n/**\n * Do not traverse this node’s children.\n */\nexport const SKIP = 'skip'\n\n/**\n * Visit nodes, with ancestral information.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visitParents =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor<Node>} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        // @ts-expect-error no visitor given, so `visitor` is test.\n        visitor = test\n        test = null\n      }\n\n      const is = convert(test)\n      const step = reverse ? -1 : 1\n\n      factory(tree, undefined, [])()\n\n      /**\n       * @param {Node} node\n       * @param {number | undefined} index\n       * @param {Array<Parent>} parents\n       */\n      function factory(node, index, parents) {\n        /** @type {Record<string, unknown>} */\n        // @ts-expect-error: hush\n        const value = node && typeof node === 'object' ? node : {}\n\n        if (typeof value.type === 'string') {\n          const name =\n            // `hast`\n            typeof value.tagName === 'string'\n              ? value.tagName\n              : // `xast`\n              typeof value.name === 'string'\n              ? value.name\n              : undefined\n\n          Object.defineProperty(visit, 'name', {\n            value:\n              'node (' + color(node.type + (name ? '<' + name + '>' : '')) + ')'\n          })\n        }\n\n        return visit\n\n        function visit() {\n          /** @type {ActionTuple} */\n          let result = []\n          /** @type {ActionTuple} */\n          let subresult\n          /** @type {number} */\n          let offset\n          /** @type {Array<Parent>} */\n          let grandparents\n\n          if (!test || is(node, index, parents[parents.length - 1] || null)) {\n            result = toResult(visitor(node, parents))\n\n            if (result[0] === EXIT) {\n              return result\n            }\n          }\n\n          // @ts-expect-error looks like a parent.\n          if (node.children && result[0] !== SKIP) {\n            // @ts-expect-error looks like a parent.\n            offset = (reverse ? node.children.length : -1) + step\n            // @ts-expect-error looks like a parent.\n            grandparents = parents.concat(node)\n\n            // @ts-expect-error looks like a parent.\n            while (offset > -1 && offset < node.children.length) {\n              // @ts-expect-error looks like a parent.\n              subresult = factory(node.children[offset], offset, grandparents)()\n\n              if (subresult[0] === EXIT) {\n                return subresult\n              }\n\n              offset =\n                typeof subresult[1] === 'number' ? subresult[1] : offset + step\n            }\n          }\n\n          return result\n        }\n      }\n    }\n  )\n\n/**\n * Turn a return value into a clean result.\n *\n * @param {VisitorResult} value\n *   Valid return values from visitors.\n * @returns {ActionTuple}\n *   Clean result.\n */\nfunction toResult(value) {\n  if (Array.isArray(value)) {\n    return value\n  }\n\n  if (typeof value === 'number') {\n    return [CONTINUE, value]\n  }\n\n  return [value]\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n * @typedef {import('unist-util-is').Test} Test\n * @typedef {import('unist-util-visit-parents').VisitorResult} VisitorResult\n */\n\n/**\n * Check if `Child` can be a child of `Ancestor`.\n *\n * Returns the ancestor when `Child` can be a child of `Ancestor`, or returns\n * `never`.\n *\n * @template {Node} Ancestor\n *   Node type.\n * @template {Node} Child\n *   Node type.\n * @typedef {(\n *   Ancestor extends Parent\n *     ? Child extends Ancestor['children'][number]\n *       ? Ancestor\n *       : never\n *     : never\n * )} ParentsOf\n */\n\n/**\n * @template {Node} [Visited=Node]\n *   Visited node type.\n * @template {Parent} [Ancestor=Parent]\n *   Ancestor type.\n * @callback Visitor\n *   Handle a node (matching `test`, if given).\n *\n *   Visitors are free to transform `node`.\n *   They can also transform `parent`.\n *\n *   Replacing `node` itself, if `SKIP` is not returned, still causes its\n *   descendants to be walked (which is a bug).\n *\n *   When adding or removing previous siblings of `node` (or next siblings, in\n *   case of reverse), the `Visitor` should return a new `Index` to specify the\n *   sibling to traverse after `node` is traversed.\n *   Adding or removing next siblings of `node` (or previous siblings, in case\n *   of reverse) is handled as expected without needing to return a new `Index`.\n *\n *   Removing the children property of `parent` still results in them being\n *   traversed.\n * @param {Visited} node\n *   Found node.\n * @param {Visited extends Node ? number | null : never} index\n *   Index of `node` in `parent`.\n * @param {Ancestor extends Node ? Ancestor | null : never} parent\n *   Parent of `node`.\n * @returns {VisitorResult}\n *   What to do next.\n *\n *   An `Index` is treated as a tuple of `[CONTINUE, Index]`.\n *   An `Action` is treated as a tuple of `[Action]`.\n *\n *   Passing a tuple back only makes sense if the `Action` is `SKIP`.\n *   When the `Action` is `EXIT`, that action can be returned.\n *   When the `Action` is `CONTINUE`, `Index` can be returned.\n */\n\n/**\n * Build a typed `Visitor` function from a node and all possible parents.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Visited\n *   Node type.\n * @template {Parent} Ancestor\n *   Parent type.\n * @typedef {Visitor<Visited, ParentsOf<Ancestor, Visited>>} BuildVisitorFromMatch\n */\n\n/**\n * Build a typed `Visitor` function from a list of descendants and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} Descendant\n *   Node type.\n * @template {Test} Check\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromMatch<\n *     import('unist-util-visit-parents/complex-types.js').Matches<Descendant, Check>,\n *     Extract<Descendant, Parent>\n *   >\n * )} BuildVisitorFromDescendants\n */\n\n/**\n * Build a typed `Visitor` function from a tree and a test.\n *\n * It will infer which values are passed as `node` and which as `parent`.\n *\n * @template {Node} [Tree=Node]\n *   Node type.\n * @template {Test} [Check=string]\n *   Test type.\n * @typedef {(\n *   BuildVisitorFromDescendants<\n *     import('unist-util-visit-parents/complex-types.js').InclusiveDescendant<Tree>,\n *     Check\n *   >\n * )} BuildVisitor\n */\n\nimport {visitParents} from 'unist-util-visit-parents'\n\n/**\n * Visit nodes.\n *\n * This algorithm performs *depth-first* *tree traversal* in *preorder*\n * (**NLR**) or if `reverse` is given, in *reverse preorder* (**NRL**).\n *\n * You can choose for which nodes `visitor` is called by passing a `test`.\n * For complex tests, you should test yourself in `visitor`, as it will be\n * faster and will have improved type information.\n *\n * Walking the tree is an intensive task.\n * Make use of the return values of the visitor when possible.\n * Instead of walking a tree multiple times, walk it once, use `unist-util-is`\n * to check if a node matches, and then perform different operations.\n *\n * You can change the tree.\n * See `Visitor` for more info.\n *\n * @param tree\n *   Tree to traverse.\n * @param test\n *   `unist-util-is`-compatible test\n * @param visitor\n *   Handle each node.\n * @param reverse\n *   Traverse in reverse preorder (NRL) instead of the default preorder (NLR).\n * @returns\n *   Nothing.\n */\nexport const visit =\n  /**\n   * @type {(\n   *   (<Tree extends Node, Check extends Test>(tree: Tree, test: Check, visitor: BuildVisitor<Tree, Check>, reverse?: boolean | null | undefined) => void) &\n   *   (<Tree extends Node>(tree: Tree, visitor: BuildVisitor<Tree>, reverse?: boolean | null | undefined) => void)\n   * )}\n   */\n  (\n    /**\n     * @param {Node} tree\n     * @param {Test} test\n     * @param {Visitor} visitor\n     * @param {boolean | null | undefined} [reverse]\n     * @returns {void}\n     */\n    function (tree, test, visitor, reverse) {\n      if (typeof test === 'function' && typeof visitor !== 'function') {\n        reverse = visitor\n        visitor = test\n        test = null\n      }\n\n      visitParents(tree, test, overload, reverse)\n\n      /**\n       * @param {Node} node\n       * @param {Array<Parent>} parents\n       */\n      function overload(node, parents) {\n        const parent = parents[parents.length - 1]\n        return visitor(\n          node,\n          parent ? parent.children.indexOf(node) : null,\n          parent\n        )\n      }\n    }\n  )\n\nexport {CONTINUE, EXIT, SKIP} from 'unist-util-visit-parents'\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n *\n * @typedef Options\n *   Configuration (optional).\n * @property {boolean | null | undefined} [includeImageAlt=true]\n *   Whether to use `alt` for `image`s.\n * @property {boolean | null | undefined} [includeHtml=true]\n *   Whether to use `value` of HTML.\n */\n\n/** @type {Options} */\nconst emptyOptions = {}\n\n/**\n * Get the text content of a node or list of nodes.\n *\n * Prefers the node’s plain-text fields, otherwise serializes its children,\n * and if the given value is an array, serialize the nodes in it.\n *\n * @param {unknown} value\n *   Thing to serialize, typically `Node`.\n * @param {Options | null | undefined} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized `value`.\n */\nexport function toString(value, options) {\n  const settings = options || emptyOptions\n  const includeImageAlt =\n    typeof settings.includeImageAlt === 'boolean'\n      ? settings.includeImageAlt\n      : true\n  const includeHtml =\n    typeof settings.includeHtml === 'boolean' ? settings.includeHtml : true\n\n  return one(value, includeImageAlt, includeHtml)\n}\n\n/**\n * One node or several nodes.\n *\n * @param {unknown} value\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized node.\n */\nfunction one(value, includeImageAlt, includeHtml) {\n  if (node(value)) {\n    if ('value' in value) {\n      return value.type === 'html' && !includeHtml ? '' : value.value\n    }\n\n    if (includeImageAlt && 'alt' in value && value.alt) {\n      return value.alt\n    }\n\n    if ('children' in value) {\n      return all(value.children, includeImageAlt, includeHtml)\n    }\n  }\n\n  if (Array.isArray(value)) {\n    return all(value, includeImageAlt, includeHtml)\n  }\n\n  return ''\n}\n\n/**\n * Serialize a list of nodes.\n *\n * @param {Array<unknown>} values\n *   Thing to serialize.\n * @param {boolean} includeImageAlt\n *   Include image `alt`s.\n * @param {boolean} includeHtml\n *   Include HTML.\n * @returns {string}\n *   Serialized nodes.\n */\nfunction all(values, includeImageAlt, includeHtml) {\n  /** @type {Array<string>} */\n  const result = []\n  let index = -1\n\n  while (++index < values.length) {\n    result[index] = one(values[index], includeImageAlt, includeHtml)\n  }\n\n  return result.join('')\n}\n\n/**\n * Check if `value` looks like a node.\n *\n * @param {unknown} value\n *   Thing.\n * @returns {value is Node}\n *   Whether `value` is a node.\n */\nfunction node(value) {\n  return Boolean(value && typeof value === 'object')\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').State} State\n */\n\nimport {visit, EXIT} from 'unist-util-visit'\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Heading} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatHeadingAsSetext(node, state) {\n  let literalWithBreak = false\n\n  // Look for literals with a line break.\n  // Note that this also\n  visit(node, (node) => {\n    if (\n      ('value' in node && /\\r?\\n|\\r/.test(node.value)) ||\n      node.type === 'break'\n    ) {\n      literalWithBreak = true\n      return EXIT\n    }\n  })\n\n  return Boolean(\n    (!node.depth || node.depth < 3) &&\n      toString(node) &&\n      (state.options.setext || literalWithBreak)\n  )\n}\n","/**\n * @typedef {import('mdast').HTML} HTML\n */\n\nhtml.peek = htmlPeek\n\n/**\n * @param {HTML} node\n * @returns {string}\n */\nexport function html(node) {\n  return node.value || ''\n}\n\n/**\n * @returns {string}\n */\nfunction htmlPeek() {\n  return '<'\n}\n","/**\n * @typedef {import('mdast').Image} Image\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\nimage.peek = imagePeek\n\n/**\n * @param {Image} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function image(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('image')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  value += tracker.move(\n    state.safe(node.alt, {before: value, after: ']', ...tracker.current()})\n  )\n  value += tracker.move('](')\n\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n  exit()\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imagePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('mdast').ImageReference} ImageReference\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimageReference.peek = imageReferencePeek\n\n/**\n * @param {ImageReference} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function imageReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('imageReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('![')\n  const alt = state.safe(node.alt, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(alt + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !alt || alt !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction imageReferencePeek() {\n  return '!'\n}\n","/**\n * @typedef {import('../types.js').Unsafe} Unsafe\n */\n\n/**\n * @param {Unsafe} pattern\n * @returns {RegExp}\n */\nexport function patternCompile(pattern) {\n  if (!pattern._compiled) {\n    const before =\n      (pattern.atBreak ? '[\\\\r\\\\n][\\\\t ]*' : '') +\n      (pattern.before ? '(?:' + pattern.before + ')' : '')\n\n    pattern._compiled = new RegExp(\n      (before ? '(' + before + ')' : '') +\n        (/[|\\\\{}()[\\]^$+*?.-]/.test(pattern.character) ? '\\\\' : '') +\n        pattern.character +\n        (pattern.after ? '(?:' + pattern.after + ')' : ''),\n      'g'\n    )\n  }\n\n  return pattern._compiled\n}\n","/**\n * @typedef {import('mdast').InlineCode} InlineCode\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {patternCompile} from '../util/pattern-compile.js'\n\ninlineCode.peek = inlineCodePeek\n\n/**\n * @param {InlineCode} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nexport function inlineCode(node, _, state) {\n  let value = node.value || ''\n  let sequence = '`'\n  let index = -1\n\n  // If there is a single grave accent on its own in the code, use a fence of\n  // two.\n  // If there are two in a row, use one.\n  while (new RegExp('(^|[^`])' + sequence + '([^`]|$)').test(value)) {\n    sequence += '`'\n  }\n\n  // If this is not just spaces or eols (tabs don’t count), and either the\n  // first or last character are a space, eol, or tick, then pad with spaces.\n  if (\n    /[^ \\r\\n]/.test(value) &&\n    ((/^[ \\r\\n]/.test(value) && /[ \\r\\n]$/.test(value)) || /^`|`$/.test(value))\n  ) {\n    value = ' ' + value + ' '\n  }\n\n  // We have a potential problem: certain characters after eols could result in\n  // blocks being seen.\n  // For example, if someone injected the string `'\\n# b'`, then that would\n  // result in an ATX heading.\n  // We can’t escape characters in `inlineCode`, but because eols are\n  // transformed to spaces when going from markdown to HTML anyway, we can swap\n  // them out.\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    // Only look for `atBreak`s.\n    // Btw: note that `atBreak` patterns will always start the regex at LF or\n    // CR.\n    if (!pattern.atBreak) continue\n\n    while ((match = expression.exec(value))) {\n      let position = match.index\n\n      // Support CRLF (patterns only look for one of the characters).\n      if (\n        value.charCodeAt(position) === 10 /* `\\n` */ &&\n        value.charCodeAt(position - 1) === 13 /* `\\r` */\n      ) {\n        position--\n      }\n\n      value = value.slice(0, position) + ' ' + value.slice(match.index + 1)\n    }\n  }\n\n  return sequence + value + sequence\n}\n\n/**\n * @returns {string}\n */\nfunction inlineCodePeek() {\n  return '`'\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').State} State\n */\n\nimport {toString} from 'mdast-util-to-string'\n\n/**\n * @param {Link} node\n * @param {State} state\n * @returns {boolean}\n */\nexport function formatLinkAsAutolink(node, state) {\n  const raw = toString(node)\n\n  return Boolean(\n    !state.options.resourceLink &&\n      // If there’s a url…\n      node.url &&\n      // And there’s a no title…\n      !node.title &&\n      // And the content of `node` is a single text node…\n      node.children &&\n      node.children.length === 1 &&\n      node.children[0].type === 'text' &&\n      // And if the url is the same as the content…\n      (raw === node.url || 'mailto:' + raw === node.url) &&\n      // And that starts w/ a protocol…\n      /^[a-z][a-z+.-]+:/i.test(node.url) &&\n      // And that doesn’t contain ASCII control codes (character escapes and\n      // references don’t work), space, or angle brackets…\n      !/[\\0- <>\\u007F]/.test(node.url)\n  )\n}\n","/**\n * @typedef {import('mdast').Link} Link\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Exit} Exit\n */\n\nimport {checkQuote} from '../util/check-quote.js'\nimport {formatLinkAsAutolink} from '../util/format-link-as-autolink.js'\n\nlink.peek = linkPeek\n\n/**\n * @param {Link} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function link(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const tracker = state.createTracker(info)\n  /** @type {Exit} */\n  let exit\n  /** @type {Exit} */\n  let subexit\n\n  if (formatLinkAsAutolink(node, state)) {\n    // Hide the fact that we’re in phrasing, because escapes don’t work.\n    const stack = state.stack\n    state.stack = []\n    exit = state.enter('autolink')\n    let value = tracker.move('<')\n    value += tracker.move(\n      state.containerPhrasing(node, {\n        before: value,\n        after: '>',\n        ...tracker.current()\n      })\n    )\n    value += tracker.move('>')\n    exit()\n    state.stack = stack\n    return value\n  }\n\n  exit = state.enter('link')\n  subexit = state.enter('label')\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: '](',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move('](')\n  subexit()\n\n  if (\n    // If there’s no url but there is a title…\n    (!node.url && node.title) ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : ')',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  value += tracker.move(')')\n\n  exit()\n  return value\n}\n\n/**\n * @param {Link} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @returns {string}\n */\nfunction linkPeek(node, _, state) {\n  return formatLinkAsAutolink(node, state) ? '<' : '['\n}\n","/**\n * @typedef {import('mdast').LinkReference} LinkReference\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nlinkReference.peek = linkReferencePeek\n\n/**\n * @param {LinkReference} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function linkReference(node, _, state, info) {\n  const type = node.referenceType\n  const exit = state.enter('linkReference')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  const text = state.containerPhrasing(node, {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  value += tracker.move(text + '][')\n\n  subexit()\n  // Hide the fact that we’re in phrasing, because escapes don’t work.\n  const stack = state.stack\n  state.stack = []\n  subexit = state.enter('reference')\n  // Note: for proper tracking, we should reset the output positions when we end\n  // up making a `shortcut` reference, because then there is no brace output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  const reference = state.safe(state.associationId(node), {\n    before: value,\n    after: ']',\n    ...tracker.current()\n  })\n  subexit()\n  state.stack = stack\n  exit()\n\n  if (type === 'full' || !text || text !== reference) {\n    value += tracker.move(reference + ']')\n  } else if (type === 'shortcut') {\n    // Remove the unwanted `[`.\n    value = value.slice(0, -1)\n  } else {\n    value += tracker.move(']')\n  }\n\n  return value\n}\n\n/**\n * @returns {string}\n */\nfunction linkReferencePeek() {\n  return '['\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBullet(state) {\n  const marker = state.options.bullet || '*'\n\n  if (marker !== '*' && marker !== '+' && marker !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bullet`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrdered(state) {\n  const marker = state.options.bulletOrdered || '.'\n\n  if (marker !== '.' && marker !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        marker +\n        '` for `options.bulletOrdered`, expected `.` or `)`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['rule'], null | undefined>}\n */\nexport function checkRule(state) {\n  const marker = state.options.rule || '*'\n\n  if (marker !== '*' && marker !== '-' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize rules with `' +\n        marker +\n        '` for `options.rule`, expected `*`, `-`, or `_`'\n    )\n  }\n\n  return marker\n}\n","/**\n * @typedef {import('unist').Node} Node\n * @typedef {import('unist').Parent} Parent\n */\n\n/**\n * @typedef {Record<string, unknown>} Props\n * @typedef {null | undefined | string | Props | TestFunctionAnything | Array<string | Props | TestFunctionAnything>} Test\n *   Check for an arbitrary node, unaware of TypeScript inferral.\n *\n * @callback TestFunctionAnything\n *   Check if a node passes a test, unaware of TypeScript inferral.\n * @param {unknown} this\n *   The given context.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean | void}\n *   Whether this node passes the test.\n */\n\n/**\n * @template {Node} Kind\n *   Node type.\n * @typedef {Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind> | Array<Kind['type'] | Partial<Kind> | TestFunctionPredicate<Kind>>} PredicateTest\n *   Check for a node that can be inferred by TypeScript.\n */\n\n/**\n * Check if a node passes a certain test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback TestFunctionPredicate\n *   Complex test function for a node that can be inferred by TypeScript.\n * @param {Node} node\n *   A node.\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this node passes the test.\n */\n\n/**\n * @callback AssertAnything\n *   Check that an arbitrary value is a node, unaware of TypeScript inferral.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {boolean}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if a node is a node and passes a certain node test.\n *\n * @template {Node} Kind\n *   Node type.\n * @callback AssertPredicate\n *   Check that an arbitrary value is a specific node, aware of TypeScript.\n * @param {unknown} [node]\n *   Anything (typically a node).\n * @param {number | null | undefined} [index]\n *   The node’s position in its parent.\n * @param {Parent | null | undefined} [parent]\n *   The node’s parent.\n * @returns {node is Kind}\n *   Whether this is a node and passes a test.\n */\n\n/**\n * Check if `node` is a `Node` and whether it passes the given test.\n *\n * @param node\n *   Thing to check, typically `Node`.\n * @param test\n *   A check for a specific node.\n * @param index\n *   The node’s position in its parent.\n * @param parent\n *   The node’s parent.\n * @returns\n *   Whether `node` is a node and passes a test.\n */\nexport const is =\n  /**\n   * @type {(\n   *   (() => false) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index: number, parent: Parent, context?: unknown) => node is Kind) &\n   *   (<Kind extends Node = Node>(node: unknown, test: PredicateTest<Kind>, index?: null | undefined, parent?: null | undefined, context?: unknown) => node is Kind) &\n   *   ((node: unknown, test: Test, index: number, parent: Parent, context?: unknown) => boolean) &\n   *   ((node: unknown, test?: Test, index?: null | undefined, parent?: null | undefined, context?: unknown) => boolean)\n   * )}\n   */\n  (\n    /**\n     * @param {unknown} [node]\n     * @param {Test} [test]\n     * @param {number | null | undefined} [index]\n     * @param {Parent | null | undefined} [parent]\n     * @param {unknown} [context]\n     * @returns {boolean}\n     */\n    // eslint-disable-next-line max-params\n    function is(node, test, index, parent, context) {\n      const check = convert(test)\n\n      if (\n        index !== undefined &&\n        index !== null &&\n        (typeof index !== 'number' ||\n          index < 0 ||\n          index === Number.POSITIVE_INFINITY)\n      ) {\n        throw new Error('Expected positive finite index')\n      }\n\n      if (\n        parent !== undefined &&\n        parent !== null &&\n        (!is(parent) || !parent.children)\n      ) {\n        throw new Error('Expected parent node')\n      }\n\n      if (\n        (parent === undefined || parent === null) !==\n        (index === undefined || index === null)\n      ) {\n        throw new Error('Expected both parent and index')\n      }\n\n      // @ts-expect-error Looks like a node.\n      return node && node.type && typeof node.type === 'string'\n        ? Boolean(check.call(context, node, index, parent))\n        : false\n    }\n  )\n\n/**\n * Generate an assertion from a test.\n *\n * Useful if you’re going to test many nodes, for example when creating a\n * utility where something else passes a compatible test.\n *\n * The created function is a bit faster because it expects valid input only:\n * a `node`, `index`, and `parent`.\n *\n * @param test\n *   *   when nullish, checks if `node` is a `Node`.\n *   *   when `string`, works like passing `(node) => node.type === test`.\n *   *   when `function` checks if function passed the node is true.\n *   *   when `object`, checks that all keys in test are in node, and that they have (strictly) equal values.\n *   *   when `array`, checks if any one of the subtests pass.\n * @returns\n *   An assertion.\n */\nexport const convert =\n  /**\n   * @type {(\n   *   (<Kind extends Node>(test: PredicateTest<Kind>) => AssertPredicate<Kind>) &\n   *   ((test?: Test) => AssertAnything)\n   * )}\n   */\n  (\n    /**\n     * @param {Test} [test]\n     * @returns {AssertAnything}\n     */\n    function (test) {\n      if (test === undefined || test === null) {\n        return ok\n      }\n\n      if (typeof test === 'string') {\n        return typeFactory(test)\n      }\n\n      if (typeof test === 'object') {\n        return Array.isArray(test) ? anyFactory(test) : propsFactory(test)\n      }\n\n      if (typeof test === 'function') {\n        return castFactory(test)\n      }\n\n      throw new Error('Expected function, string, or object as test')\n    }\n  )\n\n/**\n * @param {Array<string | Props | TestFunctionAnything>} tests\n * @returns {AssertAnything}\n */\nfunction anyFactory(tests) {\n  /** @type {Array<AssertAnything>} */\n  const checks = []\n  let index = -1\n\n  while (++index < tests.length) {\n    checks[index] = convert(tests[index])\n  }\n\n  return castFactory(any)\n\n  /**\n   * @this {unknown}\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function any(...parameters) {\n    let index = -1\n\n    while (++index < checks.length) {\n      if (checks[index].call(this, ...parameters)) return true\n    }\n\n    return false\n  }\n}\n\n/**\n * Turn an object into a test for a node with a certain fields.\n *\n * @param {Props} check\n * @returns {AssertAnything}\n */\nfunction propsFactory(check) {\n  return castFactory(all)\n\n  /**\n   * @param {Node} node\n   * @returns {boolean}\n   */\n  function all(node) {\n    /** @type {string} */\n    let key\n\n    for (key in check) {\n      // @ts-expect-error: hush, it sure works as an index.\n      if (node[key] !== check[key]) return false\n    }\n\n    return true\n  }\n}\n\n/**\n * Turn a string into a test for a node with a certain type.\n *\n * @param {string} check\n * @returns {AssertAnything}\n */\nfunction typeFactory(check) {\n  return castFactory(type)\n\n  /**\n   * @param {Node} node\n   */\n  function type(node) {\n    return node && node.type === check\n  }\n}\n\n/**\n * Turn a custom test into a test for a node that passes that test.\n *\n * @param {TestFunctionAnything} check\n * @returns {AssertAnything}\n */\nfunction castFactory(check) {\n  return assertion\n\n  /**\n   * @this {unknown}\n   * @param {unknown} node\n   * @param {Array<unknown>} parameters\n   * @returns {boolean}\n   */\n  function assertion(node, ...parameters) {\n    return Boolean(\n      node &&\n        typeof node === 'object' &&\n        'type' in node &&\n        // @ts-expect-error: fine.\n        Boolean(check.call(this, node, ...parameters))\n    )\n  }\n}\n\nfunction ok() {\n  return true\n}\n","/**\n * @typedef {import('mdast').PhrasingContent} PhrasingContent\n * @typedef {import('unist-util-is').AssertPredicate<PhrasingContent>} AssertPredicatePhrasing\n */\n\nimport {convert} from 'unist-util-is'\n\n/**\n * Check if the given value is *phrasing content*.\n *\n * @param\n *   Thing to check, typically `Node`.\n * @returns\n *   Whether `value` is phrasing content.\n */\nexport const phrasing = /** @type {AssertPredicatePhrasing} */ (\n  convert([\n    'break',\n    'delete',\n    'emphasis',\n    'footnote',\n    'footnoteReference',\n    'image',\n    'imageReference',\n    'inlineCode',\n    'link',\n    'linkReference',\n    'strong',\n    'text'\n  ])\n)\n","/**\n * @typedef {import('mdast').Strong} Strong\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkStrong} from '../util/check-strong.js'\n\nstrong.peek = strongPeek\n\n// To do: there are cases where emphasis cannot “form” depending on the\n// previous or next character of sequences.\n// There’s no way around that though, except for injecting zero-width stuff.\n// Do we need to safeguard against that?\n/**\n * @param {Strong} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function strong(node, _, state, info) {\n  const marker = checkStrong(state)\n  const exit = state.enter('strong')\n  const tracker = state.createTracker(info)\n  let value = tracker.move(marker + marker)\n  value += tracker.move(\n    state.containerPhrasing(node, {\n      before: value,\n      after: marker,\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(marker + marker)\n  exit()\n  return value\n}\n\n/**\n * @param {Strong} _\n * @param {Parent | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nfunction strongPeek(_, _1, state) {\n  return state.options.strong || '*'\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['strong'], null | undefined>}\n */\nexport function checkStrong(state) {\n  const marker = state.options.strong || '*'\n\n  if (marker !== '*' && marker !== '_') {\n    throw new Error(\n      'Cannot serialize strong with `' +\n        marker +\n        '` for `options.strong`, expected `*`, or `_`'\n    )\n  }\n\n  return marker\n}\n","import {blockquote} from './blockquote.js'\nimport {hardBreak} from './break.js'\nimport {code} from './code.js'\nimport {definition} from './definition.js'\nimport {emphasis} from './emphasis.js'\nimport {heading} from './heading.js'\nimport {html} from './html.js'\nimport {image} from './image.js'\nimport {imageReference} from './image-reference.js'\nimport {inlineCode} from './inline-code.js'\nimport {link} from './link.js'\nimport {linkReference} from './link-reference.js'\nimport {list} from './list.js'\nimport {listItem} from './list-item.js'\nimport {paragraph} from './paragraph.js'\nimport {root} from './root.js'\nimport {strong} from './strong.js'\nimport {text} from './text.js'\nimport {thematicBreak} from './thematic-break.js'\n\n/**\n * Default (CommonMark) handlers.\n */\nexport const handle = {\n  blockquote,\n  break: hardBreak,\n  code,\n  definition,\n  emphasis,\n  hardBreak,\n  heading,\n  html,\n  image,\n  imageReference,\n  inlineCode,\n  link,\n  linkReference,\n  list,\n  listItem,\n  paragraph,\n  root,\n  strong,\n  text,\n  thematicBreak\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['fence'], null | undefined>}\n */\nexport function checkFence(state) {\n  const marker = state.options.fence || '`'\n\n  if (marker !== '`' && marker !== '~') {\n    throw new Error(\n      'Cannot serialize code with `' +\n        marker +\n        '` for `options.fence`, expected `` ` `` or `~`'\n    )\n  }\n\n  return marker\n}\n","/**\n * Get the count of the longest repeating streak of `substring` in `value`.\n *\n * @param {string} value\n *   Content to search in.\n * @param {string} substring\n *   Substring to look for, typically one character.\n * @returns {number}\n *   Count of most frequent adjacent `substring`s in `value`.\n */\nexport function longestStreak(value, substring) {\n  const source = String(value)\n  let index = source.indexOf(substring)\n  let expected = index\n  let count = 0\n  let max = 0\n\n  if (typeof substring !== 'string') {\n    throw new TypeError('Expected substring')\n  }\n\n  while (index !== -1) {\n    if (index === expected) {\n      if (++count > max) {\n        max = count\n      }\n    } else {\n      count = 1\n    }\n\n    expected = index + substring.length\n    index = source.indexOf(substring, expected)\n  }\n\n  return max\n}\n","/**\n * @typedef {import('mdast').Definition} Definition\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkQuote} from '../util/check-quote.js'\n\n/**\n * @param {Definition} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function definition(node, _, state, info) {\n  const quote = checkQuote(state)\n  const suffix = quote === '\"' ? 'Quote' : 'Apostrophe'\n  const exit = state.enter('definition')\n  let subexit = state.enter('label')\n  const tracker = state.createTracker(info)\n  let value = tracker.move('[')\n  value += tracker.move(\n    state.safe(state.associationId(node), {\n      before: value,\n      after: ']',\n      ...tracker.current()\n    })\n  )\n  value += tracker.move(']: ')\n\n  subexit()\n\n  if (\n    // If there’s no url, or…\n    !node.url ||\n    // If there are control characters or whitespace.\n    /[\\0- \\u007F]/.test(node.url)\n  ) {\n    subexit = state.enter('destinationLiteral')\n    value += tracker.move('<')\n    value += tracker.move(\n      state.safe(node.url, {before: value, after: '>', ...tracker.current()})\n    )\n    value += tracker.move('>')\n  } else {\n    // No whitespace, raw is prettier.\n    subexit = state.enter('destinationRaw')\n    value += tracker.move(\n      state.safe(node.url, {\n        before: value,\n        after: node.title ? ' ' : '\\n',\n        ...tracker.current()\n      })\n    )\n  }\n\n  subexit()\n\n  if (node.title) {\n    subexit = state.enter(`title${suffix}`)\n    value += tracker.move(' ' + quote)\n    value += tracker.move(\n      state.safe(node.title, {\n        before: value,\n        after: quote,\n        ...tracker.current()\n      })\n    )\n    value += tracker.move(quote)\n    subexit()\n  }\n\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').Heading} Heading\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {formatHeadingAsSetext} from '../util/format-heading-as-setext.js'\n\n/**\n * @param {Heading} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function heading(node, _, state, info) {\n  const rank = Math.max(Math.min(6, node.depth || 1), 1)\n  const tracker = state.createTracker(info)\n\n  if (formatHeadingAsSetext(node, state)) {\n    const exit = state.enter('headingSetext')\n    const subexit = state.enter('phrasing')\n    const value = state.containerPhrasing(node, {\n      ...tracker.current(),\n      before: '\\n',\n      after: '\\n'\n    })\n    subexit()\n    exit()\n\n    return (\n      value +\n      '\\n' +\n      (rank === 1 ? '=' : '-').repeat(\n        // The whole size…\n        value.length -\n          // Minus the position of the character after the last EOL (or\n          // 0 if there is none)…\n          (Math.max(value.lastIndexOf('\\r'), value.lastIndexOf('\\n')) + 1)\n      )\n    )\n  }\n\n  const sequence = '#'.repeat(rank)\n  const exit = state.enter('headingAtx')\n  const subexit = state.enter('phrasing')\n\n  // Note: for proper tracking, we should reset the output positions when there\n  // is no content returned, because then the space is not output.\n  // Practically, in that case, there is no content, so it doesn’t matter that\n  // we’ve tracked one too many characters.\n  tracker.move(sequence + ' ')\n\n  let value = state.containerPhrasing(node, {\n    before: '# ',\n    after: '\\n',\n    ...tracker.current()\n  })\n\n  if (/^[\\t ]/.test(value)) {\n    // To do: what effect has the character reference on tracking?\n    value =\n      '&#x' +\n      value.charCodeAt(0).toString(16).toUpperCase() +\n      ';' +\n      value.slice(1)\n  }\n\n  value = value ? sequence + ' ' + value : sequence\n\n  if (state.options.closeAtx) {\n    value += ' ' + sequence\n  }\n\n  subexit()\n  exit()\n\n  return value\n}\n","/**\n * @typedef {import('mdast').List} List\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkBulletOther} from '../util/check-bullet-other.js'\nimport {checkBulletOrdered} from '../util/check-bullet-ordered.js'\nimport {checkBulletOrderedOther} from '../util/check-bullet-ordered-other.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {List} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function list(node, parent, state, info) {\n  const exit = state.enter('list')\n  const bulletCurrent = state.bulletCurrent\n  /** @type {string} */\n  let bullet = node.ordered ? checkBulletOrdered(state) : checkBullet(state)\n  /** @type {string} */\n  const bulletOther = node.ordered\n    ? checkBulletOrderedOther(state)\n    : checkBulletOther(state)\n  const bulletLastUsed = state.bulletLastUsed\n  let useDifferentMarker = false\n\n  if (\n    parent &&\n    // Explicit `other` set.\n    (node.ordered\n      ? state.options.bulletOrderedOther\n      : state.options.bulletOther) &&\n    bulletLastUsed &&\n    bullet === bulletLastUsed\n  ) {\n    useDifferentMarker = true\n  }\n\n  if (!node.ordered) {\n    const firstListItem = node.children ? node.children[0] : undefined\n\n    // If there’s an empty first list item directly in two list items,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * - *\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (\n      // Bullet could be used as a thematic break marker:\n      (bullet === '*' || bullet === '-') &&\n      // Empty first list item:\n      firstListItem &&\n      (!firstListItem.children || !firstListItem.children[0]) &&\n      // Directly in two other list items:\n      state.stack[state.stack.length - 1] === 'list' &&\n      state.stack[state.stack.length - 2] === 'listItem' &&\n      state.stack[state.stack.length - 3] === 'list' &&\n      state.stack[state.stack.length - 4] === 'listItem' &&\n      // That are each the first child.\n      state.indexStack[state.indexStack.length - 1] === 0 &&\n      state.indexStack[state.indexStack.length - 2] === 0 &&\n      state.indexStack[state.indexStack.length - 3] === 0\n    ) {\n      useDifferentMarker = true\n    }\n\n    // If there’s a thematic break at the start of the first list item,\n    // we have to use a different bullet:\n    //\n    // ```markdown\n    // * ---\n    // ```\n    //\n    // …because otherwise it would become one big thematic break.\n    if (checkRule(state) === bullet && firstListItem) {\n      let index = -1\n\n      while (++index < node.children.length) {\n        const item = node.children[index]\n\n        if (\n          item &&\n          item.type === 'listItem' &&\n          item.children &&\n          item.children[0] &&\n          item.children[0].type === 'thematicBreak'\n        ) {\n          useDifferentMarker = true\n          break\n        }\n      }\n    }\n  }\n\n  if (useDifferentMarker) {\n    bullet = bulletOther\n  }\n\n  state.bulletCurrent = bullet\n  const value = state.containerFlow(node, info)\n  state.bulletLastUsed = bullet\n  state.bulletCurrent = bulletCurrent\n  exit()\n  return value\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBulletOrdered} from './check-bullet-ordered.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bulletOrdered'], null | undefined>}\n */\nexport function checkBulletOrderedOther(state) {\n  const bulletOrdered = checkBulletOrdered(state)\n  const bulletOrderedOther = state.options.bulletOrderedOther\n\n  if (!bulletOrderedOther) {\n    return bulletOrdered === '.' ? ')' : '.'\n  }\n\n  if (bulletOrderedOther !== '.' && bulletOrderedOther !== ')') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOrderedOther +\n        '` for `options.bulletOrderedOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOrderedOther === bulletOrdered) {\n    throw new Error(\n      'Expected `bulletOrdered` (`' +\n        bulletOrdered +\n        '`) and `bulletOrderedOther` (`' +\n        bulletOrderedOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOrderedOther\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\nimport {checkBullet} from './check-bullet.js'\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['bullet'], null | undefined>}\n */\nexport function checkBulletOther(state) {\n  const bullet = checkBullet(state)\n  const bulletOther = state.options.bulletOther\n\n  if (!bulletOther) {\n    return bullet === '*' ? '-' : '*'\n  }\n\n  if (bulletOther !== '*' && bulletOther !== '+' && bulletOther !== '-') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        bulletOther +\n        '` for `options.bulletOther`, expected `*`, `+`, or `-`'\n    )\n  }\n\n  if (bulletOther === bullet) {\n    throw new Error(\n      'Expected `bullet` (`' +\n        bullet +\n        '`) and `bulletOther` (`' +\n        bulletOther +\n        '`) to be different'\n    )\n  }\n\n  return bulletOther\n}\n","/**\n * @typedef {import('mdast').ListItem} ListItem\n * @typedef {import('../types.js').Map} Map\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {checkBullet} from '../util/check-bullet.js'\nimport {checkListItemIndent} from '../util/check-list-item-indent.js'\n\n/**\n * @param {ListItem} node\n * @param {Parent | undefined} parent\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function listItem(node, parent, state, info) {\n  const listItemIndent = checkListItemIndent(state)\n  let bullet = state.bulletCurrent || checkBullet(state)\n\n  // Add the marker value for ordered lists.\n  if (parent && parent.type === 'list' && parent.ordered) {\n    bullet =\n      (typeof parent.start === 'number' && parent.start > -1\n        ? parent.start\n        : 1) +\n      (state.options.incrementListMarker === false\n        ? 0\n        : parent.children.indexOf(node)) +\n      bullet\n  }\n\n  let size = bullet.length + 1\n\n  if (\n    listItemIndent === 'tab' ||\n    (listItemIndent === 'mixed' &&\n      ((parent && parent.type === 'list' && parent.spread) || node.spread))\n  ) {\n    size = Math.ceil(size / 4) * 4\n  }\n\n  const tracker = state.createTracker(info)\n  tracker.move(bullet + ' '.repeat(size - bullet.length))\n  tracker.shift(size)\n  const exit = state.enter('listItem')\n  const value = state.indentLines(\n    state.containerFlow(node, tracker.current()),\n    map\n  )\n  exit()\n\n  return value\n\n  /** @type {Map} */\n  function map(line, index, blank) {\n    if (index) {\n      return (blank ? '' : ' '.repeat(size)) + line\n    }\n\n    return (blank ? bullet : bullet + ' '.repeat(size - bullet.length)) + line\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['listItemIndent'], null | undefined>}\n */\nexport function checkListItemIndent(state) {\n  const style = state.options.listItemIndent || 'tab'\n\n  // To do: remove in a major.\n  // @ts-expect-error: deprecated.\n  if (style === 1 || style === '1') {\n    return 'one'\n  }\n\n  if (style !== 'tab' && style !== 'one' && style !== 'mixed') {\n    throw new Error(\n      'Cannot serialize items with `' +\n        style +\n        '` for `options.listItemIndent`, expected `tab`, `one`, or `mixed`'\n    )\n  }\n\n  return style\n}\n","/**\n * @typedef {import('mdast').Paragraph} Paragraph\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\n/**\n * @param {Paragraph} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function paragraph(node, _, state, info) {\n  const exit = state.enter('paragraph')\n  const subexit = state.enter('phrasing')\n  const value = state.containerPhrasing(node, info)\n  subexit()\n  exit()\n  return value\n}\n","/**\n * @typedef {import('mdast').Root} Root\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\nimport {phrasing} from 'mdast-util-phrasing'\n\n/**\n * @param {Root} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function root(node, _, state, info) {\n  // Note: `html` nodes are ambiguous.\n  const hasPhrasing = node.children.some((d) => phrasing(d))\n  const fn = hasPhrasing ? state.containerPhrasing : state.containerFlow\n  // @ts-expect-error: `root`s are supposed to have one type of content\n  return fn.call(state, node, info)\n}\n","/**\n * @typedef {import('mdast').Text} Text\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Info} Info\n */\n\n/**\n * @param {Text} node\n * @param {Parent | undefined} _\n * @param {State} state\n * @param {Info} info\n * @returns {string}\n */\nexport function text(node, _, state, info) {\n  return state.safe(node.value, info)\n}\n","/**\n * @typedef {import('mdast').ThematicBreak} ThematicBreak\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n */\n\nimport {checkRuleRepetition} from '../util/check-rule-repetition.js'\nimport {checkRule} from '../util/check-rule.js'\n\n/**\n * @param {ThematicBreak} _\n * @param {Parent | undefined} _1\n * @param {State} state\n * @returns {string}\n */\nexport function thematicBreak(_, _1, state) {\n  const value = (\n    checkRule(state) + (state.options.ruleSpaces ? ' ' : '')\n  ).repeat(checkRuleRepetition(state))\n\n  return state.options.ruleSpaces ? value.slice(0, -1) : value\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').Options} Options\n */\n\n/**\n * @param {State} state\n * @returns {Exclude<Options['ruleRepetition'], null | undefined>}\n */\nexport function checkRuleRepetition(state) {\n  const repetition = state.options.ruleRepetition || 3\n\n  if (repetition < 3) {\n    throw new Error(\n      'Cannot serialize rules with repetition `' +\n        repetition +\n        '` for `options.ruleRepetition`, expected `3` or more'\n    )\n  }\n\n  return repetition\n}\n","/**\n * @typedef {import('./types.js').Join} Join\n */\n\nimport {formatCodeAsIndented} from './util/format-code-as-indented.js'\nimport {formatHeadingAsSetext} from './util/format-heading-as-setext.js'\n\n/** @type {Array<Join>} */\nexport const join = [joinDefaults]\n\n/** @type {Join} */\nfunction joinDefaults(left, right, parent, state) {\n  // Indented code after list or another indented code.\n  if (\n    right.type === 'code' &&\n    formatCodeAsIndented(right, state) &&\n    (left.type === 'list' ||\n      (left.type === right.type && formatCodeAsIndented(left, state)))\n  ) {\n    return false\n  }\n\n  // Two lists with the same marker.\n  if (\n    left.type === 'list' &&\n    left.type === right.type &&\n    Boolean(left.ordered) === Boolean(right.ordered) &&\n    !(left.ordered\n      ? state.options.bulletOrderedOther\n      : state.options.bulletOther)\n  ) {\n    return false\n  }\n\n  // Join children of a list or an item.\n  // In which case, `parent` has a `spread` field.\n  if ('spread' in parent && typeof parent.spread === 'boolean') {\n    if (\n      left.type === 'paragraph' &&\n      // Two paragraphs.\n      (left.type === right.type ||\n        right.type === 'definition' ||\n        // Paragraph followed by a setext heading.\n        (right.type === 'heading' && formatHeadingAsSetext(right, state)))\n    ) {\n      return\n    }\n\n    return parent.spread ? 1 : 0\n  }\n}\n","/**\n * @typedef {import('./types.js').Unsafe} Unsafe\n * @typedef {import('./types.js').ConstructName} ConstructName\n */\n\n/**\n * List of constructs that occur in phrasing (paragraphs, headings), but cannot\n * contain things like attention (emphasis, strong), images, or links.\n * So they sort of cancel each other out.\n * Note: could use a better name.\n *\n * @type {Array<ConstructName>}\n */\nconst fullPhrasingSpans = [\n  'autolink',\n  'destinationLiteral',\n  'destinationRaw',\n  'reference',\n  'titleQuote',\n  'titleApostrophe'\n]\n\n/** @type {Array<Unsafe>} */\nexport const unsafe = [\n  {character: '\\t', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: '\\t', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: '\\t',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  {\n    character: '\\r',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {\n    character: '\\n',\n    inConstruct: [\n      'codeFencedLangGraveAccent',\n      'codeFencedLangTilde',\n      'codeFencedMetaGraveAccent',\n      'codeFencedMetaTilde',\n      'destinationLiteral',\n      'headingAtx'\n    ]\n  },\n  {character: ' ', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {character: ' ', before: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  {\n    character: ' ',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedLangTilde']\n  },\n  // An exclamation mark can start an image, if it is followed by a link or\n  // a link reference.\n  {\n    character: '!',\n    after: '\\\\[',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A quote can break out of a title.\n  {character: '\"', inConstruct: 'titleQuote'},\n  // A number sign could start an ATX heading if it starts a line.\n  {atBreak: true, character: '#'},\n  {character: '#', inConstruct: 'headingAtx', after: '(?:[\\r\\n]|$)'},\n  // Dollar sign and percentage are not used in markdown.\n  // An ampersand could start a character reference.\n  {character: '&', after: '[#A-Za-z]', inConstruct: 'phrasing'},\n  // An apostrophe can break out of a title.\n  {character: \"'\", inConstruct: 'titleApostrophe'},\n  // A left paren could break out of a destination raw.\n  {character: '(', inConstruct: 'destinationRaw'},\n  // A left paren followed by `]` could make something into a link or image.\n  {\n    before: '\\\\]',\n    character: '(',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  // A right paren could start a list item or break out of a destination\n  // raw.\n  {atBreak: true, before: '\\\\d+', character: ')'},\n  {character: ')', inConstruct: 'destinationRaw'},\n  // An asterisk can start thematic breaks, list items, emphasis, strong.\n  {atBreak: true, character: '*', after: '(?:[ \\t\\r\\n*])'},\n  {character: '*', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A plus sign could start a list item.\n  {atBreak: true, character: '+', after: '(?:[ \\t\\r\\n])'},\n  // A dash can start thematic breaks, list items, and setext heading\n  // underlines.\n  {atBreak: true, character: '-', after: '(?:[ \\t\\r\\n-])'},\n  // A dot could start a list item.\n  {atBreak: true, before: '\\\\d+', character: '.', after: '(?:[ \\t\\r\\n]|$)'},\n  // Slash, colon, and semicolon are not used in markdown for constructs.\n  // A less than can start html (flow or text) or an autolink.\n  // HTML could start with an exclamation mark (declaration, cdata, comment),\n  // slash (closing tag), question mark (instruction), or a letter (tag).\n  // An autolink also starts with a letter.\n  // Finally, it could break out of a destination literal.\n  {atBreak: true, character: '<', after: '[!/?A-Za-z]'},\n  {\n    character: '<',\n    after: '[!/?A-Za-z]',\n    inConstruct: 'phrasing',\n    notInConstruct: fullPhrasingSpans\n  },\n  {character: '<', inConstruct: 'destinationLiteral'},\n  // An equals to can start setext heading underlines.\n  {atBreak: true, character: '='},\n  // A greater than can start block quotes and it can break out of a\n  // destination literal.\n  {atBreak: true, character: '>'},\n  {character: '>', inConstruct: 'destinationLiteral'},\n  // Question mark and at sign are not used in markdown for constructs.\n  // A left bracket can start definitions, references, labels,\n  {atBreak: true, character: '['},\n  {character: '[', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  {character: '[', inConstruct: ['label', 'reference']},\n  // A backslash can start an escape (when followed by punctuation) or a\n  // hard break (when followed by an eol).\n  // Note: typical escapes are handled in `safe`!\n  {character: '\\\\', after: '[\\\\r\\\\n]', inConstruct: 'phrasing'},\n  // A right bracket can exit labels.\n  {character: ']', inConstruct: ['label', 'reference']},\n  // Caret is not used in markdown for constructs.\n  // An underscore can start emphasis, strong, or a thematic break.\n  {atBreak: true, character: '_'},\n  {character: '_', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // A grave accent can start code (fenced or text), or it can break out of\n  // a grave accent code fence.\n  {atBreak: true, character: '`'},\n  {\n    character: '`',\n    inConstruct: ['codeFencedLangGraveAccent', 'codeFencedMetaGraveAccent']\n  },\n  {character: '`', inConstruct: 'phrasing', notInConstruct: fullPhrasingSpans},\n  // Left brace, vertical bar, right brace are not used in markdown for\n  // constructs.\n  // A tilde can start code (fenced).\n  {atBreak: true, character: '~'}\n]\n","/**\n * @typedef {import('../types.js').AssociationId} AssociationId\n */\n\nimport {decodeString} from 'micromark-util-decode-string'\n\n/**\n * Get an identifier from an association to match it to others.\n *\n * Associations are nodes that match to something else through an ID:\n * <https://github.com/syntax-tree/mdast#association>.\n *\n * The `label` of an association is the string value: character escapes and\n * references work, and casing is intact.\n * The `identifier` is used to match one association to another:\n * controversially, character escapes and references don’t work in this\n * matching: `&copy;` does not match `©`, and `\\+` does not match `+`.\n *\n * But casing is ignored (and whitespace) is trimmed and collapsed: ` A\\nb`\n * matches `a b`.\n * So, we do prefer the label when figuring out how we’re going to serialize:\n * it has whitespace, casing, and we can ignore most useless character\n * escapes and all character references.\n *\n * @type {AssociationId}\n */\nexport function association(node) {\n  if (node.label || !node.identifier) {\n    return node.label || ''\n  }\n\n  return decodeString(node.identifier)\n}\n","/**\n * @typedef {import('../types.js').FlowContent} FlowContent\n * @typedef {import('../types.js').Node} Node\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').TrackFields} TrackFields\n */\n\n/**\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nexport function containerFlow(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  const tracker = state.createTracker(info)\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n\n  indexStack.push(-1)\n\n  while (++index < children.length) {\n    const child = children[index]\n\n    indexStack[indexStack.length - 1] = index\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          before: '\\n',\n          after: '\\n',\n          ...tracker.current()\n        })\n      )\n    )\n\n    if (child.type !== 'list') {\n      state.bulletLastUsed = undefined\n    }\n\n    if (index < children.length - 1) {\n      results.push(\n        tracker.move(between(child, children[index + 1], parent, state))\n      )\n    }\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n\n/**\n * @param {Node} left\n * @param {Node} right\n * @param {Parent} parent\n * @param {State} state\n * @returns {string}\n */\nfunction between(left, right, parent, state) {\n  let index = state.join.length\n\n  while (index--) {\n    const result = state.join[index](left, right, parent, state)\n\n    if (result === true || result === 1) {\n      break\n    }\n\n    if (typeof result === 'number') {\n      return '\\n'.repeat(1 + result)\n    }\n\n    if (result === false) {\n      return '\\n\\n<!---->\\n\\n'\n    }\n  }\n\n  return '\\n\\n'\n}\n","/**\n * @typedef {import('../types.js').IndentLines} IndentLines\n */\n\nconst eol = /\\r?\\n|\\r/g\n\n/**\n * @type {IndentLines}\n */\nexport function indentLines(value, map) {\n  /** @type {Array<string>} */\n  const result = []\n  let start = 0\n  let line = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = eol.exec(value))) {\n    one(value.slice(start, match.index))\n    result.push(match[0])\n    start = match.index + match[0].length\n    line++\n  }\n\n  one(value.slice(start))\n\n  return result.join('')\n\n  /**\n   * @param {string} value\n   */\n  function one(value) {\n    result.push(map(value, line, !value))\n  }\n}\n","/**\n * @typedef {import('../types.js').State} State\n * @typedef {import('../types.js').SafeConfig} SafeConfig\n */\n\nimport {patternCompile} from './pattern-compile.js'\nimport {patternInScope} from './pattern-in-scope.js'\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @param {State} state\n *   Info passed around about the current state.\n * @param {string | null | undefined} input\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nexport function safe(state, input, config) {\n  const value = (config.before || '') + (input || '') + (config.after || '')\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const result = []\n  /** @type {Record<number, {before: boolean, after: boolean}>} */\n  const infos = {}\n  let index = -1\n\n  while (++index < state.unsafe.length) {\n    const pattern = state.unsafe[index]\n\n    if (!patternInScope(state.stack, pattern)) {\n      continue\n    }\n\n    const expression = patternCompile(pattern)\n    /** @type {RegExpExecArray | null} */\n    let match\n\n    while ((match = expression.exec(value))) {\n      const before = 'before' in pattern || Boolean(pattern.atBreak)\n      const after = 'after' in pattern\n      const position = match.index + (before ? match[1].length : 0)\n\n      if (positions.includes(position)) {\n        if (infos[position].before && !before) {\n          infos[position].before = false\n        }\n\n        if (infos[position].after && !after) {\n          infos[position].after = false\n        }\n      } else {\n        positions.push(position)\n        infos[position] = {before, after}\n      }\n    }\n  }\n\n  positions.sort(numerical)\n\n  let start = config.before ? config.before.length : 0\n  const end = value.length - (config.after ? config.after.length : 0)\n  index = -1\n\n  while (++index < positions.length) {\n    const position = positions[index]\n\n    // Character before or after matched:\n    if (position < start || position >= end) {\n      continue\n    }\n\n    // If this character is supposed to be escaped because it has a condition on\n    // the next character, and the next character is definitly being escaped,\n    // then skip this escape.\n    if (\n      (position + 1 < end &&\n        positions[index + 1] === position + 1 &&\n        infos[position].after &&\n        !infos[position + 1].before &&\n        !infos[position + 1].after) ||\n      (positions[index - 1] === position - 1 &&\n        infos[position].before &&\n        !infos[position - 1].before &&\n        !infos[position - 1].after)\n    ) {\n      continue\n    }\n\n    if (start !== position) {\n      // If we have to use a character reference, an ampersand would be more\n      // correct, but as backslashes only care about punctuation, either will\n      // do the trick\n      result.push(escapeBackslashes(value.slice(start, position), '\\\\'))\n    }\n\n    start = position\n\n    if (\n      /[!-/:-@[-`{-~]/.test(value.charAt(position)) &&\n      (!config.encode || !config.encode.includes(value.charAt(position)))\n    ) {\n      // Character escape.\n      result.push('\\\\')\n    } else {\n      // Character reference.\n      result.push(\n        '&#x' + value.charCodeAt(position).toString(16).toUpperCase() + ';'\n      )\n      start++\n    }\n  }\n\n  result.push(escapeBackslashes(value.slice(start, end), config.after))\n\n  return result.join('')\n}\n\n/**\n * @param {number} a\n * @param {number} b\n * @returns {number}\n */\nfunction numerical(a, b) {\n  return a - b\n}\n\n/**\n * @param {string} value\n * @param {string} after\n * @returns {string}\n */\nfunction escapeBackslashes(value, after) {\n  const expression = /\\\\(?=[!-/:-@[-`{-~])/g\n  /** @type {Array<number>} */\n  const positions = []\n  /** @type {Array<string>} */\n  const results = []\n  const whole = value + after\n  let index = -1\n  let start = 0\n  /** @type {RegExpExecArray | null} */\n  let match\n\n  while ((match = expression.exec(whole))) {\n    positions.push(match.index)\n  }\n\n  while (++index < positions.length) {\n    if (start !== positions[index]) {\n      results.push(value.slice(start, positions[index]))\n    }\n\n    results.push('\\\\')\n    start = positions[index]\n  }\n\n  results.push(value.slice(start))\n\n  return results.join('')\n}\n","/**\n * @typedef {import('../types.js').CreateTracker} CreateTracker\n * @typedef {import('../types.js').TrackCurrent} TrackCurrent\n * @typedef {import('../types.js').TrackMove} TrackMove\n * @typedef {import('../types.js').TrackShift} TrackShift\n */\n\n/**\n * Track positional info in the output.\n *\n * @type {CreateTracker}\n */\nexport function track(config) {\n  // Defaults are used to prevent crashes when older utilities somehow activate\n  // this code.\n  /* c8 ignore next 5 */\n  const options = config || {}\n  const now = options.now || {}\n  let lineShift = options.lineShift || 0\n  let line = now.line || 1\n  let column = now.column || 1\n\n  return {move, current, shift}\n\n  /**\n   * Get the current tracked info.\n   *\n   * @type {TrackCurrent}\n   */\n  function current() {\n    return {now: {line, column}, lineShift}\n  }\n\n  /**\n   * Define an increased line shift (the typical indent for lines).\n   *\n   * @type {TrackShift}\n   */\n  function shift(value) {\n    lineShift += value\n  }\n\n  /**\n   * Move past some generated markdown.\n   *\n   * @type {TrackMove}\n   */\n  function move(input) {\n    // eslint-disable-next-line unicorn/prefer-default-parameters\n    const value = input || ''\n    const chunks = value.split(/\\r?\\n|\\r/g)\n    const tail = chunks[chunks.length - 1]\n    line += chunks.length - 1\n    column =\n      chunks.length === 1 ? column + tail.length : 1 + tail.length + lineShift\n    return value\n  }\n}\n","/**\n * @typedef {import('./types.js').Enter} Enter\n * @typedef {import('./types.js').Info} Info\n * @typedef {import('./types.js').Join} Join\n * @typedef {import('./types.js').FlowContent} FlowContent\n * @typedef {import('./types.js').Node} Node\n * @typedef {import('./types.js').Options} Options\n * @typedef {import('./types.js').Parent} Parent\n * @typedef {import('./types.js').PhrasingContent} PhrasingContent\n * @typedef {import('./types.js').SafeConfig} SafeConfig\n * @typedef {import('./types.js').State} State\n * @typedef {import('./types.js').TrackFields} TrackFields\n */\n\nimport {zwitch} from 'zwitch'\nimport {configure} from './configure.js'\nimport {handle as handlers} from './handle/index.js'\nimport {join} from './join.js'\nimport {unsafe} from './unsafe.js'\nimport {association} from './util/association.js'\nimport {containerPhrasing} from './util/container-phrasing.js'\nimport {containerFlow} from './util/container-flow.js'\nimport {indentLines} from './util/indent-lines.js'\nimport {safe} from './util/safe.js'\nimport {track} from './util/track.js'\n\n/**\n * Turn an mdast syntax tree into markdown.\n *\n * @param {Node} tree\n *   Tree to serialize.\n * @param {Options} [options]\n *   Configuration (optional).\n * @returns {string}\n *   Serialized markdown representing `tree`.\n */\nexport function toMarkdown(tree, options = {}) {\n  /** @type {State} */\n  const state = {\n    enter,\n    indentLines,\n    associationId: association,\n    containerPhrasing: containerPhrasingBound,\n    containerFlow: containerFlowBound,\n    createTracker: track,\n    safe: safeBound,\n    stack: [],\n    unsafe: [],\n    join: [],\n    // @ts-expect-error: we’ll fill it next.\n    handlers: {},\n    options: {},\n    indexStack: [],\n    // @ts-expect-error: we’ll add `handle` later.\n    handle: undefined\n  }\n\n  configure(state, {unsafe, join, handlers})\n  configure(state, options)\n\n  if (state.options.tightDefinitions) {\n    configure(state, {join: [joinDefinition]})\n  }\n\n  state.handle = zwitch('type', {\n    invalid,\n    unknown,\n    handlers: state.handlers\n  })\n\n  let result = state.handle(tree, undefined, state, {\n    before: '\\n',\n    after: '\\n',\n    now: {line: 1, column: 1},\n    lineShift: 0\n  })\n\n  if (\n    result &&\n    result.charCodeAt(result.length - 1) !== 10 &&\n    result.charCodeAt(result.length - 1) !== 13\n  ) {\n    result += '\\n'\n  }\n\n  return result\n\n  /** @type {Enter} */\n  function enter(name) {\n    state.stack.push(name)\n    return exit\n\n    function exit() {\n      state.stack.pop()\n    }\n  }\n}\n\n/**\n * @param {unknown} value\n * @returns {never}\n */\nfunction invalid(value) {\n  throw new Error('Cannot handle value `' + value + '`, expected node')\n}\n\n/**\n * @param {unknown} node\n * @returns {never}\n */\nfunction unknown(node) {\n  // @ts-expect-error: fine.\n  throw new Error('Cannot handle unknown node `' + node.type + '`')\n}\n\n/** @type {Join} */\nfunction joinDefinition(left, right) {\n  // No blank line between adjacent definitions.\n  if (left.type === 'definition' && left.type === right.type) {\n    return 0\n  }\n}\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nfunction containerPhrasingBound(parent, info) {\n  return containerPhrasing(parent, this, info)\n}\n\n/**\n * Serialize the children of a parent that contains flow children.\n *\n * These children will typically be joined by blank lines.\n * What they are joined by exactly is defined by `Join` functions.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {Parent & {children: Array<FlowContent>}} parent\n *   Parent of flow nodes.\n * @param {TrackFields} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined by (blank) lines.\n */\nfunction containerFlowBound(parent, info) {\n  return containerFlow(parent, this, info)\n}\n\n/**\n * Make a string safe for embedding in markdown constructs.\n *\n * In markdown, almost all punctuation characters can, in certain cases,\n * result in something.\n * Whether they do is highly subjective to where they happen and in what\n * they happen.\n *\n * To solve this, `mdast-util-to-markdown` tracks:\n *\n * * Characters before and after something;\n * * What “constructs” we are in.\n *\n * This information is then used by this function to escape or encode\n * special characters.\n *\n * @this {State}\n *   Info passed around about the current state.\n * @param {string | null | undefined} value\n *   Raw value to make safe.\n * @param {SafeConfig} config\n *   Configuration.\n * @returns {string}\n *   Serialized markdown safe for embedding.\n */\nfunction safeBound(value, config) {\n  return safe(this, value, config)\n}\n","/**\n * @typedef {import('../types.js').Handle} Handle\n * @typedef {import('../types.js').Info} Info\n * @typedef {import('../types.js').Parent} Parent\n * @typedef {import('../types.js').PhrasingContent} PhrasingContent\n * @typedef {import('../types.js').State} State\n */\n\n/**\n * Serialize the children of a parent that contains phrasing children.\n *\n * These children will be joined flush together.\n *\n * @param {Parent & {children: Array<PhrasingContent>}} parent\n *   Parent of flow nodes.\n * @param {State} state\n *   Info passed around about the current state.\n * @param {Info} info\n *   Info on where we are in the document we are generating.\n * @returns {string}\n *   Serialized children, joined together.\n */\nexport function containerPhrasing(parent, state, info) {\n  const indexStack = state.indexStack\n  const children = parent.children || []\n  /** @type {Array<string>} */\n  const results = []\n  let index = -1\n  let before = info.before\n\n  indexStack.push(-1)\n  let tracker = state.createTracker(info)\n\n  while (++index < children.length) {\n    const child = children[index]\n    /** @type {string} */\n    let after\n\n    indexStack[indexStack.length - 1] = index\n\n    if (index + 1 < children.length) {\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      let handle = state.handle.handlers[children[index + 1].type]\n      /** @type {Handle} */\n      // @ts-expect-error: hush, it’s actually a `zwitch`.\n      if (handle && handle.peek) handle = handle.peek\n      after = handle\n        ? handle(children[index + 1], parent, state, {\n            before: '',\n            after: '',\n            ...tracker.current()\n          }).charAt(0)\n        : ''\n    } else {\n      after = info.after\n    }\n\n    // In some cases, html (text) can be found in phrasing right after an eol.\n    // When we’d serialize that, in most cases that would be seen as html\n    // (flow).\n    // As we can’t escape or so to prevent it from happening, we take a somewhat\n    // reasonable approach: replace that eol with a space.\n    // See: <https://github.com/syntax-tree/mdast-util-to-markdown/issues/15>\n    if (\n      results.length > 0 &&\n      (before === '\\r' || before === '\\n') &&\n      child.type === 'html'\n    ) {\n      results[results.length - 1] = results[results.length - 1].replace(\n        /(\\r?\\n|\\r)$/,\n        ' '\n      )\n      before = ' '\n\n      // To do: does this work to reset tracker?\n      tracker = state.createTracker(info)\n      tracker.move(results.join(''))\n    }\n\n    results.push(\n      tracker.move(\n        state.handle(child, parent, state, {\n          ...tracker.current(),\n          before,\n          after\n        })\n      )\n    )\n\n    before = results[results.length - 1].slice(-1)\n  }\n\n  indexStack.pop()\n\n  return results.join('')\n}\n","import remarkStringify from './lib/index.js'\n\nexport default remarkStringify\n","/**\n * @typedef {import('mdast').Root|import('mdast').Content} Node\n * @typedef {import('mdast-util-to-markdown').Options} ToMarkdownOptions\n * @typedef {Omit<ToMarkdownOptions, 'extensions'>} Options\n */\n\nimport {toMarkdown} from 'mdast-util-to-markdown'\n\n/** @type {import('unified').Plugin<[Options]|void[], Node, string>} */\nexport default function remarkStringify(options) {\n  /** @type {import('unified').CompilerFunction<Node, string>} */\n  const compiler = (tree) => {\n    // Assume options.\n    const settings = /** @type {Options} */ (this.data('settings'))\n\n    return toMarkdown(\n      tree,\n      Object.assign({}, settings, options, {\n        // Note: this option is not in the readme.\n        // The goal is for it to be set by plugins on `data` instead of being\n        // passed by users.\n        extensions:\n          /** @type {ToMarkdownOptions['extensions']} */ (\n            this.data('toMarkdownExtensions')\n          ) || []\n      })\n    )\n  }\n\n  Object.assign(this, {Compiler: compiler})\n}\n","import {unified} from 'unified'\nimport remarkParse from 'remark-parse'\nimport remarkStringify from 'remark-stringify'\n\nexport const remark = unified().use(remarkParse).use(remarkStringify).freeze()\n","\r\n\r\nexport default function normalizeObject(obj) {\r\n    var result = [];\r\n    if (Array.isArray(obj)) {\r\n        for (let i of obj) {\r\n            result.push(normalizeObject(i));\r\n        }\r\n    } else if (typeof obj == \"object\") {\r\n        for (let i of Object.keys(obj)) {\r\n            result.push({ name: i, value: normalizeObject(obj[i]) });\r\n        }\r\n    } else {\r\n        return obj;\r\n    }\r\n    return result;\r\n}","\r\n\r\n\r\nconst parseCodeStr = (item, arr) => {\r\n    let headReg = /<\\/head>/\r\n    let tailReg = /<\\/html>/\r\n    let seedReg = /--fcc-editable-region--/\r\n    if (headReg.test(item.value)) {\r\n        let splitHead = item.value.split(headReg)\r\n        let cutOffTail = splitHead[1].split(tailReg)\r\n        item.value = cutOffTail[0]\r\n    }\r\n    if (seedReg.test(item.value)) {\r\n        let splitCode = item.value.split(seedReg)\r\n        let editable = {}\r\n        let codeStr = \"\"\r\n        editable.text = \"```\" + item.lang + item.value + \"```\"\r\n        arr.push(editable)\r\n        codeStr += splitCode[0] + splitCode[2]\r\n        item.value = codeStr\r\n    }\r\n\r\n    return item\r\n}\r\n\r\n\r\nexport default parseCodeStr","\n\n\nconst germinateSeeds = (arr) => {\n    let htmlData\n    let cssData\n    let jsData\n    let newCssData\n    let notSoClassyHtml\n    let htmlStr\n    let jStr = \"\"\n    let mkdStr = \"\"\n    if (arr.filter(item => item.lang === \"html\" && item.type === \"code\").length > 0) {\n        htmlData = arr.filter(item => item.lang === \"html\" && item.type === \"code\")[0].value\n    }\n    if (arr.filter(item => item.lang === \"css\" && item.type === \"code\").length > 0) {\n        cssData = arr.filter(item => item.lang === \"css\" && item.type === \"code\")[0].value\n    }\n    if (arr.filter(item => item.lang === \"js\" && item.type === \"code\").length > 0) {\n        jsData = arr.filter(item => item.lang === \"js\" && item.type === \"code\")[0].value\n    }\n    if(!htmlData){\n        mkdStr = \"\"\n        return mkdStr\n    }\n    if (!cssData && !jsData) {\n        mkdStr = htmlData.trim()\n    }\n    if (cssData) {\n        newCssData = cssData.replace(\":root\", \":host\")\n        notSoClassyHtml = htmlData.replaceAll(\"class\", \"className\")\n        htmlStr = \"<style>\\n\" + newCssData.trim() + \"</style>\" + notSoClassyHtml.trim()\n    }\n    if (cssData && !jsData) {\n        mkdStr = htmlStr.trim()\n    }\n    if (jsData) {\n        jStr = \"<script defer>\\n\" + jsData.trim() + \"\\n</script>\\n\".trim()\n        mkdStr = jStr.trim() + htmlStr.trim()\n    }\n    return mkdStr.trim()\n}\n\n\nexport default germinateSeeds","import parseCodeStr from \"./parseCodeStr\"\r\nimport germinateSeeds from \"./germinateSeeds\"\r\n\r\nconst parseMd = (data) => {\r\n    let description = []\r\n    let hints = []\r\n    let seed = []\r\n    let editableRegion = []\r\n    const endDesc = data.filter(item => item.type === \"heading\" && item.children[0].value === \"--description--\")[0].position.end.line\r\n    const startHint = data.filter(item => item.type === \"heading\" && item.children[0].value === \"--hints--\")[0].position.start.line\r\n    const endHint = data.filter(item => item.type === \"heading\" && item.children[0].value === \"--hints--\")[0].position.end.line\r\n    const startSeed = data.filter(item => item.type === \"heading\" && item.children[0].value === \"--seed--\")[0].position.start.line\r\n    // const endSeed = data.filter(item => item.type === \"heading\" && item.children[0].value === \"--seed--\")[0].position.end.line\r\n    const startSeedContents = data.filter(item => item.type === \"heading\" && item.children[0].value === \"--seed-contents--\")[0].position.start.line\r\n\r\n    data.forEach(item => {\r\n        if (item.children && item.position.start.line > endDesc && item.position.end.line < startHint) {\r\n            description.push(item)\r\n        }\r\n        if (item.children && item.position.start.line > endHint && item.position.end.line < startSeed) {\r\n            hints.push(item)\r\n        }\r\n        if (item.position.start.line > startSeedContents) {\r\n            parseCodeStr(item, editableRegion)\r\n            seed.push(item)\r\n        }\r\n    })\r\n\r\n    let obj = {}\r\n    obj.description = description\r\n    obj.hints = hints\r\n    obj.seed = germinateSeeds(seed)\r\n    obj.editReg = editableRegion\r\n    return obj\r\n}\r\n\r\n\r\n\r\nexport default parseMd","const setElementType = (entry) => {\r\n    switch (entry.type) {\r\n        case \"text\":\r\n            return \"span\";\r\n        case \"paragraph\":\r\n            return \"p\";\r\n        case \"heading\":\r\n            switch (entry.depth) {\r\n                case 1:\r\n                    return 'h1';\r\n                case 2:\r\n                    return 'h2'\r\n                default:\r\n                    return 'h3'\r\n            }\r\n        case \"code\":\r\n            return 'code'\r\n        case \"inlineCode\": // what element should be returned for this type? I don't think 'code' is appropriate\r\n            return 'em' // using 'em' for now\r\n        default:\r\n            return 'span'\r\n    }\r\n};\r\n\r\nexport default setElementType","import React from \"react\";\r\nimport setElementType from \"../js/setElementType\";\r\n//import Markdown from \"markdown-to-jsx\"\r\n\r\nconst ElementTree = (props) => {\r\n    return Array.from(props.data).map(\r\n        (item, i) =>\r\n            React.createElement(setElementType(item), { key: i }, item.children.map((entry, y) => React.createElement(setElementType(entry), { key: y }, entry.value)))\r\n    )\r\n    // return Array.from(props.data).map(\r\n    //     (item, i) => !item.children ? <Markdown chidlren={item} key={i} /> : item.children.map((child, y) => <Markdown children={child.value} key={y} />)\r\n    // )\r\n}\r\n\r\nexport default ElementTree\r\n\r\n","// extracted by mini-css-extract-plugin\nexport var wrapper = \"description-module--wrapper--9e7d3\";","import React from 'react'\r\nimport ElementTree from './ElementTree';\r\nimport * as descStyles from \"../styles/description.module.css\"\r\n\r\nexport default function Description(props) {\r\n    return (\r\n        <div className={descStyles.wrapper}>\r\n            <ElementTree data={props.data} />\r\n        </div>\r\n    );\r\n}\r\n","// extracted by mini-css-extract-plugin\nexport var modal = \"modal-module--modal--b7954\";","import React from \"react\"\nimport * as modalStyles from \"../styles/modal.module.css\"\n\n\nexport default function Modal(props){\n    return (\n        <div>\n            <dialog open={props.open} className={modalStyles.modal}>\n              { props.children }\n            </dialog>\n        </div>\n    );\n}","// extracted by mini-css-extract-plugin\nexport var btnDiv = \"hint-module--btnDiv--098d4\";\nexport var closeBtn = \"hint-module--closeBtn--617f5\";\nexport var hintDiv = \"hint-module--hintDiv--efdb8\";\nexport var hintWrapper = \"hint-module--hintWrapper--cf71d\";","import React from 'react'\nimport Modal from './Modal';\nimport ElementTree from './ElementTree';\nimport * as hintStyles from \"../styles/hint.module.css\"\n\nexport default function Hint(props) {\n \n    return (\n        <Modal open={props.open}>\n            <div className={hintStyles.hintWrapper}>\n                <div className={hintStyles.btnDiv}>\n                    <button onClick={() => props.handleOpen(false)} className={hintStyles.closeBtn}>X CLOSE</button>\n                </div>\n                <div className={hintStyles.hintDiv}>\n                    <ElementTree data={props.data} />\n                </div>\n            </div>\n        </Modal>\n    );\n}","import*as t from\"react\";function n(){return n=Object.assign||function(t){for(var n=1;n<arguments.length;n++){var e=arguments[n];for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r])}return t},n.apply(this,arguments)}const e=[\"children\",\"options\"],r=[\"allowFullScreen\",\"allowTransparency\",\"autoComplete\",\"autoFocus\",\"autoPlay\",\"cellPadding\",\"cellSpacing\",\"charSet\",\"className\",\"classId\",\"colSpan\",\"contentEditable\",\"contextMenu\",\"crossOrigin\",\"encType\",\"formAction\",\"formEncType\",\"formMethod\",\"formNoValidate\",\"formTarget\",\"frameBorder\",\"hrefLang\",\"inputMode\",\"keyParams\",\"keyType\",\"marginHeight\",\"marginWidth\",\"maxLength\",\"mediaGroup\",\"minLength\",\"noValidate\",\"radioGroup\",\"readOnly\",\"rowSpan\",\"spellCheck\",\"srcDoc\",\"srcLang\",\"srcSet\",\"tabIndex\",\"useMap\"].reduce((t,n)=>(t[n.toLowerCase()]=n,t),{for:\"htmlFor\"}),o={amp:\"&\",apos:\"'\",gt:\">\",lt:\"<\",nbsp:\" \",quot:\"“\"},c=[\"style\",\"script\"],a=/([-A-Z0-9_:]+)(?:\\s*=\\s*(?:(?:\"((?:\\\\.|[^\"])*)\")|(?:'((?:\\\\.|[^'])*)')|(?:\\{((?:\\\\.|{[^}]*?}|[^}])*)\\})))?/gi,_=/mailto:/i,u=/\\n{2,}$/,i=/^( *>[^\\n]+(\\n[^\\n]+)*\\n*)+\\n{2,}/,l=/^ *> ?/gm,s=/^ {2,}\\n/,f=/^(?:( *[-*_])){3,} *(?:\\n *)+\\n/,d=/^\\s*(`{3,}|~{3,}) *(\\S+)?([^\\n]*?)?\\n([\\s\\S]+?)\\s*\\1 *(?:\\n *)*\\n?/,p=/^(?: {4}[^\\n]+\\n*)+(?:\\n *)+\\n?/,m=/^(`+)\\s*([\\s\\S]*?[^`])\\s*\\1(?!`)/,g=/^(?:\\n *)*\\n/,y=/\\r\\n?/g,h=/^\\[\\^([^\\]]+)](:.*)\\n/,k=/^\\[\\^([^\\]]+)]/,x=/\\f/g,b=/^\\s*?\\[(x|\\s)\\]/,v=/^ *(#{1,6}) *([^\\n]+?)(?: +#*)?(?:\\n *)*(?:\\n|$)/,$=/^([^\\n]+)\\n *(=|-){3,} *(?:\\n *)+\\n/,S=/^ *(?!<[a-z][^ >/]* ?\\/>)<([a-z][^ >/]*) ?([^>]*)\\/{0}>\\n?(\\s*(?:<\\1[^>]*?>[\\s\\S]*?<\\/\\1>|(?!<\\1)[\\s\\S])*?)<\\/\\1>\\n*/i,z=/&([a-zA-Z]+);/g,w=/^<!--[\\s\\S]*?(?:-->)/,A=/^(data|aria|x)-[a-z_][a-z\\d_.-]*$/,E=/^ *<([a-z][a-z0-9:]*)(?:\\s+((?:<.*?>|[^>])*))?\\/?>(?!<\\/\\1>)(\\s*\\n)?/i,L=/^\\{.*\\}$/,M=/^(https?:\\/\\/[^\\s<]+[^<.,:;\"')\\]\\s])/,I=/^<([^ >]+@[^ >]+)>/,O=/^<([^ >]+:\\/[^ >]+)>/,B=/-([a-z])?/gi,R=/^(.*\\|?.*)\\n *(\\|? *[-:]+ *\\|[-| :]*)\\n((?:.*\\|.*\\n)*)\\n?/,T=/^\\[([^\\]]*)\\]:\\s+<?([^\\s>]+)>?\\s*(\"([^\"]*)\")?/,j=/^!\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,C=/^\\[([^\\]]*)\\] ?\\[([^\\]]*)\\]/,D=/(\\[|\\])/g,N=/(\\n|^[-*]\\s|^#|^ {2,}|^-{2,}|^>\\s)/,Z=/\\t/g,F=/^ *\\| */,P=/(^ *\\||\\| *$)/g,G=/ *$/,H=/^ *:-+: *$/,q=/^ *:-+ *$/,U=/^ *-+: *$/,V=/^([*_])\\1((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1\\1(?!\\1)/,W=/^([*_])((?:\\[.*?\\][([].*?[)\\]]|<.*?>(?:.*?<.*?>)?|`.*?`|~+.*?~+|.)*?)\\1(?!\\1|\\w)/,Q=/^==((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)==/,X=/^~~((?:\\[.*?\\]|<.*?>(?:.*?<.*?>)?|`.*?`|.)*?)~~/,J=/^\\\\([^0-9A-Za-z\\s])/,K=/^[\\s\\S]+?(?=[^0-9A-Z\\s\\u00c0-\\uffff&;.()'\"]|\\d+\\.|\\n\\n| {2,}\\n|\\w+:\\S|$)/i,Y=/^\\n+/,tt=/^([ \\t]*)/,nt=/\\\\([^\\\\])/g,et=/ *\\n+$/,rt=/(?:^|\\n)( *)$/,ot=\"(?:\\\\d+\\\\.)\",ct=\"(?:[*+-])\";function at(t){return\"( *)(\"+(1===t?ot:ct)+\") +\"}const _t=at(1),ut=at(2);function it(t){return new RegExp(\"^\"+(1===t?_t:ut))}const lt=it(1),st=it(2);function ft(t){return new RegExp(\"^\"+(1===t?_t:ut)+\"[^\\\\n]*(?:\\\\n(?!\\\\1\"+(1===t?ot:ct)+\" )[^\\\\n]*)*(\\\\n|$)\",\"gm\")}const dt=ft(1),pt=ft(2);function mt(t){const n=1===t?ot:ct;return new RegExp(\"^( *)(\"+n+\") [\\\\s\\\\S]+?(?:\\\\n{2,}(?! )(?!\\\\1\"+n+\" (?!\"+n+\" ))\\\\n*|\\\\s*\\\\n*$)\")}const gt=mt(1),yt=mt(2);function ht(t,n){const e=1===n,r=e?gt:yt,o=e?dt:pt,c=e?lt:st;return{t(t,n,e){const o=rt.exec(e);return o&&(n.o||!n._&&!n.u)?r.exec(t=o[1]+t):null},i:Gt.HIGH,l(t,n,r){const a=e?+t[2]:void 0,_=t[0].replace(u,\"\\n\").match(o);let i=!1;return{p:_.map(function(t,e){const o=c.exec(t)[0].length,a=new RegExp(\"^ {1,\"+o+\"}\",\"gm\"),u=t.replace(a,\"\").replace(c,\"\"),l=e===_.length-1,s=-1!==u.indexOf(\"\\n\\n\")||l&&i;i=s;const f=r._,d=r.o;let p;r.o=!0,s?(r._=!1,p=u.replace(et,\"\\n\\n\")):(r._=!0,p=u.replace(et,\"\"));const m=n(p,r);return r._=f,r.o=d,m}),m:e,g:a}},h:(n,e,r)=>t(n.m?\"ol\":\"ul\",{key:r.k,start:n.g},n.p.map(function(n,o){return t(\"li\",{key:o},e(n,r))}))}}const kt=/^\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/,xt=/^!\\[([^\\]]*)]\\( *((?:\\([^)]*\\)|[^() ])*) *\"?([^)\"]*)?\"?\\)/,bt=[i,d,p,v,$,w,R,dt,gt,pt,yt],vt=[...bt,/^[^\\n]+(?:  \\n|\\n{2,})/,S,E];function $t(t){return t.replace(/[ÀÁÂÃÄÅàáâãäåæÆ]/g,\"a\").replace(/[çÇ]/g,\"c\").replace(/[ðÐ]/g,\"d\").replace(/[ÈÉÊËéèêë]/g,\"e\").replace(/[ÏïÎîÍíÌì]/g,\"i\").replace(/[Ññ]/g,\"n\").replace(/[øØœŒÕõÔôÓóÒò]/g,\"o\").replace(/[ÜüÛûÚúÙù]/g,\"u\").replace(/[ŸÿÝý]/g,\"y\").replace(/[^a-z0-9- ]/gi,\"\").replace(/ /gi,\"-\").toLowerCase()}function St(t){return U.test(t)?\"right\":H.test(t)?\"center\":q.test(t)?\"left\":null}function zt(t,n,e){const r=e.v;e.v=!0;const o=n(t.trim(),e);e.v=r;let c=[[]];return o.forEach(function(t,n){\"tableSeparator\"===t.type?0!==n&&n!==o.length-1&&c.push([]):(\"text\"!==t.type||null!=o[n+1]&&\"tableSeparator\"!==o[n+1].type||(t.$=t.$.replace(G,\"\")),c[c.length-1].push(t))}),c}function wt(t,n,e){e._=!0;const r=zt(t[1],n,e),o=t[2].replace(P,\"\").split(\"|\").map(St),c=function(t,n,e){return t.trim().split(\"\\n\").map(function(t){return zt(t,n,e)})}(t[3],n,e);return e._=!1,{S:o,A:c,L:r,type:\"table\"}}function At(t,n){return null==t.S[n]?{}:{textAlign:t.S[n]}}function Et(t){return function(n,e){return e._?t.exec(n):null}}function Lt(t){return function(n,e){return e._||e.u?t.exec(n):null}}function Mt(t){return function(n,e){return e._||e.u?null:t.exec(n)}}function It(t){return function(n){return t.exec(n)}}function Ot(t,n,e){if(n._||n.u)return null;if(e&&!e.endsWith(\"\\n\"))return null;let r=\"\";t.split(\"\\n\").every(t=>!bt.some(n=>n.test(t))&&(r+=t+\"\\n\",t.trim()));const o=r.trimEnd();return\"\"==o?null:[r,o]}function Bt(t){try{if(decodeURIComponent(t).replace(/[^A-Za-z0-9/:]/g,\"\").match(/^\\s*(javascript|vbscript|data(?!:image)):/i))return null}catch(t){return null}return t}function Rt(t){return t.replace(nt,\"$1\")}function Tt(t,n,e){const r=e._||!1,o=e.u||!1;e._=!0,e.u=!0;const c=t(n,e);return e._=r,e.u=o,c}function jt(t,n,e){const r=e._||!1,o=e.u||!1;e._=!1,e.u=!0;const c=t(n,e);return e._=r,e.u=o,c}function Ct(t,n,e){return e._=!1,t(n+\"\\n\\n\",e)}const Dt=(t,n,e)=>({$:Tt(n,t[1],e)});function Nt(){return{}}function Zt(){return null}function Ft(...t){return t.filter(Boolean).join(\" \")}function Pt(t,n,e){let r=t;const o=n.split(\".\");for(;o.length&&(r=r[o[0]],void 0!==r);)o.shift();return r||e}var Gt;function Ht(e,u={}){u.overrides=u.overrides||{},u.slugify=u.slugify||$t,u.namedCodesToUnicode=u.namedCodesToUnicode?n({},o,u.namedCodesToUnicode):o;const P=u.createElement||t.createElement;function G(t,e,...r){const o=Pt(u.overrides,`${t}.props`,{});return P(function(t,n){const e=Pt(n,t);return e?\"function\"==typeof e||\"object\"==typeof e&&\"render\"in e?e:Pt(n,`${t}.component`,t):t}(t,u.overrides),n({},e,o,{className:Ft(null==e?void 0:e.className,o.className)||void 0}),...r)}function H(n){let e=!1;u.forceInline?e=!0:u.forceBlock||(e=!1===N.test(n));const r=ot(rt(e?n:`${n.trimEnd().replace(Y,\"\")}\\n\\n`,{_:e}));for(;\"string\"==typeof r[r.length-1]&&!r[r.length-1].trim();)r.pop();if(null===u.wrapper)return r;const o=u.wrapper||(e?\"span\":\"div\");let c;if(r.length>1||u.forceWrapper)c=r;else{if(1===r.length)return c=r[0],\"string\"==typeof c?G(\"span\",{key:\"outer\"},c):c;c=null}return t.createElement(o,{key:\"outer\"},c)}function q(n){const e=n.match(a);return e?e.reduce(function(n,e,o){const c=e.indexOf(\"=\");if(-1!==c){const a=function(t){return-1!==t.indexOf(\"-\")&&null===t.match(A)&&(t=t.replace(B,function(t,n){return n.toUpperCase()})),t}(e.slice(0,c)).trim(),_=function(t){const n=t[0];return('\"'===n||\"'\"===n)&&t.length>=2&&t[t.length-1]===n?t.slice(1,-1):t}(e.slice(c+1).trim()),u=r[a]||a,i=n[u]=function(t,n){return\"style\"===t?n.split(/;\\s?/).reduce(function(t,n){const e=n.slice(0,n.indexOf(\":\"));return t[e.replace(/(-[a-z])/g,t=>t[1].toUpperCase())]=n.slice(e.length+1).trim(),t},{}):\"href\"===t?Bt(n):(n.match(L)&&(n=n.slice(1,n.length-1)),\"true\"===n||\"false\"!==n&&n)}(a,_);\"string\"==typeof i&&(S.test(i)||E.test(i))&&(n[u]=t.cloneElement(H(i.trim()),{key:o}))}else\"style\"!==e&&(n[r[e]||e]=!0);return n},{}):null}const U=[],nt={},et={blockQuote:{t:Mt(i),i:Gt.HIGH,l:(t,n,e)=>({$:n(t[0].replace(l,\"\"),e)}),h:(t,n,e)=>G(\"blockquote\",{key:e.k},n(t.$,e))},breakLine:{t:It(s),i:Gt.HIGH,l:Nt,h:(t,n,e)=>G(\"br\",{key:e.k})},breakThematic:{t:Mt(f),i:Gt.HIGH,l:Nt,h:(t,n,e)=>G(\"hr\",{key:e.k})},codeBlock:{t:Mt(p),i:Gt.MAX,l:t=>({$:t[0].replace(/^ {4}/gm,\"\").replace(/\\n+$/,\"\"),M:void 0}),h:(t,e,r)=>G(\"pre\",{key:r.k},G(\"code\",n({},t.I,{className:t.M?`lang-${t.M}`:\"\"}),t.$))},codeFenced:{t:Mt(d),i:Gt.MAX,l:t=>({I:q(t[3]||\"\"),$:t[4],M:t[2]||void 0,type:\"codeBlock\"})},codeInline:{t:Lt(m),i:Gt.LOW,l:t=>({$:t[2]}),h:(t,n,e)=>G(\"code\",{key:e.k},t.$)},footnote:{t:Mt(h),i:Gt.MAX,l:t=>(U.push({O:t[2],B:t[1]}),{}),h:Zt},footnoteReference:{t:Et(k),i:Gt.HIGH,l:t=>({$:t[1],R:`#${u.slugify(t[1])}`}),h:(t,n,e)=>G(\"a\",{key:e.k,href:Bt(t.R)},G(\"sup\",{key:e.k},t.$))},gfmTask:{t:Et(b),i:Gt.HIGH,l:t=>({T:\"x\"===t[1].toLowerCase()}),h:(t,n,e)=>G(\"input\",{checked:t.T,key:e.k,readOnly:!0,type:\"checkbox\"})},heading:{t:Mt(v),i:Gt.HIGH,l:(t,n,e)=>({$:Tt(n,t[2],e),j:u.slugify(t[2]),C:t[1].length}),h:(t,n,e)=>G(`h${t.C}`,{id:t.j,key:e.k},n(t.$,e))},headingSetext:{t:Mt($),i:Gt.MAX,l:(t,n,e)=>({$:Tt(n,t[1],e),C:\"=\"===t[2]?1:2,type:\"heading\"})},htmlComment:{t:It(w),i:Gt.HIGH,l:()=>({}),h:Zt},image:{t:Lt(xt),i:Gt.HIGH,l:t=>({D:t[1],R:Rt(t[2]),N:t[3]}),h:(t,n,e)=>G(\"img\",{key:e.k,alt:t.D||void 0,title:t.N||void 0,src:Bt(t.R)})},link:{t:Et(kt),i:Gt.LOW,l:(t,n,e)=>({$:jt(n,t[1],e),R:Rt(t[2]),N:t[3]}),h:(t,n,e)=>G(\"a\",{key:e.k,href:Bt(t.R),title:t.N},n(t.$,e))},linkAngleBraceStyleDetector:{t:Et(O),i:Gt.MAX,l:t=>({$:[{$:t[1],type:\"text\"}],R:t[1],type:\"link\"})},linkBareUrlDetector:{t:(t,n)=>n.Z?null:Et(M)(t,n),i:Gt.MAX,l:t=>({$:[{$:t[1],type:\"text\"}],R:t[1],N:void 0,type:\"link\"})},linkMailtoDetector:{t:Et(I),i:Gt.MAX,l(t){let n=t[1],e=t[1];return _.test(e)||(e=\"mailto:\"+e),{$:[{$:n.replace(\"mailto:\",\"\"),type:\"text\"}],R:e,type:\"link\"}}},orderedList:ht(G,1),unorderedList:ht(G,2),newlineCoalescer:{t:Mt(g),i:Gt.LOW,l:Nt,h:()=>\"\\n\"},paragraph:{t:Ot,i:Gt.LOW,l:Dt,h:(t,n,e)=>G(\"p\",{key:e.k},n(t.$,e))},ref:{t:Et(T),i:Gt.MAX,l:t=>(nt[t[1]]={R:t[2],N:t[4]},{}),h:Zt},refImage:{t:Lt(j),i:Gt.MAX,l:t=>({D:t[1]||void 0,F:t[2]}),h:(t,n,e)=>G(\"img\",{key:e.k,alt:t.D,src:Bt(nt[t.F].R),title:nt[t.F].N})},refLink:{t:Et(C),i:Gt.MAX,l:(t,n,e)=>({$:n(t[1],e),P:n(t[0].replace(D,\"\\\\$1\"),e),F:t[2]}),h:(t,n,e)=>nt[t.F]?G(\"a\",{key:e.k,href:Bt(nt[t.F].R),title:nt[t.F].N},n(t.$,e)):G(\"span\",{key:e.k},n(t.P,e))},table:{t:Mt(R),i:Gt.HIGH,l:wt,h:(t,n,e)=>G(\"table\",{key:e.k},G(\"thead\",null,G(\"tr\",null,t.L.map(function(r,o){return G(\"th\",{key:o,style:At(t,o)},n(r,e))}))),G(\"tbody\",null,t.A.map(function(r,o){return G(\"tr\",{key:o},r.map(function(r,o){return G(\"td\",{key:o,style:At(t,o)},n(r,e))}))})))},tableSeparator:{t:function(t,n){return n.v?F.exec(t):null},i:Gt.HIGH,l:function(){return{type:\"tableSeparator\"}},h:()=>\" | \"},text:{t:It(K),i:Gt.MIN,l:t=>({$:t[0].replace(z,(t,n)=>u.namedCodesToUnicode[n]?u.namedCodesToUnicode[n]:t)}),h:t=>t.$},textBolded:{t:Lt(V),i:Gt.MED,l:(t,n,e)=>({$:n(t[2],e)}),h:(t,n,e)=>G(\"strong\",{key:e.k},n(t.$,e))},textEmphasized:{t:Lt(W),i:Gt.LOW,l:(t,n,e)=>({$:n(t[2],e)}),h:(t,n,e)=>G(\"em\",{key:e.k},n(t.$,e))},textEscaped:{t:Lt(J),i:Gt.HIGH,l:t=>({$:t[1],type:\"text\"})},textMarked:{t:Lt(Q),i:Gt.LOW,l:Dt,h:(t,n,e)=>G(\"mark\",{key:e.k},n(t.$,e))},textStrikethroughed:{t:Lt(X),i:Gt.LOW,l:Dt,h:(t,n,e)=>G(\"del\",{key:e.k},n(t.$,e))}};!0!==u.disableParsingRawHTML&&(et.htmlBlock={t:It(S),i:Gt.HIGH,l(t,n,e){const[,r]=t[3].match(tt),o=new RegExp(`^${r}`,\"gm\"),a=t[3].replace(o,\"\"),_=(u=a,vt.some(t=>t.test(u))?Ct:Tt);var u;const i=t[1].toLowerCase(),l=-1!==c.indexOf(i);e.Z=e.Z||\"a\"===i;const s=l?t[3]:_(n,a,e);return e.Z=!1,{I:q(t[2]),$:s,G:l,H:l?i:t[1]}},h:(t,e,r)=>G(t.H,n({key:r.k},t.I),t.G?t.$:e(t.$,r))},et.htmlSelfClosing={t:It(E),i:Gt.HIGH,l:t=>({I:q(t[2]||\"\"),H:t[1]}),h:(t,e,r)=>G(t.H,n({},t.I,{key:r.k}))});const rt=function(t){let n=Object.keys(t);function e(r,o){let c=[],a=\"\";for(;r;){let _=0;for(;_<n.length;){const u=n[_],i=t[u],l=i.t(r,o,a);if(l){const t=l[0];r=r.substring(t.length);const n=i.l(l,e,o);null==n.type&&(n.type=u),c.push(n),a=t;break}_++}}return c}return n.sort(function(n,e){let r=t[n].i,o=t[e].i;return r!==o?r-o:n<e?-1:1}),function(t,n){return e(function(t){return t.replace(y,\"\\n\").replace(x,\"\").replace(Z,\"    \")}(t),n)}}(et),ot=(ct=function(t){return function(n,e,r){return t[n.type].h(n,e,r)}}(et),function t(n,e={}){if(Array.isArray(n)){const r=e.k,o=[];let c=!1;for(let r=0;r<n.length;r++){e.k=r;const a=t(n[r],e),_=\"string\"==typeof a;_&&c?o[o.length-1]+=a:null!==a&&o.push(a),c=_}return e.k=r,o}return ct(n,t,e)});var ct;const at=H(e);return U.length?G(\"div\",null,at,G(\"footer\",{key:\"footer\"},U.map(function(t){return G(\"div\",{id:u.slugify(t.B),key:t.B},t.B,ot(rt(t.O,{_:!0})))}))):at}!function(t){t[t.MAX=0]=\"MAX\",t[t.HIGH=1]=\"HIGH\",t[t.MED=2]=\"MED\",t[t.LOW=3]=\"LOW\",t[t.MIN=4]=\"MIN\"}(Gt||(Gt={}));export default n=>{let{children:r,options:o}=n,c=function(t,n){if(null==t)return{};var e,r,o={},c=Object.keys(t);for(r=0;r<c.length;r++)n.indexOf(e=c[r])>=0||(o[e]=t[e]);return o}(n,e);return t.cloneElement(Ht(r,o),c)};export{Ht as compiler};\n//# sourceMappingURL=index.modern.js.map\n","// extracted by mini-css-extract-plugin\nexport var btnDiv = \"seed-module--btnDiv--0df87\";\nexport var closeBtn = \"seed-module--closeBtn--d13c5\";","import React from \"react\"\nimport Markdown from \"markdown-to-jsx\";\nimport ReactShadowRoot from \"react-shadow-root\";\nimport Modal from \"./Modal\";\nimport * as seedStyles from \"../styles/seed.module.css\"\n\nexport default function Seed(props) {\n    return (\n        <div>\n            <Modal open={props.open}>\n                <div className={seedStyles.btnDiv}>\n                    <button onClick={() => props.handleOpen(false)} className={seedStyles.closeBtn}>X CLOSE</button>\n                </div>\n                <div>\n                    <ReactShadowRoot>\n                        <Markdown children={props.mkdStr}/>\n                    </ReactShadowRoot>\n                </div>\n            </Modal>\n        </div>\n    );\n\n\n}","// extracted by mini-css-extract-plugin\nexport var bar = \"buttonbar-module--bar--1e83f\";\nexport var barBtn = \"buttonbar-module--barBtn--bfe24\";","import React from \"react\"\nimport * as btnBarStyles from \"../styles/buttonbar.module.css\"\n\nexport default function ButtonBar({ setHintModal, setProjectModal, setERegModal, isEditReg, isProj }) {\n    return (\n        <header className={btnBarStyles.bar}>\n            <button onClick={() => setHintModal(true)} className={btnBarStyles.barBtn}>HINT</button>\n            {isEditReg && <button onClick={() => setERegModal(true)} className={btnBarStyles.barBtn}>CODE</button>}\n            {isProj && <button onClick={() => setProjectModal(true)} className={btnBarStyles.barBtn}>VIEW PROJECT</button>}\n        </header>\n    )\n}","// extracted by mini-css-extract-plugin\nexport var btnDiv = \"code-module--btnDiv--bc5eb\";\nexport var closeBtn = \"code-module--closeBtn--e12f7\";\nexport var codeDiv = \"code-module--codeDiv--5eec0\";\nexport var codeWrapper = \"code-module--codeWrapper--b27dc\";","import React from \"react\"\nimport Markdown from \"markdown-to-jsx\"\nimport Modal from \"./Modal\"\nimport * as codeStyles from \"../styles/code.module.css\"\n//import ElementTree from \"./ElementTree\"\n\nexport default function EditReg(props) {\n    return (\n        <Modal open={props.open}>\n            <div className={codeStyles.codeWrapper}>\n                <div className={codeStyles.btnDiv}>\n                    <button onClick={() => props.handleOpen(false)} className={codeStyles.closeBtn}>X CLOSE</button>\n                </div>\n                <div className={codeStyles.codeDiv}>\n                    {props.data.length > 0 && props.data.map((item, i) => <Markdown children={item.text} key={i}  /> )} \n                     {/* {props.data.length > 0 && React.createElement(\"div\", null, props.data[0].code)}  */}\n                </div>\n            </div>\n        </Modal>\n    )\n}\n","// extracted by mini-css-extract-plugin\nexport var lessonTitle = \"lesson-module--lessonTitle--a74a2\";\nexport var lessonWrapper = \"lesson-module--lessonWrapper--f5ba6\";","import React from 'react'\nimport Layout from \"../components/Layout\"\nimport { graphql } from 'gatsby'\nimport { remark } from \"remark\";\nimport normalizeObject from \"../js/normalizeObj\"\nimport parseMd from \"../js/parseMd\"\nimport Description from \"../components/Description\";\nimport Hint from \"../components/Hint\"\nimport Seed from \"../components/Seed\";\nimport ButtonBar from \"../components/ButtonBar\";\nimport EditReg from \"../components/EditReg\"\nimport * as lessonStyles from \"../styles/lesson.module.css\"\n\n\nexport default function Lesson({ data }) {\n\n  const [desc, setDesc] = React.useState(\"\")\n  const [hint, setHint] = React.useState(\"\")\n  const [seeder, setSeeder] = React.useState(\"\")\n  const [editable, setEditable] = React.useState(\"\")\n  const [hintModalOpen, setHintModal] = React.useState(false)\n  const [isProj, setIsProj] = React.useState(false)\n  const [projectModalOpen, setProjectModal] = React.useState(false)\n  const [isEditReg, setEditReg] = React.useState(false)\n  const [isERegOpen, setERegOpen] = React.useState(false)\n\n  React.useEffect(() => {\n    let markdown = data.markdownRemark.rawMarkdownBody\n    remark()\n      .use(() => tree => {\n        let data = parseMd(tree.children)\n        setDesc(data.description)\n        setHint(data.hints)\n        setSeeder(data.seed)\n        data.seed.length > 0 && setIsProj(true)\n        setEditable(data.editReg)\n        data.editReg.length > 0 && data.editReg !== \"\\n\\n\" && setEditReg(true)\n      })\n      .processSync(normalizeObject(markdown))\n  }, [data.markdownRemark.rawMarkdownBody])\n\n  return (\n    <Layout>\n      <ButtonBar setHintModal={setHintModal} setProjectModal={setProjectModal} isEditReg={isEditReg} setERegModal={setERegOpen} isProj={isProj} />\n      <div className={lessonStyles.lessonWrapper}>\n        <h2 className={lessonStyles.lessonTitle}>{data.markdownRemark.frontmatter.title}</h2>\n        <Description data={desc} />\n        <Hint data={hint} open={hintModalOpen} handleOpen={setHintModal} />\n        {\n          isProj && <Seed mkdStr={seeder} open={projectModalOpen} handleOpen={setProjectModal} />\n        }\n        {\n          isEditReg && <EditReg data={editable} handleOpen={setERegOpen} open={isERegOpen} />\n        }\n      </div>\n    </Layout>\n  )\n}\nexport const lessonQuery = graphql`\n    query lessonQuery($id: String) {\n      markdownRemark(frontmatter: {id: {eq: $id}}) {\n        id\n        frontmatter {\n          challengeType\n          dashedName\n          title\n          id\n        }\n        rawMarkdownBody\n      }\n    }\n    `\n","/*!\n * Determine if an object is a Buffer\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n\nmodule.exports = function isBuffer (obj) {\n  return obj != null && obj.constructor != null &&\n    typeof obj.constructor.isBuffer === 'function' && obj.constructor.isBuffer(obj)\n}\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _reactDom = _interopRequireDefault(require(\"react-dom\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nfunction _typeof(obj) { \"@babel/helpers - typeof\"; if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nvar constructableStylesheetsSupported = typeof window !== 'undefined' && window.ShadowRoot && window.ShadowRoot.prototype.hasOwnProperty('adoptedStyleSheets') && window.CSSStyleSheet && window.CSSStyleSheet.prototype.hasOwnProperty('replace');\nvar shadowRootSupported = typeof window !== 'undefined' && window.Element && window.Element.prototype.hasOwnProperty('attachShadow');\n\nvar _default = /*#__PURE__*/function (_React$PureComponent) {\n  _inherits(_default, _React$PureComponent);\n\n  var _super = _createSuper(_default);\n\n  /**\n   * @param {object} props Properties passed to the component\n   * @param {boolean} props.declarative  When true, uses a declarative shadow root\n   * @param {boolean} props.delegatesFocus  Expands the focus behavior of elements within the shadow DOM.\n   * @param {string} props.mode Sets the mode of the shadow root. (open or closed)\n   * @param {CSSStyleSheet[]} props.stylesheets Takes an array of CSSStyleSheet objects for constructable stylesheets.\n   */\n  function _default(props) {\n    var _this;\n\n    _classCallCheck(this, _default);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      initialized: false\n    });\n\n    _this.placeholder = _react[\"default\"].createRef();\n    return _this;\n  }\n\n  _createClass(_default, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          delegatesFocus = _this$props.delegatesFocus,\n          mode = _this$props.mode,\n          stylesheets = _this$props.stylesheets;\n      this.shadowRoot = this.placeholder.current.parentNode.attachShadow({\n        delegatesFocus: delegatesFocus,\n        mode: mode\n      });\n\n      if (stylesheets) {\n        this.shadowRoot.adoptedStyleSheets = stylesheets;\n      }\n\n      this.setState({\n        initialized: true\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      if (!this.state.initialized) {\n        if (this.props.declarative) {\n          // @ts-ignore\n          return /*#__PURE__*/_react[\"default\"].createElement(\"template\", {\n            ref: this.placeholder,\n            shadowroot: this.props.mode\n          }, this.props.children);\n        }\n\n        return /*#__PURE__*/_react[\"default\"].createElement(\"span\", {\n          ref: this.placeholder\n        });\n      }\n\n      return _reactDom[\"default\"].createPortal(this.props.children, this.shadowRoot);\n    }\n  }]);\n\n  return _default;\n}(_react[\"default\"].PureComponent);\n\nexports[\"default\"] = _default;\n\n_defineProperty(_default, \"constructableStylesheetsSupported\", constructableStylesheetsSupported);\n\n_defineProperty(_default, \"constructibleStylesheetsSupported\", constructableStylesheetsSupported);\n\n_defineProperty(_default, \"defaultProps\", {\n  declarative: false,\n  delegatesFocus: false,\n  mode: 'open'\n});\n\n_defineProperty(_default, \"displayName\", 'ReactShadowRoot');\n\n_defineProperty(_default, \"propTypes\", {\n  declarative: _propTypes[\"default\"].bool,\n  delegatesFocus: _propTypes[\"default\"].bool,\n  mode: _propTypes[\"default\"].oneOf(['open', 'closed']),\n  stylesheets: _propTypes[\"default\"].arrayOf(typeof window !== 'undefined' ? _propTypes[\"default\"].instanceOf(window.CSSStyleSheet) : _propTypes[\"default\"].any)\n});\n\n_defineProperty(_default, \"shadowRootSupported\", shadowRootSupported);","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports[\"default\"] = void 0;\n\nvar _ReactShadowRoot = _interopRequireDefault(require(\"./ReactShadowRoot.js\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { \"default\": obj }; }\n\nvar _default = _ReactShadowRoot[\"default\"];\nexports[\"default\"] = _default;"],"names":["isCallable","tryToString","$TypeError","TypeError","module","exports","argument","isObject","$String","String","toIndexedObject","toAbsoluteIndex","lengthOfArrayLike","createMethod","IS_INCLUDES","$this","el","fromIndex","value","O","length","index","includes","indexOf","uncurryThis","toString","stringSlice","slice","it","TO_STRING_TAG_SUPPORT","classofRaw","TO_STRING_TAG","wellKnownSymbol","$Object","Object","CORRECT_ARGUMENTS","arguments","tag","result","undefined","key","error","tryGet","callee","hasOwn","ownKeys","getOwnPropertyDescriptorModule","definePropertyModule","target","source","exceptions","keys","defineProperty","f","getOwnPropertyDescriptor","i","DESCRIPTORS","createPropertyDescriptor","object","bitmap","enumerable","configurable","writable","makeBuiltIn","defineGlobalProperty","options","simple","name","global","unsafe","nonConfigurable","nonWritable","fails","get","document","EXISTS","createElement","getBuiltIn","match","version","userAgent","process","Deno","versions","v8","split","createNonEnumerableProperty","defineBuiltIn","copyConstructorProperties","isForced","targetProperty","sourceProperty","descriptor","TARGET","GLOBAL","STATIC","stat","prototype","dontCallGetSet","forced","sham","exec","test","bind","hasOwnProperty","NATIVE_BIND","call","Function","apply","FunctionPrototype","getDescriptor","PROPER","CONFIGURABLE","fn","namespace","method","aCallable","V","P","func","toObject","floor","Math","charAt","replace","SUBSTITUTION_SYMBOLS","SUBSTITUTION_SYMBOLS_NO_NAMED","matched","str","position","captures","namedCaptures","replacement","tailPos","m","symbols","ch","capture","n","check","globalThis","window","self","g","this","a","classof","propertyIsEnumerable","store","functionToString","inspectSource","set","has","NATIVE_WEAK_MAP","shared","sharedKey","hiddenKeys","OBJECT_ALREADY_INITIALIZED","WeakMap","state","wmget","wmhas","wmset","metadata","facade","STATE","enforce","getterFor","TYPE","type","feature","detection","data","normalize","POLYFILL","NATIVE","string","toLowerCase","MATCH","isRegExp","isPrototypeOf","USE_SYMBOL_AS_UID","$Symbol","toLength","obj","CONFIGURABLE_FUNCTION_NAME","InternalStateModule","enforceInternalState","getInternalState","CONFIGURABLE_LENGTH","TEMPLATE","getter","setter","arity","constructor","join","ceil","trunc","x","V8_VERSION","getOwnPropertySymbols","symbol","Symbol","IE8_DOM_DEFINE","V8_PROTOTYPE_DEFINE_BUG","anObject","toPropertyKey","$defineProperty","$getOwnPropertyDescriptor","ENUMERABLE","WRITABLE","Attributes","current","propertyIsEnumerableModule","internalObjectKeys","concat","getOwnPropertyNames","push","names","$propertyIsEnumerable","NASHORN_BUG","input","pref","val","valueOf","getOwnPropertyNamesModule","getOwnPropertySymbolsModule","that","hasIndices","ignoreCase","multiline","dotAll","unicode","unicodeSets","sticky","regExpFlags","RegExpPrototype","RegExp","R","flags","uid","SHARED","IS_PURE","mode","copyright","license","toIntegerOrInfinity","max","min","integer","IndexedObject","requireObjectCoercible","number","isSymbol","getMethod","ordinaryToPrimitive","TO_PRIMITIVE","exoticToPrim","toPrimitive","id","postfix","random","NATIVE_SYMBOL","iterator","WellKnownSymbolsStore","symbolFor","createWellKnownSymbol","withoutSetter","description","$","getRegExpFlags","getSubstitution","REPLACE","stringIndexOf","searchValue","proto","replaceAll","replaceValue","IS_REG_EXP","replacer","searchString","functionalReplace","searchLength","advanceBy","endOfLastMatch","toStr","gOPD","isArray","arr","Array","isPlainObject","hasOwnConstructor","hasIsPrototypeOf","setProperty","newValue","getProperty","extend","src","copy","copyIsArray","clone","deep","Nav","className","to","allDirectory","edges","map","edge","formatName","node","path","relativePath","useStaticQuery","props","children","word","toUpperCase","bail","getPrototypeOf","toStringTag","trough","fns","pipeline","run","values","middlewareIndex","callback","pop","next","output","middleware","called","wrapped","parameters","fnExpectsCallback","done","Promise","then","Error","wrap","use","middelware","stringifyPosition","point","line","column","pos","start","end","VFileMessage","reason","place","origin","parts","super","message","stack","fatal","ruleId","file","actual","expected","url","note","basename","ext","assertPath","seenNonSlash","charCodeAt","firstNonSlashEnd","extIndex","dirname","unmatchedSlash","extname","startPart","startDot","preDotState","code","segments","joined","absolute","allowAboveRoot","lastSlashIndex","lastSegmentLength","lastSlash","dots","lastIndexOf","normalizeString","sep","JSON","stringify","proc","cwd","isUrl","fileUrlOrPath","href","urlToPath","URL","protocol","hostname","pathname","third","decodeURIComponent","getPathFromURLPosix","order","VFile","buffer","messages","history","stored","prop","assertNonEmpty","assertPart","stem","encoding","info","fail","part","unified","base","transformers","attachers","frozen","freezeIndex","processor","assertUnfrozen","own","Parser","Compiler","freeze","attacher","transformer","Number","POSITIVE_INFINITY","settings","addPlugin","addList","addPreset","assign","add","plugin","plugins","entry","parse","doc","vfile","assertParser","newable","assertCompiler","assertNode","compile","executor","resolve","reject","tree","runSync","complete","assertDone","processSync","destination","asyncName","Boolean","looksLikeAVFile","emptyOptions","one","includeImageAlt","includeHtml","alt","splice","list","remove","items","chunkStart","from","unshift","syntaxExtension","all","extension","hook","left","right","constructs","existing","before","asciiAlpha","regexCheck","asciiDigit","asciiHexDigit","asciiAlphanumeric","asciiPunctuation","asciiAtext","asciiControl","markdownLineEndingOrSpace","markdownLineEnding","markdownSpace","unicodeWhitespace","unicodePunctuation","regex","fromCharCode","factorySpace","effects","ok","limit","size","enter","prefix","consume","exit","content","tokenize","contentStart","attempt","parser","contentInitial","lineStart","previous","token","contentType","childFlow","childToken","lineStartOffset","continued","item","containerState","continuation","documentContinue","checkNewContainers","_closeFlow","closeFlow","indexBeforeExits","events","indexBeforeFlow","exitContainers","documentContinued","currentConstruct","concrete","flowStart","interrupt","_gfmTableDynamicInterruptHack","containerConstruct","thereIsANewContainer","thereIsNoNewContainer","lazy","now","offset","containerContinue","flow","_tokenizer","flowContinue","writeToChild","eof","stream","sliceStream","defineSkip","write","seen","nok","disable","null","blankLine","partial","subtokenize","jumps","event","lineIndex","otherIndex","otherEvent","subevents","more","_isInFirstContentOfListItem","subcontent","_container","eventIndex","context","startPosition","startPositions","tokenizer","childEvents","gaps","adjust","breaks","_gfmTasklistFirstContentOfListItem","contentEnd","continuationConstruct","contentContinue","prefixed","tail","sliceSerialize","initial","flowInitial","afterConstruct","resolver","resolveAll","createResolver","initializeFactory","field","text","notText","atBreak","resolveAllLineSuffixes","extraResolver","chunks","tabs","bufferIndex","chunk","_index","_bufferIndex","createTokenizer","initialize","columnStart","resolveAllConstructs","consumed","accountForPotentialSkip","fields","constructFactory","construct","addResult","onsuccessfulcheck","expandTabs","atTab","serializeChunks","main","expectedCode","startIndex","startBufferIndex","endIndex","endBufferIndex","view","sliceChunks","chunkIndex","go","_","restore","onreturn","returnState","bogusState","listOfConstructs","constructIndex","handleListOfConstructs","def","handleMapOfConstructs","handleConstruct","startPoint","startPrevious","startCurrentConstruct","startEventsIndex","startStack","create","resolveTo","thematicBreak","marker","sequence","initialSize","kind","atMarker","inside","onBlank","listItemPrefixWhitespaceConstruct","endOfPrefix","otherPrefix","initialBlankLine","notBlank","furtherBlankLines","notInCurrentItem","indentConstruct","blockQuote","open","after","factoryDestination","literalType","literalMarkerType","rawType","stringType","balance","destinationEnclosedBefore","destinationRaw","destinationEnclosed","destinationEnclosedEscape","destinationRawEscape","factoryLabel","markerType","label","labelEscape","factoryTitle","atFirstTitleBreak","atTitleBreak","title","titleEscape","factoryWhitespace","normalizeIdentifier","definition","identifier","labelAfter","titleConstruct","defined","codeIndented","afterStartPrefix","afterPrefix","indentedContent","headingAtx","fenceOpenInside","headingBreak","setextUnderline","paragraph","closingSequence","closingSequenceEnd","heading","htmlBlockNames","htmlRawNames","htmlFlow","startTag","declarationStart","tagCloseStart","continuationDeclarationInside","tagName","commentOpenInside","cdataOpenInside","basicSelfClosing","completeAttributeNameBefore","completeClosingTagAfter","completeEnd","completeAttributeName","completeAttributeNameAfter","completeAttributeValueBefore","completeAttributeValueQuoted","completeAttributeValueUnquoted","completeAttributeValueQuotedAfter","completeAfter","continuationCommentInside","continuationRawTagOpen","continuationClose","continuationCharacterDataInside","continuationAtLineEnding","nextBlankConstruct","htmlContinueStart","htmlLineEnd","continuationRawEndTag","codeFenced","closingFenceConstruct","closingSequenceStart","sizeOpen","nonLazyLine","initialPrefix","sequenceOpen","infoOpen","openAfter","infoAfter","meta","decodeNamedCharacterReference","characterReference","innerHTML","char","textContent","numeric","characterEscape","lineEnding","labelEnd","labelStart","_balanced","_inactive","balanced","afterLabelEnd","resourceConstruct","fullReferenceConstruct","collapsedReferenceConstruct","close","media","group","insideSpan","destinationAfter","between","afterLabel","labelStartImage","classifyCharacter","attention","attentionMarkers","_open","_close","openingSequence","nextEvents","movePoint","autolink","schemeOrEmailAtext","emailAtext","schemeInsideOrEmailAtext","urlInside","emailAtSignOrDot","emailLabel","emailValue","htmlText","declarationOpen","instruction","tagOpen","commentOpen","cdataOpen","declaration","commentStart","commentStartDash","comment","commentClose","atLineEnding","cdata","cdataClose","cdataEnd","instructionClose","tagClose","tagCloseBetween","tagOpenBetween","tagOpenAttributeName","tagOpenAttributeNameAfter","tagOpenAttributeValueBefore","tagOpenAttributeValueQuoted","tagOpenAttributeValueUnquoted","tagOpenAttributeValueQuotedAfter","labelStartLink","hardBreakEscape","codeText","gap","tailExitIndex","headEnterIndex","extensions","combineExtensions","search","decodeNumericCharacterReference","parseInt","characterEscapeOrReference","decodeString","decode","$0","$1","$2","head","hex","fromMarkdown","config","transforms","canContainEols","opener","link","autolinkProtocol","onenterdata","autolinkEmail","atxHeading","codeFlow","codeFencedFenceInfo","codeFencedFenceMeta","codeTextData","codeFlowValue","definitionDestinationString","definitionLabelString","definitionTitleString","emphasis","hardBreak","hardBreakTrailing","html","htmlFlowData","htmlTextData","image","listItem","listItemValue","onenterlistitemvalue","listOrdered","onenterlistordered","listUnordered","reference","onenterreference","referenceString","resourceDestinationString","resourceTitleString","setextHeading","strong","closer","atxHeadingSequence","onexitatxheadingsequence","onexitautolinkemail","onexitautolinkprotocol","characterEscapeValue","onexitdata","characterReferenceMarkerHexadecimal","onexitcharacterreferencemarker","characterReferenceMarkerNumeric","characterReferenceValue","onexitcharacterreferencevalue","onexitcodefenced","codeFencedFence","onexitcodefencedfence","onexitcodefencedfenceinfo","onexitcodefencedfencemeta","onexitcodeindented","onexitcodetext","onexitdefinitiondestinationstring","onexitdefinitionlabelstring","onexitdefinitiontitlestring","onexithardbreak","onexithtmlflow","onexithtmltext","onexitimage","onexitlabel","labelText","onexitlabeltext","onexitlineending","onexitlink","onexitreferencestring","onexitresourcedestinationstring","onexitresourcetitlestring","resource","onexitresource","onexitsetextheading","setextHeadingLineSequence","onexitsetextheadinglinesequence","setextHeadingText","onexitsetextheadingtext","configure","mdastExtensions","tokenStack","resume","setData","getData","listStack","prepareList","handler","defaultOnError","firstBlankLineIndex","containerBalance","listSpread","tailIndex","tailEvent","_spread","and","errorHandler","onExitError","lang","depth","referenceType","ancestor","fragment","ordered","spread","checked","compiler","postprocess","atCarriageReturn","endPosition","lastIndex","preprocess","d","combined","blank","patternInScope","pattern","listInScope","inConstruct","notInConstruct","none","_1","character","formatCodeAsIndented","fences","checkQuote","quote","checkEmphasis","tracker","createTracker","move","containerPhrasing","peek","convert","castFactory","typeFactory","tests","checks","any","anyFactory","propsFactory","EXIT","visitParents","visitor","reverse","is","step","factory","parents","visit","subresult","grandparents","toResult","parent","formatHeadingAsSetext","literalWithBreak","setext","suffix","subexit","safe","imageReference","associationId","patternCompile","_compiled","inlineCode","expression","formatLinkAsAutolink","raw","resourceLink","linkReference","checkBullet","bullet","checkBulletOrdered","bulletOrdered","checkRule","rule","phrasing","checkStrong","handle","blockquote","shift","indentLines","containerFlow","break","fence","checkFence","repeat","substring","count","longestStreak","encode","rank","closeAtx","bulletCurrent","bulletOther","bulletOrderedOther","checkBulletOrderedOther","checkBulletOther","bulletLastUsed","useDifferentMarker","firstListItem","indexStack","listItemIndent","style","checkListItemIndent","incrementListMarker","root","hasPhrasing","some","ruleSpaces","repetition","ruleRepetition","checkRuleRepetition","fullPhrasingSpans","association","eol","numerical","b","escapeBackslashes","positions","results","whole","track","lineShift","toMarkdown","containerPhrasingBound","containerFlowBound","safeBound","handlers","tightDefinitions","joinDefinition","invalid","unknown","zwitch","child","infos","sort","remark","normalizeObject","headReg","tailReg","seedReg","cutOffTail","splitCode","editable","codeStr","htmlData","cssData","jsData","newCssData","notSoClassyHtml","htmlStr","jStr","mkdStr","filter","trim","hints","seed","editableRegion","endDesc","startHint","endHint","startSeed","startSeedContents","forEach","parseCodeStr","germinateSeeds","editReg","React","setElementType","y","wrapper","Description","descStyles","modal","Modal","modalStyles","btnDiv","closeBtn","hintDiv","hintWrapper","Hint","hintStyles","onClick","handleOpen","t","e","r","reduce","for","o","amp","apos","gt","lt","nbsp","quot","c","u","l","s","p","h","k","v","S","z","w","A","E","L","M","I","B","T","j","C","D","N","Z","F","G","H","q","U","W","Q","X","J","K","Y","tt","nt","et","rt","ot","ct","at","_t","ut","st","ft","dt","pt","mt","yt","ht","Gt","HIGH","kt","xt","bt","vt","$t","St","zt","wt","At","textAlign","Et","Lt","Mt","It","Ot","endsWith","every","trimEnd","Bt","Rt","Tt","jt","Ct","Dt","Nt","Zt","Ft","Pt","Ht","overrides","slugify","namedCodesToUnicode","forceInline","forceBlock","forceWrapper","breakLine","breakThematic","codeBlock","MAX","codeInline","LOW","footnote","footnoteReference","gfmTask","readOnly","headingSetext","htmlComment","linkAngleBraceStyleDetector","linkBareUrlDetector","linkMailtoDetector","orderedList","unorderedList","newlineCoalescer","ref","refImage","refLink","table","tableSeparator","MIN","textBolded","MED","textEmphasized","textEscaped","textMarked","textStrikethroughed","disableParsingRawHTML","htmlBlock","htmlSelfClosing","Seed","seedStyles","bar","barBtn","ButtonBar","setHintModal","setProjectModal","setERegModal","isEditReg","isProj","btnBarStyles","codeDiv","codeWrapper","EditReg","codeStyles","lessonTitle","lessonWrapper","Lesson","desc","setDesc","hint","setHint","seeder","setSeeder","setEditable","hintModalOpen","setIsProj","projectModalOpen","setEditReg","isERegOpen","setERegOpen","markdown","markdownRemark","rawMarkdownBody","parseMd","Layout","lessonStyles","frontmatter","isBuffer","_react","_interopRequireDefault","_reactDom","_propTypes","__esModule","_typeof","_defineProperties","_createSuper","Derived","Super","_getPrototypeOf","Reflect","Proxy","Date","_isNativeReflectConstruct","NewTarget","_assertThisInitialized","_possibleConstructorReturn","ReferenceError","setPrototypeOf","__proto__","_setPrototypeOf","_defineProperty","constructableStylesheetsSupported","ShadowRoot","CSSStyleSheet","shadowRootSupported","Element","_default","_React$PureComponent","subClass","superClass","_inherits","Constructor","protoProps","staticProps","_super","_this","instance","_classCallCheck","initialized","placeholder","createRef","_this$props","delegatesFocus","stylesheets","shadowRoot","parentNode","attachShadow","adoptedStyleSheets","setState","createPortal","declarative","shadowroot","PureComponent","bool","oneOf","arrayOf","instanceOf"],"sourceRoot":""}