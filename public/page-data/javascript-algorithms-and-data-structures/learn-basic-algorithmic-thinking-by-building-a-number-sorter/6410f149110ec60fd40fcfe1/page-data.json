{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-basic-algorithmic-thinking-by-building-a-number-sorter/6410f149110ec60fd40fcfe1/","result":{"data":{"markdownRemark":{"id":"32a3429f-af42-5745-8f3a-6eaebdf981e0","frontmatter":{"challengeType":0,"dashedName":"step-22","title":"Step 22","id":"6410f149110ec60fd40fcfe1"},"rawMarkdownBody":"\n# --description--\n\nTime to implement another sorting algorithm. This time, you'll be implementing a <dfn>selection sort</dfn>. Selection sort works by finding the smallest value in the array, then swapping it with the first value in the array. Then, it finds the next smallest value in the array, and swaps it with the second value in the array. It continues iterating through the array until it is completely sorted.\n\nStart by declaring a `selectionSort` variable and assigning it an arrow function that takes an `array` parameter.\n\n# --hints--\n\nYou should use `const` to declare a `selectionSort` variable.\n\n```js\nassert.match(code, /const\\s+selectionSort\\s*=/);\n```\n\n`selectionSort` should be a function.\n\n```js\nassert.isFunction(selectionSort);\n```\n\n`selectionSort` should use arrow syntax.\n\n```js\nassert.match(code, /const\\s+selectionSort\\s*=\\s*\\(?.*\\)?\\s*=>/);\n```\n\n`selectionSort` should take a single `array` parameter.\n\n```js\nassert.match(code, /const\\s+selectionSort\\s*=\\s*\\(?\\s*array/);\n```\n\n`selectionSort` should be empty.\n\n```js\nassert.match(code, /const\\s+selectionSort\\s*=\\s*\\(?\\s*array\\s*\\)?\\s*=>\\s*{\\s*}/);\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"UTF-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"./styles.css\" />\n    <title>Number Sorter</title>\n  </head>\n  <body>\n    <main>\n      <h1>Number Sorter</h1>\n      <form id=\"form\" class=\"form\">\n        <h2>Input:</h2>\n        <fieldset>\n          <span class=\"bracket\">[</span>\n          <div>\n            <select\n              name=\"values\"\n              class=\"values-dropdown\"\n              aria-label=\"first number\"\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\" selected>8</option>\n              <option value=\"9\">9</option>\n            </select>\n            <span class=\"comma\">,</span>\n          </div>\n          <div>\n            <select\n              name=\"values\"\n              class=\"values-dropdown\"\n              aria-label=\"second number\"\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\" selected>2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n            <span class=\"comma\">,</span>\n          </div>\n          <div>\n            <select\n              name=\"values\"\n              class=\"values-dropdown\"\n              aria-label=\"third number\"\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\" selected>4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n            <span class=\"comma\">,</span>\n          </div>\n          <div>\n            <select\n              name=\"values\"\n              class=\"values-dropdown\"\n              aria-label=\"fourth number\"\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\" selected>1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\">3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n            <span class=\"comma\">,</span>\n          </div>\n          <div>\n            <select\n              name=\"values\"\n              class=\"values-dropdown\"\n              aria-label=\"fifth number\"\n            >\n              <option value=\"0\">0</option>\n              <option value=\"1\">1</option>\n              <option value=\"2\">2</option>\n              <option value=\"3\" selected>3</option>\n              <option value=\"4\">4</option>\n              <option value=\"5\">5</option>\n              <option value=\"6\">6</option>\n              <option value=\"7\">7</option>\n              <option value=\"8\">8</option>\n              <option value=\"9\">9</option>\n            </select>\n          </div>\n          <span class=\"bracket\">]</span>\n        </fieldset>\n        <button id=\"sort\">Sort</button>\n      </form>\n      <div class=\"output-container\">\n        <h2>Output:</h2>\n        <div class=\"output-array\">\n          <span class=\"bracket\">[</span>\n          <div>\n            <span class=\"output-value\" id=\"output-value-0\">0</span>\n            <span class=\"comma\">,</span>\n          </div>\n          <div>\n            <span class=\"output-value\" id=\"output-value-1\">0</span>\n            <span class=\"comma\">,</span>\n          </div>\n          <div>\n            <span class=\"output-value\" id=\"output-value-2\">0</span>\n            <span class=\"comma\">,</span>\n          </div>\n          <div>\n            <span class=\"output-value\" id=\"output-value-3\">0</span>\n            <span class=\"comma\">,</span>\n          </div>\n          <div>\n            <span class=\"output-value\" id=\"output-value-4\">0</span>\n          </div>\n            <span class=\"bracket\">]</span>\n        </div>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n```\n\n```css\n:root {\n  --gray-00: #ffffff;\n  --gray-05: #f5f6f7;\n  --gray-15: #d0d0d5;\n  --gray-75: #3b3b4f;\n  --gray-85: #1b1b32;\n  --gray-90: #0a0a23;\n  --error: #a94442;\n  --danger-color: #850000;\n  --danger-background: #ffadad;\n}\n\n*,\n::before,\n::after {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  font-family: \"Lato\", Helvetica, Arial, sans-serif;\n  font-size: 18px;\n  background-color: var(--gray-85);\n  color: var(--gray-05);\n}\n\nmain {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n}\n\nh1 {\n  text-align: center;\n  margin: 30px auto;\n}\n\nh2 {\n  margin-bottom: 15px;\n}\n\nform {\n  width: 100%;\n  padding: 15px auto;\n  text-align: center;\n  padding: 15px;\n}\n\nfieldset {\n  border: 0 none;\n  height: 100%;\n  margin: auto;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n}\n\nfieldset div {\n  display: flex;\n  justify-content: center;\n  align-items: center;\n}\n\n.bracket,\n.comma {\n  font-size: 2.3em;\n}\n\nform .comma {\n  margin-left: 2px;\n}\n\nselect {\n  font-family: inherit;\n  font-size: inherit;\n  line-height: inherit;\n  min-height: 38px;\n  width: 50px;\n  text-align: center;\n}\n\nbutton {\n  outline: none;\n  cursor: pointer;\n  margin-top: 15px;\n  text-decoration: none;\n  background-image: linear-gradient(#fecc4c, #ffac33);\n  border: 3px solid #feac32;\n  padding: 10px 16px;\n  font-size: 23px;\n  width: 100%;\n}\n\n.output-container {\n  width: 95%;\n  min-height: 55px;\n  margin-top: 25px;\n  border-radius: 0;\n  padding: 15px;\n  overflow-wrap: break-word;\n  text-align: center;\n}\n\n.output-array {\n  width: 100%;\n  margin: auto;\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n}\n\n.output-value {\n  font-size: 2em;\n}\n\n.alert {\n  background-color: var(--danger-background);\n  border: 3px solid var(--danger-color);\n  color: var(--danger-color);\n}\n\n@media (min-width: 550px) {\n  form,\n  .output-container {\n    max-width: 480px;\n  }\n\n  fieldset {\n    max-width: 400px;\n  }\n\n  .output-array {\n    max-width: 420px;\n  }\n}\n```\n\n```js\nconst sortButton = document.getElementById(\"sort\");\n\nconst sortInputArray = (event) => {\n  event.preventDefault();\n\n  const inputValues = [\n    ...document.getElementsByClassName(\"values-dropdown\")\n  ].map((dropdown) => Number(dropdown.value));\n\n  const sortedValues = bubbleSort(inputValues);\n\n  updateUI(sortedValues);\n}\n\nconst updateUI = (array = []) => {\n  array.forEach((num, i) => {\n    const outputValueNode = document.getElementById(`output-value-${i}`);\n    outputValueNode.innerText = num;\n  })\n}\n\nconst bubbleSort = (array) => {\n  for (let i = 0; i < array.length; i++) {\n    for (let j = 0; j < array.length - 1; j++) {\n      if (array[j] > array[j + 1]) {\n        const temp = array[j];\n        array[j] = array[j + 1];\n        array[j + 1] = temp;\n      }\n    }\n  }\n\n  return array;\n}\n\n--fcc-editable-region--\n\n--fcc-editable-region--\n\nsortButton.addEventListener(\"click\", sortInputArray);\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-basic-algorithmic-thinking-by-building-a-number-sorter","id":"6410f149110ec60fd40fcfe1","dashedName":"step-22"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}