{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/build-a-caesars-cipher-project/56533eb9ac21ba0edf2244e2/","result":{"data":{"markdownRemark":{"id":"d1738b66-9910-5661-ab33-681a4a185e07","frontmatter":{"challengeType":5,"dashedName":"build-a-caesars-cipher","title":"Build a Caesars Cipher","id":"56533eb9ac21ba0edf2244e2"},"rawMarkdownBody":"\n# --description--\n\nOne of the simplest and most widely known <dfn>ciphers</dfn> is a <dfn>Caesar cipher</dfn>, also known as a <dfn>shift cipher</dfn>. In a shift cipher the meanings of the letters are shifted by some set amount.\n\nA common modern use is the <a href=\"#\"target=\"_blank\" rel=\"noopener noreferrer nofollow\">ROT13</a> cipher, where the values of the letters are shifted by 13 places. Thus `A ↔ N`, `B ↔ O` and so on.\n\nWrite a function which takes a <a href=\"#\"target=\"_blank\" rel=\"noopener noreferrer nofollow\">ROT13</a> encoded string as input and returns a decoded string.\n\nAll letters will be uppercase. Do not transform any non-alphabetic character (i.e. spaces, punctuation), but do pass them on.\n\n# --hints--\n\n`rot13(\"SERR PBQR PNZC\")` should decode to the string `FREE CODE CAMP`\n\n```js\nassert(rot13('SERR PBQR PNZC') === 'FREE CODE CAMP');\n```\n\n`rot13(\"SERR CVMMN!\")` should decode to the string `FREE PIZZA!`\n\n```js\nassert(rot13('SERR CVMMN!') === 'FREE PIZZA!');\n```\n\n`rot13(\"SERR YBIR?\")` should decode to the string `FREE LOVE?`\n\n```js\nassert(rot13('SERR YBIR?') === 'FREE LOVE?');\n```\n\n`rot13(\"GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT.\")` should decode to the string `THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.`\n\n```js\nassert(\n  rot13('GUR DHVPX OEBJA SBK WHZCF BIRE GUR YNML QBT.') ===\n    'THE QUICK BROWN FOX JUMPS OVER THE LAZY DOG.'\n);\n```\n\n# --seed--\n\n## --seed-contents--\n\n```js\n\nfunction rot13(str) {\n  return str;\n}\n\nrot13(\"SERR PBQR PNZC\");\n```\n\n\n# --solutions--\n\n```js\nvar lookup = {\n  'A': 'N','B': 'O','C': 'P','D': 'Q',\n  'E': 'R','F': 'S','G': 'T','H': 'U',\n  'I': 'V','J': 'W','K': 'X','L': 'Y',\n  'M': 'Z','N': 'A','O': 'B','P': 'C',\n  'Q': 'D','R': 'E','S': 'F','T': 'G',\n  'U': 'H','V': 'I','W': 'J','X': 'K',\n  'Y': 'L','Z': 'M'\n};\n\nfunction rot13(encodedStr) {\n  var codeArr = encodedStr.split(\"\");  // String to Array\n  var decodedArr = []; // Your Result goes here\n  // Only change code below this line\n\n  decodedArr = codeArr.map(function(letter) {\n    if(lookup.hasOwnProperty(letter)) {\n      letter = lookup[letter];\n    }\n    return letter;\n  });\n\n  // Only change code above this line\n  return decodedArr.join(\"\"); // Array to String\n}\n\n```\n\n\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/build-a-caesars-cipher-project","id":"56533eb9ac21ba0edf2244e2","dashedName":"build-a-caesars-cipher"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}