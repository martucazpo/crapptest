{"componentChunkName":"component---src-templates-lesson-jsx","path":"/responsive-web-design/learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet/61fd5a93fd62bb35968adeab/","result":{"data":{"markdownRemark":{"id":"6c4d83a3-73dd-52cb-a42a-97e7299535d2","frontmatter":{"challengeType":0,"dashedName":"step-1","title":"Step 1","id":"61fd5a93fd62bb35968adeab"},"rawMarkdownBody":"\n# --description--\n\nSet up your HTML with the `DOCTYPE`, `html` indicating this document is in English, `head`, and `body` elements.\n\nGive your `head` element the appropriate `meta` elements for the `charset` and `viewport`, a `title` element with an appropriate title, and a `link` element for your stylesheet.\n\n# --hints--\n\nYour code should have a `<!DOCTYPE html>` declaration.\n\n```js\nassert(code.match(/<!DOCTYPE html>/i));\n```\n\nYour code should have an `html` element.\n\n```js\nassert.equal(document.querySelectorAll('html')?.length, 1);\n```\n\nYour `html` element should have an opening tag with a `lang` attribute of `en`.\n\n```js\nassert(code.match(/<html\\s+lang\\s*=\\s*('|\")en\\1\\s*>/gi));\n```\n\nYour `html` element should have a closing tag.\n\n```js\nassert(code.match(/<\\/html\\s*>/));\n```\n\nYour code should have a `head` element within the `html` element.\n\n```js\nassert.equal(document.querySelectorAll('head')?.length, 1);\n```\n\nYour code should have a `body` element within the `html` element.\n\n```js\nassert.equal(document.querySelectorAll('body')?.length, 1);\n```\n\nYour `head` element should come before your `body` element.\n\n```js\nassert.equal(document.querySelector('body')?.previousElementSibling?.tagName, 'HEAD');\n```\n\nYou should have two `meta` elements.\n\n```js\nconst meta = document.querySelectorAll('meta');\nassert.equal(meta?.length, 2);\n```\n\nOne `meta` element should have a `name` set to `viewport`, and `content` set to `width=device-width, initial-scale=1.0`.\n\n```js\nconst meta = [...document.querySelectorAll('meta')];\nconst target = meta?.find(m => m?.getAttribute('name') === 'viewport' && m?.getAttribute('content') === 'width=device-width, initial-scale=1.0' && !m?.getAttribute('charset'));\nassert.exists(target);\n```\n\nThe other `meta` element should have the `charset` attribute set to `UTF-8`.\n\n```js\nconst meta = [...document.querySelectorAll('meta')];\nconst target = meta?.find(m => !m?.getAttribute('name') && !m?.getAttribute('content') && m?.getAttribute('charset')?.toLowerCase() === 'utf-8');\nassert.exists(target);\n```\n\nYour code should have a `title` element.\n\n```js\nconst title = document.querySelector('title');\nassert.exists(title);\n```\n\nYour `title` should have some text.\n\n```js\nconst title = document.querySelector('title');\nassert.isAtLeast(title?.textContent?.length, 1);\n```\n\nYour code should have a `link` element.\n\n```js\nassert(/<link/.test(code))\n```\n\nYour `link` element should be within your `head` element.\n\n```js\nassert(code.match(/<head>[\\w\\W\\s]*<link[\\w\\W\\s]*\\/?>[\\w\\W\\s]*<\\/head>/i))\n```\n\nYour `link` element should have a `rel` attribute with the value `stylesheet`.\n\n```js\nassert.match(code, /<link[\\s\\S]*?rel=('|\"|`)stylesheet\\1/)\n```\n\nYour `link` element should have an `href` attribute with the value `styles.css`.\n\n```js\nassert.match(code, /<link[\\s\\S]*?href=('|\"|`)(\\.\\/)?styles\\.css\\1/)\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n--fcc-editable-region--\n\n--fcc-editable-region--\n```\n\n```css\n\n```\n"}},"pageContext":{"relativeDirectory":"responsive-web-design/learn-more-about-css-pseudo-selectors-by-building-a-balance-sheet","id":"61fd5a93fd62bb35968adeab","dashedName":"step-1"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}