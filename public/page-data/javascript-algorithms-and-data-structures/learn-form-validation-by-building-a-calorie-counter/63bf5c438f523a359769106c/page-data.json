{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-form-validation-by-building-a-calorie-counter/63bf5c438f523a359769106c/","result":{"data":{"markdownRemark":{"id":"f059b377-2106-5af0-8dea-a9b7fdcf4dfd","frontmatter":{"challengeType":0,"dashedName":"step-35","title":"Step 35","id":"63bf5c438f523a359769106c"},"rawMarkdownBody":"\n# --description--\n\nStrings have a `.match()` method, which takes a regex argument. `.match()` will return an array of match results â€“ containing either the first match, or all matches if the global flag is used.\n\nReturn the result of calling the `.match()` method on `str` and passing your `regex` variable as the argument. You'll use this match result later on.\n\n# --hints--\n\nYour `isInvalidInput` function should call the `.match()` method on `str`.\n\n```js\nassert.match(isInvalidInput.toString(), /str\\.match\\(/);\n```\n\nYou should pass `regex` as the argument to the `.match()` method.\n\n```js\nassert.match(isInvalidInput.toString(), /str\\.match\\(\\s*regex\\s*\\)/);\n```\n\nYour `isInvalidInput` function should directly return the result of the `.match()` call.\n\n```js\nassert.match(isInvalidInput.toString(), /return\\s+str\\.match\\(\\s*regex\\s*\\)/);\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\n    <link rel=\"stylesheet\" href=\"styles.css\" />\n    <title>Calorie Counter</title>\n  </head>\n  <body>\n    <main>\n      <h1>Calorie Counter</h1>\n      <div class=\"container\">\n        <form id=\"calorie-counter\">\n          <label for=\"budget\">Budget</label>\n          <input\n            type=\"number\"\n            min=\"0\"\n            id=\"budget\"\n            placeholder=\"Daily calorie budget\"\n            required\n          />\n          <fieldset id=\"breakfast\">\n            <legend>Breakfast</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"lunch\">\n            <legend>Lunch</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"dinner\">\n            <legend>Dinner</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"snacks\">\n            <legend>Snacks</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <fieldset id=\"exercise\">\n            <legend>Exercise</legend>\n            <div class=\"input-container\"></div>\n          </fieldset>\n          <div class=\"controls\">\n            <span>\n              <label for=\"entry-dropdown\">Add food or exercise:</label>\n              <select id=\"entry-dropdown\" name=\"options\">\n                <option value=\"breakfast\" selected>Breakfast</option>\n                <option value=\"lunch\">Lunch</option>\n                <option value=\"dinner\">Dinner</option>\n                <option value=\"snacks\">Snacks</option>\n                <option value=\"exercise\">Exercise</option>\n              </select>\n              <button type=\"button\" id=\"add-entry\">Add Entry</button>\n            </span>\n          </div>\n          <div>\n            <button type=\"submit\" id=\"calculate-calories\">\n              Calculate Remaining Calories\n            </button>\n            <button type=\"button\" id=\"clear\">Clear</button>\n          </div>\n        </form>\n        <div id=\"output\" class=\"output hide\"></div>\n      </div>\n    </main>\n    <script src=\"./script.js\"></script>\n  </body>\n</html>\n```\n\n```css\nbody {\n  font-family: \"Lato\", Arial;\n}\n\nh1 {\n  text-align: center;\n}\n\n.container {\n  width: 90%;\n  max-width: 680px;\n}\n\nh1,\n.container,\n.output {\n  margin: 20px auto;\n}\n\nlabel,\nlegend {\n  font-weight: bold;\n}\n\n.input-container {\n  display: flex;\n  flex-direction: column;\n}\n\nbutton:hover {\n  cursor: pointer;\n}\n\nfieldset,\nlabel,\nbutton,\ninput,\nselect {\n  margin-bottom: 10px;\n}\n\n.output {\n  border: 2px solid black;\n  padding: 10px;\n  text-align: center;\n}\n\n.hide {\n  display: none;\n}\n\n.output span {\n  font-weight: bold;\n  font-size: 1.2em;\n}\n\n.surplus {\n  color: #006627;\n}\n\n.deficit {\n  color: #B30000;\n}\n```\n\n```js\nconst calorieCounter = document.getElementById('calorie-counter');\nconst budgetNumberInput = document.getElementById('budget');\nconst entryDropdown = document.getElementById('entry-dropdown');\nconst addEntryButton = document.getElementById('add-entry');\nconst clearButton = document.getElementById('clear');\nconst output = document.getElementById('output');\nlet isError = false;\n\nfunction cleanInputString(str) {\n  const regex = /[+-\\s]/g;\n  return str.replace(regex, '');\n}\n\n--fcc-editable-region--\nfunction isInvalidInput(str) {\n  const regex = /\\d+e\\d+/i;\n\n}\n--fcc-editable-region--\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-form-validation-by-building-a-calorie-counter","id":"63bf5c438f523a359769106c","dashedName":"step-35"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}