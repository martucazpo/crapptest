{"componentChunkName":"component---src-templates-lesson-jsx","path":"/javascript-algorithms-and-data-structures/learn-basic-javascript-by-building-a-role-playing-game/62a3b365f1cdeb33efc2502e/","result":{"data":{"markdownRemark":{"id":"914a3763-166b-5959-8259-76e440c467a5","frontmatter":{"challengeType":0,"dashedName":"step-23","title":"Step 23","id":"62a3b365f1cdeb33efc2502e"},"rawMarkdownBody":"\n# --description--\n\nYou have been declaring your variables with the `var` keyword. However, in modern JavaScript it is best practice to use the `let` keyword instead. This fixes several unusual behaviors with `var` that can make your code difficult to debug.\n\nChange all of your `var` keywords to `let`.\n\n# --hints--\n\nYou should not have any `var` keywords in your code.\n\n```js\nassert.notMatch(code, /var/);\n```\n\nYou should use the `let` keyword to declare your `xp` variable.\n\n```js\nassert.match(code, /let xp/);\n```\n\nYou should use the `let` keyword to declare your `health` variable.\n\n```js\nassert.match(code, /let health/);\n```\n\nYou should use the `let` keyword to declare your `gold` variable.\n\n```js\nassert.match(code, /let gold/);\n```\n\nYou should use the `let` keyword to declare your `currentWeapon` variable.\n\n```js\nassert.match(code, /let currentWeapon/);\n```\n\nYou should not change the values of your variables.\n\n```js\nassert.equal(xp, 0);\nassert.equal(health, 100);\nassert.equal(gold, 50);\nassert.equal(currentWeapon, 0);\n```\n\n# --seed--\n\n## --seed-contents--\n\n```html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"utf-8\">\n    <link rel=\"stylesheet\" href=\"./styles.css\">\n    <title>RPG - Dragon Repeller</title>\n    <script src=\"./script.js\"></script>\n</head>\n<body>\n    <div id=\"game\">\n        <div id=\"stats\">\n            <span class=\"stat\">XP: <strong><span id=\"xpText\">0</span></strong></span>\n            <span class=\"stat\">Health: <strong><span id=\"healthText\">100</span></strong></span>\n            <span class=\"stat\">Gold: <strong><span id=\"goldText\">50</span></strong></span>\n        </div>\n        <div id=\"controls\">\n            <button id=\"button1\">Go to store</button>\n            <button id=\"button2\">Go to cave</button>\n            <button id=\"button3\">Fight dragon</button>\n        </div>\n        <div id=\"monsterStats\">\n            <span class=\"stat\">Monster Name: <strong><span id=\"monsterName\"></span></strong></span>\n            <span class=\"stat\">Health: <strong><span id=\"monsterHealth\"></span></strong></span>\n        </div>\n        <div id=\"text\">\n            Welcome to Dragon Repeller. You must defeat the dragon that is preventing people from leaving the town. You are in the town square. Where do you want to go? Use the buttons above.\n        </div>\n    </div>\n</body>\n</html>\n```\n\n```css\nbody {\n    background-color: darkblue;\n}\n\n#text {\n    background-color: black;\n    color: white;\n    padding: 10px;\n}\n\n#game {\n    max-width: 500px;\n    max-height: 400px;\n    background-color: lightgray;\n    color: white;\n    margin: 0 auto;\n    padding: 10px;\n}\n\n#controls, #stats {\n    border: 1px solid black;\n    padding: 5px;\n    color: black;\n}\n\n#monsterStats {\n    display: none;\n    border: 1px solid black;\n    padding: 5px;\n    color: white;\n    background-color: red;\n}\n\n.stat {\n    padding-right: 10px;\n}\n```\n\n```js\n--fcc-editable-region--\nvar xp = 0;\nvar health = 100;\nvar gold = 50;\nvar currentWeapon = 0;\n--fcc-editable-region--\n```\n"}},"pageContext":{"relativeDirectory":"javascript-algorithms-and-data-structures/learn-basic-javascript-by-building-a-role-playing-game","id":"62a3b365f1cdeb33efc2502e","dashedName":"step-23"}},"staticQueryHashes":["4279786174"],"slicesMap":{}}